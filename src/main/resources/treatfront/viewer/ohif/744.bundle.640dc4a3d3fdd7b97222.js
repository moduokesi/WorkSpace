"use strict";(globalThis.webpackChunk=globalThis.webpackChunk||[]).push([[744],{43418:(e,t,n)=>{n.d(t,{Z:()=>F,I:()=>O});var s=n(32735),r=n(60216),a=n.n(r),i=n(87519),o=n(38531),c=n(43803);const d=-1,u=0,l=1,S=2,p=3,y=4,m=5,I={id:"measurementTracking",initial:"idle",context:{trackedStudy:"",trackedSeries:[],ignoredSeries:[],prevTrackedStudy:"",prevTrackedSeries:[],prevIgnoredSeries:[],ignoredSRSeriesForHydration:[],isDirty:!1},states:{off:{type:"final"},idle:{entry:"clearContext",on:{TRACK_SERIES:"promptBeginTracking",SET_TRACKED_SERIES:[{target:"tracking",actions:["setTrackedStudyAndMultipleSeries","setIsDirtyToClean"]}],PROMPT_HYDRATE_SR:{target:"promptHydrateStructuredReport",cond:"hasNotIgnoredSRSeriesForHydration"},RESTORE_PROMPT_HYDRATE_SR:"promptHydrateStructuredReport",HYDRATE_SR:"hydrateStructuredReport"}},promptBeginTracking:{invoke:{src:"promptBeginTracking",onDone:[{target:"tracking",actions:["setTrackedStudyAndSeries","setIsDirty"],cond:"shouldSetStudyAndSeries"},{target:"off",cond:"shouldKillMachine"},{target:"idle"}],onError:{target:"idle"}}},tracking:{on:{TRACK_SERIES:[{target:"promptTrackNewStudy",cond:"isNewStudy"},{target:"promptTrackNewSeries",cond:"isNewSeries"}],UNTRACK_SERIES:[{target:"tracking",actions:["removeTrackedSeries","setIsDirty"],cond:"hasRemainingTrackedSeries"},{target:"idle"}],SET_TRACKED_SERIES:[{target:"tracking",actions:["setTrackedStudyAndMultipleSeries"]}],SAVE_REPORT:"promptSaveReport",SET_DIRTY:[{target:"tracking",actions:["setIsDirty"],cond:"shouldSetDirty"},{target:"tracking"}]}},promptTrackNewSeries:{invoke:{src:"promptTrackNewSeries",onDone:[{target:"tracking",actions:["addTrackedSeries","setIsDirty"],cond:"shouldAddSeries"},{target:"tracking",actions:["discardPreviouslyTrackedMeasurements","setTrackedStudyAndSeries","setIsDirty"],cond:"shouldSetStudyAndSeries"},{target:"promptSaveReport",cond:"shouldPromptSaveReport"},{target:"tracking"}],onError:{target:"idle"}}},promptTrackNewStudy:{invoke:{src:"promptTrackNewStudy",onDone:[{target:"tracking",actions:["discardPreviouslyTrackedMeasurements","setTrackedStudyAndSeries","setIsDirty"],cond:"shouldSetStudyAndSeries"},{target:"tracking",actions:["ignoreSeries"],cond:"shouldAddIgnoredSeries"},{target:"promptSaveReport",cond:"shouldPromptSaveReport"},{target:"tracking"}],onError:{target:"idle"}}},promptSaveReport:{invoke:{src:"promptSaveReport",onDone:[{target:"idle",actions:["clearAllMeasurements","showStructuredReportDisplaySetInActiveViewport"],cond:"shouldSaveAndContinueWithSameReport"},{target:"tracking",actions:["discardPreviouslyTrackedMeasurements","setTrackedStudyAndSeries"],cond:"shouldSaveAndStartNewReport"},{target:"tracking"}],onError:{target:"idle"}}},promptHydrateStructuredReport:{invoke:{src:"promptHydrateStructuredReport",onDone:[{target:"tracking",actions:["setTrackedStudyAndMultipleSeries","jumpToFirstMeasurementInActiveViewport","setIsDirtyToClean"],cond:"shouldHydrateStructuredReport"},{target:"idle",actions:["ignoreHydrationForSRSeries"],cond:"shouldIgnoreHydrationForSR"}],onError:{target:"idle"}}},hydrateStructuredReport:{invoke:{src:"hydrateStructuredReport",onDone:[{target:"tracking",actions:["setTrackedStudyAndMultipleSeries","jumpToFirstMeasurementInActiveViewport","setIsDirtyToClean"]}],onError:{target:"idle"}}}},strict:!0},g={services:{promptBeginTracking:(e,t)=>{},promptTrackNewStudy:(e,t)=>{},promptTrackNewSeries:(e,t)=>{}},actions:{discardPreviouslyTrackedMeasurements:(e,t)=>{console.log("discardPreviouslyTrackedMeasurements: not implemented")},clearAllMeasurements:(e,t)=>{console.log("clearAllMeasurements: not implemented")},jumpToFirstMeasurementInActiveViewport:(e,t)=>{console.warn("jumpToFirstMeasurementInActiveViewport: not implemented")},showStructuredReportDisplaySetInActiveViewport:(e,t)=>{console.warn("showStructuredReportDisplaySetInActiveViewport: not implemented")},clearContext:(0,i.assign)({trackedStudy:"",trackedSeries:[],ignoredSeries:[],prevTrackedStudy:"",prevTrackedSeries:[],prevIgnoredSeries:[]}),setTrackedStudyAndSeries:(0,i.assign)(((e,t)=>({prevTrackedStudy:e.trackedStudy,prevTrackedSeries:e.trackedSeries.slice(),prevIgnoredSeries:e.ignoredSeries.slice(),trackedStudy:t.data.StudyInstanceUID,trackedSeries:[t.data.SeriesInstanceUID],ignoredSeries:[]}))),setTrackedStudyAndMultipleSeries:(0,i.assign)(((e,t)=>{const n=t.StudyInstanceUID||t.data.StudyInstanceUID,s=t.SeriesInstanceUIDs||t.data.SeriesInstanceUIDs;return{prevTrackedStudy:e.trackedStudy,prevTrackedSeries:e.trackedSeries.slice(),prevIgnoredSeries:e.ignoredSeries.slice(),trackedStudy:n,trackedSeries:[...e.trackedSeries,...s],ignoredSeries:[]}})),setIsDirtyToClean:(0,i.assign)(((e,t)=>({isDirty:!1}))),setIsDirty:(0,i.assign)(((e,t)=>({isDirty:!0}))),ignoreSeries:(0,i.assign)(((e,t)=>({prevIgnoredSeries:[...e.ignoredSeries],ignoredSeries:[...e.ignoredSeries,t.data.SeriesInstanceUID]}))),ignoreHydrationForSRSeries:(0,i.assign)(((e,t)=>({ignoredSRSeriesForHydration:[...e.ignoredSRSeriesForHydration,t.data.srSeriesInstanceUID]}))),addTrackedSeries:(0,i.assign)(((e,t)=>({prevTrackedSeries:[...e.trackedSeries],trackedSeries:[...e.trackedSeries,t.data.SeriesInstanceUID]}))),removeTrackedSeries:(0,i.assign)(((e,t)=>({prevTrackedSeries:e.trackedSeries.slice().filter((e=>e!==t.SeriesInstanceUID)),trackedSeries:e.trackedSeries.slice().filter((e=>e!==t.SeriesInstanceUID))})))},guards:{shouldSetDirty:(e,t)=>void 0===t.SeriesInstanceUID||e.trackedSeries.includes(t.SeriesInstanceUID),shouldKillMachine:(e,t)=>t.data&&t.data.userResponse===d,shouldAddSeries:(e,t)=>t.data&&t.data.userResponse===S,shouldSetStudyAndSeries:(e,t)=>t.data&&t.data.userResponse===p,shouldAddIgnoredSeries:(e,t)=>t.data&&t.data.userResponse===y,shouldPromptSaveReport:(e,t)=>t.data&&t.data.userResponse===l,shouldIgnoreHydrationForSR:(e,t)=>t.data&&t.data.userResponse===u,shouldSaveAndContinueWithSameReport:(e,t)=>t.data&&t.data.userResponse===l&&!0===t.data.isBackupSave,shouldSaveAndStartNewReport:(e,t)=>t.data&&t.data.userResponse===l&&!1===t.data.isBackupSave,shouldHydrateStructuredReport:(e,t)=>t.data&&t.data.userResponse===m,hasRemainingTrackedSeries:(e,t)=>e.trackedSeries.length>1||!e.trackedSeries.includes(t.SeriesInstanceUID),hasNotIgnoredSRSeriesForHydration:(e,t)=>!e.ignoredSRSeriesForHydration.includes(t.SeriesInstanceUID),isNewStudy:(e,t)=>!e.ignoredSeries.includes(t.SeriesInstanceUID)&&e.trackedStudy!==t.StudyInstanceUID,isNewSeries:(e,t)=>!e.ignoredSeries.includes(t.SeriesInstanceUID)&&!e.trackedSeries.includes(t.SeriesInstanceUID)}},E={NO_NEVER:-1,CANCEL:0,CREATE_REPORT:1,ADD_SERIES:2,SET_STUDY_AND_SERIES:3};const D=function(e,t,n){let{servicesManager:s,extensionManager:r}=e;const{uiViewportDialogService:a}=s.services,{viewportIndex:i,StudyInstanceUID:o,SeriesInstanceUID:c}=n;return new Promise((async function(e,t){let n=await function(e,t){return new Promise((function(n,s){const r="Track measurements for this series?",a=[{id:"prompt-begin-tracking-cancel",type:"cancel",text:"No",value:E.CANCEL},{id:"prompt-begin-tracking-no-do-not-ask-again",type:"secondary",text:"No, do not ask again",value:E.NO_NEVER},{id:"prompt-begin-tracking-yes",type:"primary",text:"Yes",value:E.SET_STUDY_AND_SERIES}],i=t=>{e.hide(),n(t)};e.show({viewportIndex:t,id:"measurement-tracking-prompt-begin-tracking",type:"info",message:r,actions:a,onSubmit:i,onOutsideClick:()=>{e.hide(),n(E.CANCEL)}})}))}(a,i);e({userResponse:n,StudyInstanceUID:o,SeriesInstanceUID:c,viewportIndex:i})}))},v={NO_NEVER:-1,CANCEL:0,CREATE_REPORT:1,ADD_SERIES:2,SET_STUDY_AND_SERIES:3,NO_NOT_FOR_SERIES:4};const R=function(e,t,n){let{servicesManager:s,extensionManager:r}=e;const{UIViewportDialogService:a}=s.services,{viewportIndex:i,StudyInstanceUID:o,SeriesInstanceUID:c}=n;return new Promise((async function(e,n){let s=await function(e,t){return new Promise((function(n,s){const r="Do you want to add this measurement to the existing report?",a=[{type:"cancel",text:"Cancel",value:v.CANCEL},{type:"secondary",text:"Create new report",value:v.CREATE_REPORT},{type:"primary",text:"Add to existing report",value:v.ADD_SERIES}],i=t=>{e.hide(),n(t)};e.show({viewportIndex:t,type:"info",message:r,actions:a,onSubmit:i,onOutsideClick:()=>{e.hide(),n(v.CANCEL)}})}))}(a,i);s===v.CREATE_REPORT&&(s=t.isDirty?await function(e,t){return new Promise((function(n,s){const r="You have existing tracked measurements. What would you like to do with your existing tracked measurements?",a=[{type:"cancel",text:"Cancel",value:v.CANCEL},{type:"secondary",text:"Save",value:v.CREATE_REPORT},{type:"primary",text:"Discard",value:v.SET_STUDY_AND_SERIES}],i=t=>{e.hide(),n(t)};e.show({viewportIndex:t,type:"warning",message:r,actions:a,onSubmit:i,onOutsideClick:()=>{e.hide(),n(v.CANCEL)}})}))}(a,i):v.SET_STUDY_AND_SERIES),e({userResponse:s,StudyInstanceUID:o,SeriesInstanceUID:c,viewportIndex:i,isBackupSave:!1})}))},T={NO_NEVER:-1,CANCEL:0,CREATE_REPORT:1,ADD_SERIES:2,SET_STUDY_AND_SERIES:3,NO_NOT_FOR_SERIES:4};const f=function(e,t,n){let{servicesManager:s,extensionManager:r}=e;const{UIViewportDialogService:a}=s.services,{viewportIndex:i,StudyInstanceUID:o,SeriesInstanceUID:c}=n;return new Promise((async function(e,n){let s=await function(e,t){return new Promise((function(n,s){const r="Track measurements for this series?",a=[{type:"cancel",text:"No",value:T.CANCEL},{type:"secondary",text:"No, do not ask again for this series",value:T.NO_NOT_FOR_SERIES},{type:"primary",text:"Yes",value:T.SET_STUDY_AND_SERIES}],i=t=>{e.hide(),n(t)};e.show({viewportIndex:t,type:"info",message:r,actions:a,onSubmit:i,onOutsideClick:()=>{e.hide(),n(T.CANCEL)}})}))}(a,i);s===T.SET_STUDY_AND_SERIES&&(s=t.isDirty?await function(e,t){return new Promise((function(n,s){const r="Measurements cannot span across multiple studies. Do you want to save your tracked measurements?",a=[{type:"cancel",text:"Cancel",value:T.CANCEL},{type:"secondary",text:"No, discard previously tracked series & measurements",value:T.SET_STUDY_AND_SERIES},{type:"primary",text:"Yes",value:T.CREATE_REPORT}],i=t=>{e.hide(),n(t)};e.show({viewportIndex:t,type:"warning",message:r,actions:a,onSubmit:i,onOutsideClick:()=>{e.hide(),n(T.CANCEL)}})}))}(a,i):T.SET_STUDY_AND_SERIES),e({userResponse:s,StudyInstanceUID:o,SeriesInstanceUID:c,viewportIndex:i,isBackupSave:!1})}))};var k=n(48501);function h(){return s.createElement("div",{className:"text-primary-active"},"Loading...")}const w=async function(e,t,n,s,r){const{displaySetService:a,uiNotificationService:i,uiDialogService:o}=e.services,c=o.create({showOverlay:!0,isDraggable:!1,centralize:!0,content:h});try{const e=await t.runCommand("storeMeasurements",{measurementData:s,dataSource:n,additionalFindingTypes:["ArrowAnnotate"],options:r},"CORNERSTONE_STRUCTURED_REPORT");k.DicomMetadataStore.addInstances([e],!0);const o=a.getMostRecentDisplaySet();return i.show({title:"Create Report",message:"Measurements saved successfully",type:"success"}),[o]}catch(e){i.show({title:"Create Report",message:e.message||"Failed to store measurements",type:"error"})}finally{o.dismiss({id:c})}},U={NO_NEVER:-1,CANCEL:0,CREATE_REPORT:1,ADD_SERIES:2,SET_STUDY_AND_SERIES:3,NO_NOT_FOR_SERIES:4};const M=4700;const b=function(e,t,n){let{servicesManager:r,commandsManager:a,extensionManager:i}=e;const{uiDialogService:o,measurementService:d,displaySetService:u}=r.services,l=void 0===n.viewportIndex?n.data.viewportIndex:n.viewportIndex,S=void 0===n.isBackupSave?n.data.isBackupSave:n.isBackupSave,p=n?.data?.StudyInstanceUID,y=n?.data?.SeriesInstanceUID,{trackedStudy:m,trackedSeries:I}=t;let g;return new Promise((async function(e,t){const n=await function(e){return new Promise((function(t,n){let r;r=e.create({centralize:!0,isDraggable:!1,content:c.Vq,useLastPosition:!1,showOverlay:!0,contentProps:{title:"Create Report",value:{label:""},noCloseButton:!0,onClose:()=>{e.dismiss({id:r}),t({action:U.CANCEL,value:void 0})},actions:[{id:"cancel",text:"Cancel",type:"primary"},{id:"save",text:"Save",type:"secondary"}],onSubmit:n=>{let{action:s,value:a}=n;switch(e.dismiss({id:r}),s.id){case"save":t({action:U.CREATE_REPORT,value:a.label});break;case"cancel":t({action:U.CANCEL,value:void 0})}},body:n=>{let{value:a,setValue:i}=n;return s.createElement("div",{className:""},s.createElement(c.II,{label:"Enter the report name",labelClassName:"text-white grow leading-[1.2] text-[14px]",autoFocus:!0,className:"bg-black border-primary-main grow",type:"text",value:a.label,onChange:e=>{e.persist(),i((t=>({...t,label:e.target.value})))},onKeyPress:n=>{"Enter"===n.key&&(e.dismiss({id:r}),t({action:U.CREATE_REPORT,value:a.label}))}}))}}})}))}(o);if(n.action===U.CREATE_REPORT){const e=i.getDataSources()[0],t=d.getMeasurements().filter((e=>m===e.referenceStudyUID&&I.includes(e.referenceSeriesUID))),s=void 0===n.value||""===n.value?"Research Derived Series":n.value,o=function(e){const t=e.getActiveDisplaySets().filter((e=>"SR"===e.Modality)).map((e=>e.SeriesNumber));return Math.max(...t,M)+1}(u);g=await w(r,a,e,t,{SeriesDescription:s,SeriesNumber:o})}else n.action,U.CANCEL;e({userResponse:n.action,createdDisplaySetInstanceUIDs:g,StudyInstanceUID:p,SeriesInstanceUID:y,viewportIndex:l,isBackupSave:S})}))};var A=n(65948);const C={NO_NEVER:-1,CANCEL:0,CREATE_REPORT:1,ADD_SERIES:2,SET_STUDY_AND_SERIES:3,NO_NOT_FOR_SERIES:4,HYDRATE_REPORT:5};const x=function(e,t,n){let{servicesManager:s,extensionManager:r}=e;const{uiViewportDialogService:a,displaySetService:i}=s.services,{viewportIndex:o,displaySetInstanceUID:c}=n,d=i.getDisplaySetByUID(c);return new Promise((async function(e,t){const i=await function(e,t){return new Promise((function(n,s){const r="Do you want to continue tracking measurements for this study?",a=[{type:"secondary",text:"No",value:C.CANCEL},{type:"primary",text:"Yes",value:C.HYDRATE_REPORT}],i=t=>{e.hide(),n(t)};e.show({viewportIndex:t,type:"info",message:r,actions:a,onSubmit:i,onOutsideClick:()=>{e.hide(),n(C.CANCEL)}})}))}(a,o);let u,l;if(i===C.HYDRATE_REPORT){console.warn("!! HYDRATING STRUCTURED REPORT");const e=(0,A.hydrateStructuredReport)({servicesManager:s,extensionManager:r},c);u=e.StudyInstanceUID,l=e.SeriesInstanceUIDs}e({userResponse:i,displaySetInstanceUID:n.displaySetInstanceUID,srSeriesInstanceUID:d.SeriesInstanceUID,viewportIndex:o,StudyInstanceUID:u,SeriesInstanceUIDs:l})}))};const N=function(e,t,n){let{servicesManager:s,extensionManager:r}=e;const{displaySetService:a}=s.services,{viewportIndex:i,displaySetInstanceUID:o}=n,c=a.getDisplaySetByUID(o);return new Promise(((e,t)=>{const a=(0,A.hydrateStructuredReport)({servicesManager:s,extensionManager:r},o),d=a.StudyInstanceUID,u=a.SeriesInstanceUIDs;e({displaySetInstanceUID:n.displaySetInstanceUID,srSeriesInstanceUID:c.SeriesInstanceUID,viewportIndex:i,StudyInstanceUID:d,SeriesInstanceUIDs:u})}))},_=s.createContext();_.displayName="TrackedMeasurementsContext";const O=()=>(0,s.useContext)(_),P="@ohif/extension-cornerstone-dicom-sr.sopClassHandlerModule.dicom-sr";function V(e,t){let{servicesManager:n,commandsManager:r,extensionManager:a}=e,{children:d}=t;const[u,l]=(0,c.O_)(),{activeViewportIndex:S,viewports:p}=u,{measurementService:y,displaySetService:m}=n.services,E=Object.assign({},g);E.actions=Object.assign({},E.actions,{jumpToFirstMeasurementInActiveViewport:(e,t)=>{const{trackedStudy:n,trackedSeries:s}=e,r=y.getMeasurements().filter((e=>n===e.referenceStudyUID&&s.includes(e.referenceSeriesUID)));console.log("jumping to measurement reset viewport",u.activeViewportIndex,r[0]);const a=r[0].displaySetInstanceUID,i=m.getDisplaySetByUID(a).images,o=i[0].imageId.startsWith("volumeId"),c=r[0].data;let d=0;!o&&c&&(d=i.findIndex((e=>{const t=Object.keys(c)[0].substring(8);return e.imageId===t})),-1===d&&(console.warn("Could not find image index for tracked measurement, using 0"),d=0)),l.setDisplaySetsForViewport({viewportIndex:u.activeViewportIndex,displaySetInstanceUIDs:[a],viewportOptions:{initialImageOptions:{index:d}}})},showStructuredReportDisplaySetInActiveViewport:(e,t)=>{if(t.data.createdDisplaySetInstanceUIDs.length>0){const e=t.data.createdDisplaySetInstanceUIDs[0].displaySetInstanceUID;l.setDisplaySetsForViewport({viewportIndex:t.data.viewportIndex,displaySetInstanceUIDs:[e]})}},discardPreviouslyTrackedMeasurements:(e,t)=>{const n=y.getMeasurements().filter((t=>e.prevTrackedSeries.includes(t.referenceSeriesUID))).map((e=>e.id));for(let e=0;e<n.length;e++)y.remove(n[e])},clearAllMeasurements:(e,t)=>{const n=y.getMeasurements().map((e=>e.uid));for(let e=0;e<n.length;e++)y.remove(n[e])}}),E.services=Object.assign({},E.services,{promptBeginTracking:D.bind(null,{servicesManager:n,extensionManager:a}),promptTrackNewSeries:R.bind(null,{servicesManager:n,extensionManager:a}),promptTrackNewStudy:f.bind(null,{servicesManager:n,extensionManager:a}),promptSaveReport:b.bind(null,{servicesManager:n,commandsManager:r,extensionManager:a}),promptHydrateStructuredReport:x.bind(null,{servicesManager:n,extensionManager:a}),hydrateStructuredReport:N.bind(null,{servicesManager:n,extensionManager:a})});const v=(0,i.Machine)(I,E),[T,k,h]=(0,o.useMachine)(v);return(0,s.useEffect)((()=>{if(p.length>0){const e=p[S];if(!e||!e?.displaySetInstanceUIDs?.length)return;const{displaySetService:t}=n.services,s=t.getDisplaySetByUID(e.displaySetInstanceUIDs[0]);if(!s)return;s.SOPClassHandlerId===P&&!s.isLoaded&&s.load&&s.load(),s.SOPClassHandlerId===P&&!0===s.isRehydratable&&(console.log("sending event...",T),k("PROMPT_HYDRATE_SR",{displaySetInstanceUID:s.displaySetInstanceUID,SeriesInstanceUID:s.SeriesInstanceUID,viewportIndex:S}))}}),[S,k,n.services,p]),s.createElement(_.Provider,{value:[T,k]},d)}V.propTypes={children:a().oneOf([a().func,a().node]),servicesManager:a().object.isRequired,commandsManager:a().object.isRequired,extensionManager:a().object.isRequired};const F=function(e){let{servicesManager:t,extensionManager:n,commandsManager:s}=e;const r=V.bind(null,{servicesManager:t,extensionManager:n,commandsManager:s});return[{name:"TrackedMeasurementsContext",context:_,provider:r}]}},43744:(e,t,n)=>{n.r(t),n.d(t,{default:()=>_});var s=n(43418),r=n(32735),a=n(60216),i=n.n(a),o=n(48501),c=n(43803);const{formatDate:d}=o.utils;function u(e){let{servicesManager:t,getImageSrc:n,getStudiesForPatientByMRN:a,requestDisplaySetCreationForStudy:i,dataSource:o}=e;const{measurementService:u,displaySetService:l,uiDialogService:p,hangingProtocolService:y,uiNotificationService:m}=t.services,{StudyInstanceUIDs:I}=(0,c.zG)(),[{activeViewportIndex:g,viewports:E,numCols:D,numRows:v},R]=(0,c.O_)(),[T,f]=(0,s.I)(),[k,h]=(0,r.useState)("primary"),[w,U]=(0,r.useState)([...I]),[M,b]=(0,r.useState)([]),[A,C]=(0,r.useState)([]),[x,N]=(0,r.useState)({}),[_,O]=(0,r.useState)(null),P=E[g]?.displaySetInstanceUIDs;(0,r.useEffect)((()=>{const e=u.EVENTS.MEASUREMENT_ADDED,t=u.EVENTS.RAW_MEASUREMENT_ADDED,n=[];return[e,t].forEach((e=>{n.push(u.subscribe(e,(e=>{let{source:t,measurement:n}=e;const{referenceSeriesUID:s,referenceStudyUID:r}=n;f("SET_DIRTY",{SeriesInstanceUID:s}),f("TRACK_SERIES",{viewportIndex:g,StudyInstanceUID:r,SeriesInstanceUID:s})})).unsubscribe)})),()=>{n.forEach((e=>{e()}))}}),[u,g,f]);const{trackedSeries:V}=T.context;(0,r.useEffect)((()=>{I.forEach((e=>async function(e){const t=await o.query.studies.search({studyInstanceUid:e});let n=t;try{n=await a(t)}catch(e){console.warn(e)}const s=n.map((e=>({AccessionNumber:e.accession,StudyDate:e.date,StudyDescription:e.description,NumInstances:e.instances,ModalitiesInStudy:e.modalities,PatientID:e.mrn,PatientName:e.patientName,StudyInstanceUID:e.studyInstanceUid,StudyTime:e.time}))).map((e=>({studyInstanceUid:e.StudyInstanceUID,date:d(e.StudyDate),description:e.StudyDescription,modalities:e.ModalitiesInStudy,numInstances:e.NumInstances})));b((e=>{const t=[...e];for(const n of s)e.find((e=>e.studyInstanceUid===n.studyInstanceUid))||t.push(n);return t}))}(e)))}),[I,a]),(0,r.useEffect)((()=>{const e=l.activeDisplaySets;e.length&&e.forEach((async e=>{const t={},s=l.getDisplaySetByUID(e.displaySetInstanceUID),r=o.getImageIdsForDisplaySet(s),a=r[Math.floor(r.length/2)];a&&(t[e.displaySetInstanceUID]=await n(a),N((e=>({...e,...t}))))}))}),[l,o,n]),(0,r.useEffect)((()=>{const e=l.activeDisplaySets;if(!e.length)return;const t=S(e,x,V,E,R,o,l,p,m);C(t)}),[l.activeDisplaySets,V,E,o,x]),(0,r.useEffect)((()=>{const e=l.subscribe(l.EVENTS.DISPLAY_SETS_ADDED,(e=>{const{displaySetsAdded:t,options:s}=e;t.forEach((async e=>{const t=e.displaySetInstanceUID,r={},a=l.getDisplaySetByUID(t);s.madeInClient&&O(t);const i=o.getImageIdsForDisplaySet(a),c=i[Math.floor(i.length/2)];c&&(r[t]=await n(c),N((e=>({...e,...r}))))}))})),t=l.subscribe(l.EVENTS.DISPLAY_SETS_CHANGED,(e=>{const t=S(e,x,V,E,R,o,l,p,m);C(t)}));return()=>{e.unsubscribe(),t.unsubscribe()}}),[l,o,n,x,V,E]);const F=function(e,t,n,s){const r=[],a=[],i=[];t.forEach((t=>{const o=n.filter((e=>e.StudyInstanceUID===t.studyInstanceUid)),c=s.getDisplaySetSortFunction();o.sort(c);const d=Object.assign({},t,{displaySets:o});e.includes(t.studyInstanceUid)?(r.push(d),i.push(d)):(a.push(d),i.push(d))}));const o=(e,t)=>{const n=Date.parse(e);return Date.parse(t)-n},c=[{name:"primary",label:"Primary",studies:r.sort(((e,t)=>o(e.date,t.date)))},{name:"recent",label:"Recent",studies:a.sort(((e,t)=>o(e.date,t.date)))},{name:"all",label:"All",studies:i.sort(((e,t)=>o(e.date,t.date)))}];return c}(I,M,A,y);return(0,r.useEffect)((()=>{if(_){const e=_,t=document.getElementById(`thumbnail-${e}`);t&&"function"==typeof t.scrollIntoView&&(t.scrollIntoView({behavior:"smooth"}),O(null))}}),[_,w,k]),(0,r.useEffect)((()=>{if(!_)return;const e=function(e,t){for(let n=0;n<t.length;n++){const{studies:s}=t[n];for(let r=0;r<s.length;r++){const{displaySets:a}=s[r];for(let i=0;i<a.length;i++){if(a[i].displaySetInstanceUID===e)return{tabName:t[n].name,StudyInstanceUID:s[r].studyInstanceUid}}}}}(_,F);if(!e)return void console.warn("jumpToThumbnail: displaySet thumbnail not found.");const{tabName:t,StudyInstanceUID:n}=e;h(t);if(!w.includes(n)){const e=[...w,n];U(e)}}),[w,_,F]),r.createElement(c.eX,{tabs:F,servicesManager:t,activeTabName:k,expandedStudyInstanceUIDs:w,onClickStudy:function(e){const t=w.includes(e),n=t?[...w.filter((t=>t!==e))]:[...w,e];if(U(n),!t){i(l,e,!0)}},onClickTab:e=>{h(e)},onClickUntrack:e=>{const t=l.getDisplaySetByUID(e);f("UNTRACK_SERIES",{SeriesInstanceUID:t.SeriesInstanceUID})},onClickThumbnail:()=>{},onDoubleClickThumbnail:e=>{let t=[];const n=g;try{t=y.getViewportsRequireUpdate(n,e)}catch(e){console.warn(e),m.show({title:"Thumbnail Double Click",message:"The selected display sets could not be added to the viewport due to a mismatch in the Hanging Protocol rules.",type:"info",duration:3e3})}R.setDisplaySetsForViewports(t)},activeDisplaySetInstanceUIDs:P})}u.propTypes={servicesManager:i().object.isRequired,dataSource:i().shape({getImageIdsForDisplaySet:i().func.isRequired}).isRequired,getImageSrc:i().func.isRequired,getStudiesForPatientByMRN:i().func.isRequired,requestDisplaySetCreationForStudy:i().func.isRequired};const l=u;function S(e,t,n,s,a,i,o,u,l){const S=[],y=[];return e.filter((e=>!e.excludeFromThumbnailBrowser)).forEach((e=>{const m=t[e.displaySetInstanceUID],I=function(e){if(p.includes(e))return"thumbnailNoImage";return"thumbnailTracked"}(e.Modality),g=a.getNumViewportPanes(),E=1===g?[]:s.reduce(((t,n,s)=>(s<g&&n?.displaySetInstanceUIDs?.includes(e.displaySetInstanceUID)&&t.push(n.viewportLabel),t)),[]),D="thumbnailTracked"===I?S:y,{displaySetInstanceUID:v}=e,R={displaySetInstanceUID:v,description:e.SeriesDescription,seriesNumber:e.SeriesNumber,modality:e.Modality,seriesDate:d(e.SeriesDate),numInstances:e.numImageFrames,countIcon:e.countIcon,StudyInstanceUID:e.StudyInstanceUID,componentType:I,imageSrc:m,dragData:{type:"displayset",displaySetInstanceUID:v},isTracked:n.includes(e.SeriesInstanceUID),viewportIdentificator:E};"thumbnailNoImage"===I&&(i.reject&&i.reject.series?(R.canReject=!0,R.onReject=()=>{u.create({id:"ds-reject-sr",centralize:!0,isDraggable:!1,showOverlay:!0,content:c.Vq,contentProps:{title:"Delete Report",body:()=>r.createElement("div",{className:"p-4 text-white bg-primary-dark"},r.createElement("p",null,"Are you sure you want to delete this report?"),r.createElement("p",null,"This action cannot be undone.")),actions:[{id:"cancel",text:"Cancel",type:"secondary"},{id:"yes",text:"Yes",type:"primary",classes:["reject-yes-button"]}],onClose:()=>u.dismiss({id:"ds-reject-sr"}),onShow:()=>{document.querySelector(".reject-yes-button").focus()},onSubmit:async t=>{let{action:n}=t;switch(n.id){case"yes":try{await i.reject.series(e.StudyInstanceUID,e.SeriesInstanceUID),o.deleteDisplaySet(v),u.dismiss({id:"ds-reject-sr"}),l.show({title:"Delete Report",message:"Report deleted successfully",type:"success"})}catch(e){u.dismiss({id:"ds-reject-sr"}),l.show({title:"Delete Report",message:"Failed to delete report",type:"error"})}break;case"cancel":u.dismiss({id:"ds-reject-sr"})}}}})}):R.canReject=!1),D.push(R)})),[...S,...y]}const p=["SR","SEG","SM","RTSTRUCT","RTPLAN","RTDOSE","DOC","OT"];const y=function(e,t){return new Promise(((n,s)=>{const r=document.createElement("canvas");e.utilities.loadImageToCanvas({canvas:r,imageId:t}).then((e=>{n(r.toDataURL())})).catch(s)}))};const m=function(e,t,n,s){t.activeDisplaySets.some((e=>e.StudyInstanceUID===n))||e.retrieve.series.metadata({StudyInstanceUID:n,madeInClient:s})};function I(e){let{commandsManager:t,extensionManager:n,servicesManager:s}=e;const a=n.getActiveDataSource()[0],i=function(e){const t=e.getModuleEntry("@ohif/extension-default.utilityModule.common"),{getStudiesForPatientByMRN:n}=t.exports;return n}(n),o=i.bind(null,a),c=function(e){const t=e.getModuleEntry("@ohif/extension-cornerstone.utilityModule.common");try{const{cornerstone:e}=t.exports.getCornerstoneLibraries();return y.bind(null,e)}catch(e){throw new Error("Required command not found")}}(n),d=m.bind(null,a);return r.createElement(l,{servicesManager:s,dataSource:a,getImageSrc:c,getStudiesForPatientByMRN:o,requestDisplaySetCreationForStudy:d})}I.propTypes={commandsManager:i().object.isRequired,extensionManager:i().object.isRequired,servicesManager:i().object.isRequired};const g=I;var E=n(39852),D=n(21572);function v(e){let{onExportClick:t,onCreateReportClick:n,disabled:s}=e;const{t:a}=(0,D.$G)("MeasurementTable");return r.createElement(r.Fragment,null,r.createElement(c.zx,{className:"text-base px-2 py-2",size:"initial",variant:s?"disabled":"outlined",color:"black",border:"primaryActive",onClick:t,disabled:s},a("Export")),r.createElement(c.zx,{className:"ml-2 px-2 text-base",variant:s?"disabled":"outlined",size:"initial",color:"black",border:"primaryActive",onClick:n,disabled:s},a("Create Report")))}v.propTypes={onExportClick:i().func,onCreateReportClick:i().func,disabled:i().bool},v.defaultProps={onExportClick:()=>alert("Export"),onCreateReportClick:()=>alert("Create Report"),disabled:!1};const R=v;var T=n(40001),f=n.n(T);const{downloadCSVReport:k}=o.utils,{formatDate:h}=o.utils,w={key:void 0,date:"",modality:"",description:""};function U(e){let{servicesManager:t,extensionManager:n}=e;const[a,i]=(0,c.O_)(),[d,u]=(0,r.useState)(Date.now().toString()),l=(0,E.Nr)(d,200),{measurementService:S,uiDialogService:p,displaySetService:y}=t.services,[m,I]=(0,s.I)(),{trackedStudy:g,trackedSeries:D}=m.context,[v,T]=(0,r.useState)(w),[U,M]=(0,r.useState)([]),b=(0,r.useRef)(null);(0,r.useEffect)((()=>{const e=S.getMeasurements().filter((e=>g===e.referenceStudyUID&&D.includes(e.referenceSeriesUID))).map((e=>function(e,t,n){const{referenceStudyUID:s,referenceSeriesUID:r,SOPInstanceUID:a}=e,i=(o.DicomMetadataStore.getInstance(s,r,a),n.getDisplaySetsForSeries(r));if(!i[0]||!i[0].images)throw new Error('The tracked measurements panel should only be tracking "stack" displaySets.');const{displayText:c,uid:d,label:u,type:l,selected:S,findingSites:p,finding:y}=e,m=p?.[0],I=u||y?.text||m?.text||"(empty)";let g=c||[];if(p){const e=[];p.forEach((t=>{t?.text!==I&&e.push(t.text)})),g=[...e,...g]}y&&y?.text!==I&&(g=[y.text,...g]);return{uid:d,label:I,baseLabel:u,measurementType:l,displayText:g,baseDisplayText:c,isActive:S,finding:y,findingSites:p}}(e,S.VALUE_TYPES,y)));M(e)}),[S,g,D,l]);const A=async()=>{if(m.matches("tracking")){const e=g,t=o.DicomMetadataStore.getStudy(e),n=t.series[0].instances[0],{StudyDate:s,StudyDescription:r}=n,a=new Set;t.series.forEach((e=>{D.includes(e.SeriesInstanceUID)&&a.add(e.instances[0].Modality)}));const i=Array.from(a).join("/");v.key!==e&&T({key:e,date:s,modality:i,description:r})}else""!==g&&void 0!==g||T(w)};(0,r.useEffect)((()=>{A()}),[v.key,m,g,A]),(0,r.useEffect)((()=>{const e=S.EVENTS.MEASUREMENT_ADDED,t=S.EVENTS.RAW_MEASUREMENT_ADDED,n=S.EVENTS.MEASUREMENT_UPDATED,s=S.EVENTS.MEASUREMENT_REMOVED,r=S.EVENTS.MEASUREMENTS_CLEARED,a=[];return[e,t,n,s,r].forEach((t=>{a.push(S.subscribe(t,(()=>{u(Date.now().toString()),t===e&&f()((()=>{b.current.scrollTop=b.current.scrollHeight}),300)()})).unsubscribe)})),()=>{a.forEach((e=>{e()}))}}),[S,I]);const C=e=>{let{uid:t,isActive:n}=e;S.jumpToMeasurement(a.activeViewportIndex,t),N({uid:t,isActive:n})},x=e=>{let{uid:t,isActive:n}=e;const s=S.getMeasurement(t);C({uid:t,isActive:n});const a=e=>{let{action:n,value:r}=e;if("save"===n.id)S.update(t,{...s,...r},!0);p.dismiss({id:"enter-annotation"})};p.create({id:"enter-annotation",centralize:!0,isDraggable:!1,showOverlay:!0,content:c.Vq,contentProps:{title:"Annotation",noCloseButton:!0,value:{label:s.label||""},body:e=>{let{value:t,setValue:n}=e;return r.createElement(c.II,{label:"Enter your annotation",labelClassName:"text-white grow text-[14px] leading-[1.2]",autoFocus:!0,id:"annotation",className:"bg-black border-primary-main",type:"text",value:t.label,onChange:e=>{e.persist(),n((t=>({...t,label:e.target.value})))},onKeyPress:e=>{"Enter"===e.key&&a({value:t,action:{id:"save"}})}})},actions:[{id:"cancel",text:"Cancel",type:"primary"},{id:"save",text:"Save",type:"secondary"}],onSubmit:a}})},N=e=>{let{uid:t,isActive:n}=e;if(!n){const e=[...U],n=e.find((e=>e.uid===t));e.forEach((e=>e.isActive=e.uid===t)),n.isActive=!0,M(e)}},_=U.filter((e=>e.measurementType!==S.VALUE_TYPES.POINT)),O=U.filter((e=>e.measurementType===S.VALUE_TYPES.POINT));return r.createElement(r.Fragment,null,r.createElement("div",{className:"overflow-x-hidden overflow-y-auto invisible-scrollbar",ref:b,"data-cy":"trackedMeasurements-panel"},v.key&&r.createElement(c.YL,{date:h(v.date),modality:v.modality,description:v.description}),r.createElement(c.wt,{title:"Measurements",data:_,servicesManager:t,onClick:C,onEdit:x}),0!==O.length&&r.createElement(c.wt,{title:"Additional Findings",data:O,servicesManager:t,onClick:C,onEdit:x})),r.createElement("div",{className:"flex justify-center p-4"},r.createElement(R,{onExportClick:async function(){const e=S.getMeasurements().filter((e=>g===e.referenceStudyUID&&D.includes(e.referenceSeriesUID)));k(e,S)},onCreateReportClick:()=>{I("SAVE_REPORT",{viewportIndex:a.activeViewportIndex,isBackupSave:!0})},disabled:0===O.length&&0===_.length})))}U.propTypes={servicesManager:i().shape({services:i().shape({measurementService:i().shape({getMeasurements:i().func.isRequired,VALUE_TYPES:i().object.isRequired}).isRequired}).isRequired}).isRequired};const M=U;const b=function(e){let{commandsManager:t,extensionManager:n,servicesManager:s}=e;return[{name:"seriesList",iconName:"group-layers",iconLabel:"Studies",label:"Studies",component:g.bind(null,{commandsManager:t,extensionManager:n,servicesManager:s})},{name:"trackedMeasurements",iconName:"tab-linear",iconLabel:"Measure",label:"Measurements",component:M.bind(null,{commandsManager:t,extensionManager:n,servicesManager:s})}]};function A(){return A=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&(e[s]=n[s])}return e},A.apply(this,arguments)}const C=r.lazy((()=>n.e(799).then(n.bind(n,91799)))),x=e=>r.createElement(r.Suspense,{fallback:r.createElement("div",null,"Loading...")},r.createElement(C,e));const N=function(e){let{servicesManager:t,commandsManager:n,extensionManager:s}=e;return[{name:"cornerstone-tracked",component:e=>r.createElement(x,A({servicesManager:t,commandsManager:n,extensionManager:s},e))}]},_={id:JSON.parse('{"u2":"@ohif/extension-measurement-tracking"}').u2,getContextModule:s.Z,getPanelModule:b,getViewportModule:N}}}]);
//# sourceMappingURL=744.bundle.640dc4a3d3fdd7b97222.js.map