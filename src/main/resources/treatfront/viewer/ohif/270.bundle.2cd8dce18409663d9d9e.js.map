{"version":3,"file":"270.bundle.2cd8dce18409663d9d9e.js","mappings":"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,KAChB,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,IAAK,GAAI,GAAI,KACd,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,GAAI,KACd,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,GAAI,KACd,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,GAAI,KACd,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK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","sources":["webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/enums/ToolBindings.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/enums/ToolModes.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/enums/AnnotationStyleStates.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/enums/Events.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/enums/SegmentationRepresentations.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/enums/Touch.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/stateManagement/annotation/annotationLocking.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/stateManagement/annotation/annotationSelection.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/stateManagement/annotation/annotationVisibility.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/stateManagement/annotation/FrameOfReferenceSpecificAnnotationManager.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/store/svgNodeCache.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/store/state.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/store/addTool.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventListeners/mouse/getMouseEventPoints.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventListeners/mouse/mouseDoubleClickListener.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventListeners/mouse/mouseMoveListener.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventListeners/mouse/mouseDownListener.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventListeners/mouse/index.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventListeners/touch/preventGhostClick.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventListeners/touch/getTouchEventPoints.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/touch/index.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventListeners/touch/touchStartListener.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventListeners/touch/index.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventListeners/wheel/normalizeWheel.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventListeners/wheel/wheelListener.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventListeners/wheel/index.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventListeners/keyboard/keyDownListener.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventListeners/keyboard/index.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/constants/COLOR_LUT.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/displayTools/Contour/contourConfig.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/displayTools/Labelmap/labelmapConfig.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/stateManagement/segmentation/SegmentationStateManager.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/stateManagement/segmentation/triggerSegmentationEvents.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/stateManagement/segmentation/helpers/normalizeSegmentationInput.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/stateManagement/segmentation/segmentationState.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/stateManagement/segmentation/config/segmentationConfig.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/displayTools/Labelmap/addLabelmapToElement.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/displayTools/Labelmap/removeLabelmapFromElement.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/displayTools/Labelmap/labelmapDisplay.js","webpack:///../../../node_modules/@kitware/vtk.js/Filters/General/AppendPolyData.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/displayTools/Contour/utils.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/displayTools/Contour/contourConfigCache.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/displayTools/Contour/addContourSetsToElement.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/displayTools/Contour/updateContourSets.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/displayTools/Contour/removeContourFromElement.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/displayTools/Contour/contourDisplay.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/displayTools/Contour/addOrUpdateContourSets.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/stateManagement/segmentation/removeSegmentationsFromToolGroup.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/displayTools/Labelmap/validateRepresentationData.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/stateManagement/segmentation/helpers/validateSegmentationInput.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/stateManagement/segmentation/addSegmentations.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/stateManagement/segmentation/addSegmentationRepresentations.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/stateManagement/segmentation/activeSegmentation.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/stateManagement/segmentation/segmentLocking.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/stateManagement/segmentation/config/segmentationColor.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/stateManagement/segmentation/config/segmentationVisibility.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/stateManagement/segmentation/segmentIndex.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/base/BaseTool.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/drawingSvg/getSvgDrawingHelper.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/drawingSvg/draw.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/drawingSvg/_getHash.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/drawingSvg/_setAttributesIfNecessary.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/drawingSvg/_setNewAttributesIfValid.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/drawingSvg/drawCircle.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/drawingSvg/drawEllipse.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/drawingSvg/drawHandles.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/drawingSvg/drawLine.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/drawingSvg/drawPolyline.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/drawingSvg/drawTextBox.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/vec2/findClosestPoint.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/drawingSvg/drawLink.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/drawingSvg/drawLinkedTextBox.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/drawingSvg/drawRect.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/drawingSvg/drawArrow.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/getToolsWithModesForElement.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/triggerAnnotationRender.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/planar/filterAnnotationsWithinSlice.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/planar/filterAnnotationsForDisplay.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/stateManagement/annotation/config/ToolStyle.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/stateManagement/annotation/config/helpers.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/stateManagement/annotation/config/getState.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/stateManagement/annotation/config/getFont.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/base/AnnotationDisplayTool.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/base/AnnotationTool.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/displayTools/SegmentationDisplayTool.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/segmentation/triggerSegmentationRender.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventListeners/segmentation/segmentationRepresentationModifiedEventListener.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventListeners/segmentation/segmentationDataModifiedEventListener.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventListeners/segmentation/segmentationRepresentationRemovedEventListener.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventListeners/segmentation/segmentationModifiedEventListener.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/getAnnotationNearPoint.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/isObject.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/debounce.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/throttle.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/clip.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/calibrateImageSpacing.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/triggerAnnotationRenderForViewportIds.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/scroll.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/viewport/jumpToSlice.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/pointInShapeCallback.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/boundingBox/extend2DBoundingBoxInViewAxis.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/boundingBox/getBoundingBoxAroundShape.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/pointInSurroundingSphereCallback.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/sphere/pointInSphere.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/segmentation/strategies/fillSphere.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/segmentation/strategies/eraseSphere.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/ellipse/pointInEllipse.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/ellipse/getCanvasEllipseCorners.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/segmentation/strategies/fillCircle.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/segmentation/strategies/eraseCircle.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/cursors/MouseCursor.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/cursors/ImageMouseCursor.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/cursors/SVGCursorDescriptor.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/cursors/SVGMouseCursor.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/cursors/setCursorForElement.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/cursors/index.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/cursors/elementCursor.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/segmentation/BrushTool.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/segmentation/utilities.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/segmentation/thresholdVolumeByRange.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/PanTool.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/TrackballRotateTool.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/WindowLevelTool.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/StackScrollTool.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/angle/angleBetweenLines.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/PlanarRotateTool.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/StackScrollToolMouseWheelTool.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/ZoomTool.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/VolumeRotateMouseWheelTool.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/planar/getWorldWidthAndHeightFromCorners.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/planar/getPointInLineOfSightWithCriteria.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/planar/index.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/viewport/jumpToWorld.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/MIPJumpToClickTool.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/viewportFilters/filterViewportsWithFrameOfReferenceUID.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/viewportFilters/filterViewportsWithToolEnabled.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/viewportFilters/filterViewportsWithParallelNormals.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/viewportFilters/getViewportIdsWithToolToRender.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/vec2/liangBarksyClip.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/line/distanceToPointSquared.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/line/distanceToPoint.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/line/intersectLine.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/CrosshairsTool.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/MagnifyTool.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/ReferenceLinesTool.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/drawing/getTextBoxCoordsCanvas.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/annotation/BidirectionalTool.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/annotation/LengthTool.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/getModalityUnit.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/viewport/isViewportPreScaled.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/annotation/ProbeTool.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/annotation/DragProbeTool.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/rectangle/distanceToPoint.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/annotation/RectangleROITool.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/planar/getWorldWidthAndHeightFromTwoPoints.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/annotation/EllipticalROITool.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/point/distanceToPoint.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/circle/getCanvasCircleRadius.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/circle/getCanvasCircleCorners.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/annotation/CircleROITool.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/polyline/getIntersectionWithPolyline.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/polyline/getSubPixelSpacingAndXYDirections.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/polyline/pointsAreWithinCloseContourProximity.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/polyline/addCanvasPointsToArray.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/polyline/pointCanProjectOnLine.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/polyline/calculateAreaOfPoints.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/planarFreehandROITool/interpolation/interpolateSegmentPoints.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/planarFreehandROITool/interpolation/algorithms/bspline.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/planarFreehandROITool/interpolatePoints.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/annotation/planarFreehandROITool/findOpenUShapedContourVectorToPeak.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/annotation/planarFreehandROITool/drawLoop.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/annotation/planarFreehandROITool/editLoopCommon.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/annotation/planarFreehandROITool/closedContourEditLoop.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/annotation/planarFreehandROITool/openContourEditLoop.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/annotation/planarFreehandROITool/openContourEndEditLoop.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/annotation/planarFreehandROITool/renderMethods.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/annotation/PlanarFreehandROITool.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/annotation/ArrowAnnotateTool.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/annotation/AngleTool.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/math/midPoint.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/annotation/CobbAngleTool.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/ReferenceCursors.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/ScaleOverlayTool.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/segmentation/strategies/fillRectangle.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/segmentation/strategies/eraseRectangle.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/segmentation/RectangleScissorsTool.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/segmentation/CircleScissorsTool.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/segmentation/SphereScissorsTool.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/segmentation/RectangleROIThresholdTool.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/segmentation/RectangleROIStartEndThresholdTool.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/segmentation/floodFill.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/tools/segmentation/PaintFillTool.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/rectangleROITool/getBoundsIJKFromRectangleAnnotations.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/segmentation/rectangleROIThresholdVolumeByRange.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/segmentation/createMergedLabelmapForIndex.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/segmentation/isValidRepresentationConfig.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/segmentation/getDefaultRepresentationConfig.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/segmentation/createLabelmapVolumeForViewport.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/segmentation/brushSizeForToolGroup.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/segmentation/brushThresholdForToolGroup.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/segmentation/thresholdSegmentationByRange.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/orientation/getOrientationStringLPS.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/orientation/invertOrientationStringLPS.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/cine/events.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/cine/state.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/cine/playClip.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/planarFreehandROITool/interpolateAnnotation.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/planarFreehandROITool/index.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/stackPrefetch/state.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/stackPrefetch/stackPrefetch.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/dynamicVolume/getDataInTime.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/utilities/dynamicVolume/generateImageFromTimeData.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventListeners/annotations/annotationSelectionListener.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventListeners/annotations/annotationModifiedListener.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/imageRenderedEventDispatcher.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/shared/customCallbackHandler.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/mouseEventHandlers/mouseClick.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/mouseEventHandlers/mouseDoubleClick.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/store/filterToolsWithMoveableHandles.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/store/filterToolsWithAnnotationsForElement.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/store/filterMoveableAnnotationTools.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/shared/getMouseModifier.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/shared/getActiveToolForMouseEvent.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/shared/getToolsWithModesForMouseEvent.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/mouseEventHandlers/mouseDown.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/mouseEventHandlers/mouseDownActivate.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/mouseEventHandlers/mouseDrag.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/mouseEventHandlers/mouseMove.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/mouseEventHandlers/mouseUp.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/mouseEventHandlers/mouseWheel.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/mouseToolEventDispatcher.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/shared/getActiveToolForKeyboardEvent.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/keyboardEventHandlers/keyDown.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/keyboardEventHandlers/keyUp.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/keyboardToolEventDispatcher.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/cameraModifiedEventDispatcher.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/imageSpacingCalibratedEventDispatcher.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/shared/getActiveToolForTouchEvent.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/shared/getToolsWithModesForTouchEvent.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/touchEventHandlers/touchStart.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/touchEventHandlers/touchStartActivate.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/touchEventHandlers/touchDrag.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/touchEventHandlers/touchEnd.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/touchEventHandlers/touchTap.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/touchEventHandlers/touchPress.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/eventDispatchers/touchToolEventDispatcher.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/store/addEnabledElement.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/store/SynchronizerManager/getSynchronizersForViewport.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/store/ToolGroupManager/getToolGroupForViewport.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/store/removeEnabledElement.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/store/cancelActiveManipulations.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/store/SynchronizerManager/Synchronizer.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/store/SynchronizerManager/createSynchronizer.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/store/SynchronizerManager/destroy.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/store/SynchronizerManager/getSynchronizer.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/store/SynchronizerManager/getAllSynchronizers.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/store/SynchronizerManager/destroySynchronizer.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/store/ToolGroupManager/ToolGroup.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/store/ToolGroupManager/createToolGroup.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/store/ToolGroupManager/destroyToolGroup.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/store/ToolGroupManager/destroy.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/store/ToolGroupManager/getToolGroup.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/store/ToolGroupManager/getAllToolGroups.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/store/ToolGroupManager/getToolGroupsWithToolName.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/stateManagement/annotation/annotationState.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/stateManagement/annotation/helpers/state.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/init.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/synchronizers/callbacks/cameraSyncCallback.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/synchronizers/synchronizers/createCameraPositionSynchronizer.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/synchronizers/callbacks/voiSyncCallback.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/synchronizers/synchronizers/createVOISynchronizer.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/synchronizers/callbacks/zoomPanSyncCallback.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/synchronizers/synchronizers/createZoomPanSynchronizer.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/synchronizers/callbacks/stackImageSyncCallback.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/synchronizers/callbacks/areViewportsCoplanar .js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/synchronizers/synchronizers/createStackImageSynchronizer.js","webpack:///../../../node_modules/lodash.get/index.js"],"sourcesContent":["var MouseBindings;\n(function (MouseBindings) {\n    MouseBindings[MouseBindings[\"Primary\"] = 1] = \"Primary\";\n    MouseBindings[MouseBindings[\"Secondary\"] = 2] = \"Secondary\";\n    MouseBindings[MouseBindings[\"Primary_And_Secondary\"] = 3] = \"Primary_And_Secondary\";\n    MouseBindings[MouseBindings[\"Auxiliary\"] = 4] = \"Auxiliary\";\n    MouseBindings[MouseBindings[\"Primary_And_Auxiliary\"] = 5] = \"Primary_And_Auxiliary\";\n    MouseBindings[MouseBindings[\"Secondary_And_Auxiliary\"] = 6] = \"Secondary_And_Auxiliary\";\n    MouseBindings[MouseBindings[\"Primary_And_Secondary_And_Auxiliary\"] = 7] = \"Primary_And_Secondary_And_Auxiliary\";\n    MouseBindings[MouseBindings[\"Fourth_Button\"] = 8] = \"Fourth_Button\";\n    MouseBindings[MouseBindings[\"Fifth_Button\"] = 16] = \"Fifth_Button\";\n})(MouseBindings || (MouseBindings = {}));\nvar KeyboardBindings;\n(function (KeyboardBindings) {\n    KeyboardBindings[KeyboardBindings[\"Shift\"] = 16] = \"Shift\";\n    KeyboardBindings[KeyboardBindings[\"Ctrl\"] = 17] = \"Ctrl\";\n    KeyboardBindings[KeyboardBindings[\"Alt\"] = 18] = \"Alt\";\n    KeyboardBindings[KeyboardBindings[\"Meta\"] = 91] = \"Meta\";\n    KeyboardBindings[KeyboardBindings[\"ShiftCtrl\"] = 1617] = \"ShiftCtrl\";\n    KeyboardBindings[KeyboardBindings[\"ShiftAlt\"] = 1618] = \"ShiftAlt\";\n    KeyboardBindings[KeyboardBindings[\"ShiftMeta\"] = 1691] = \"ShiftMeta\";\n    KeyboardBindings[KeyboardBindings[\"CtrlAlt\"] = 1718] = \"CtrlAlt\";\n    KeyboardBindings[KeyboardBindings[\"CtrlMeta\"] = 1791] = \"CtrlMeta\";\n    KeyboardBindings[KeyboardBindings[\"AltMeta\"] = 1891] = \"AltMeta\";\n})(KeyboardBindings || (KeyboardBindings = {}));\nexport { MouseBindings, KeyboardBindings };\n//# sourceMappingURL=ToolBindings.js.map","var ToolModes;\n(function (ToolModes) {\n    ToolModes[\"Active\"] = \"Active\";\n    ToolModes[\"Passive\"] = \"Passive\";\n    ToolModes[\"Enabled\"] = \"Enabled\";\n    ToolModes[\"Disabled\"] = \"Disabled\";\n})(ToolModes || (ToolModes = {}));\nexport default ToolModes;\n//# sourceMappingURL=ToolModes.js.map","var AnnotationStyleStates;\n(function (AnnotationStyleStates) {\n    AnnotationStyleStates[\"Default\"] = \"\";\n    AnnotationStyleStates[\"Highlighted\"] = \"Highlighted\";\n    AnnotationStyleStates[\"Selected\"] = \"Selected\";\n    AnnotationStyleStates[\"Locked\"] = \"Locked\";\n})(AnnotationStyleStates || (AnnotationStyleStates = {}));\nexport default AnnotationStyleStates;\n//# sourceMappingURL=AnnotationStyleStates.js.map","var Events;\n(function (Events) {\n    Events[\"ANNOTATION_ADDED\"] = \"CORNERSTONE_TOOLS_ANNOTATION_ADDED\";\n    Events[\"ANNOTATION_COMPLETED\"] = \"CORNERSTONE_TOOLS_ANNOTATION_COMPLETED\";\n    Events[\"ANNOTATION_MODIFIED\"] = \"CORNERSTONE_TOOLS_ANNOTATION_MODIFIED\";\n    Events[\"ANNOTATION_REMOVED\"] = \"CORNERSTONE_TOOLS_ANNOTATION_REMOVED\";\n    Events[\"ANNOTATION_SELECTION_CHANGE\"] = \"CORNERSTONE_TOOLS_ANNOTATION_SELECTION_CHANGE\";\n    Events[\"ANNOTATION_LOCK_CHANGE\"] = \"CORNERSTONE_TOOLS_ANNOTATION_LOCK_CHANGE\";\n    Events[\"ANNOTATION_VISIBILITY_CHANGE\"] = \"CORNERSTONE_TOOLS_ANNOTATION_VISIBILITY_CHANGE\";\n    Events[\"ANNOTATION_RENDERED\"] = \"CORNERSTONE_TOOLS_ANNOTATION_RENDERED\";\n    Events[\"SEGMENTATION_MODIFIED\"] = \"CORNERSTONE_TOOLS_SEGMENTATION_MODIFIED\";\n    Events[\"SEGMENTATION_RENDERED\"] = \"CORNERSTONE_TOOLS_SEGMENTATION_RENDERED\";\n    Events[\"SEGMENTATION_REPRESENTATION_MODIFIED\"] = \"CORNERSTONE_TOOLS_SEGMENTATION_REPRESENTATION_MODIFIED\";\n    Events[\"SEGMENTATION_REMOVED\"] = \"CORNERSTONE_TOOLS_SEGMENTATION_REMOVED\";\n    Events[\"SEGMENTATION_REPRESENTATION_REMOVED\"] = \"CORNERSTONE_TOOLS_SEGMENTATION_REPRESENTATION_REMOVED\";\n    Events[\"SEGMENTATION_DATA_MODIFIED\"] = \"CORNERSTONE_TOOLS_SEGMENTATION_DATA_MODIFIED\";\n    Events[\"KEY_DOWN\"] = \"CORNERSTONE_TOOLS_KEY_DOWN\";\n    Events[\"KEY_UP\"] = \"CORNERSTONE_TOOLS_KEY_UP\";\n    Events[\"MOUSE_DOWN\"] = \"CORNERSTONE_TOOLS_MOUSE_DOWN\";\n    Events[\"MOUSE_UP\"] = \"CORNERSTONE_TOOLS_MOUSE_UP\";\n    Events[\"MOUSE_DOWN_ACTIVATE\"] = \"CORNERSTONE_TOOLS_MOUSE_DOWN_ACTIVATE\";\n    Events[\"MOUSE_DRAG\"] = \"CORNERSTONE_TOOLS_MOUSE_DRAG\";\n    Events[\"MOUSE_MOVE\"] = \"CORNERSTONE_TOOLS_MOUSE_MOVE\";\n    Events[\"MOUSE_CLICK\"] = \"CORNERSTONE_TOOLS_MOUSE_CLICK\";\n    Events[\"MOUSE_DOUBLE_CLICK\"] = \"CORNERSTONE_TOOLS_MOUSE_DOUBLE_CLICK\";\n    Events[\"MOUSE_WHEEL\"] = \"CORNERSTONE_TOOLS_MOUSE_WHEEL\";\n    Events[\"TOUCH_START\"] = \"CORNERSTONE_TOOLS_TOUCH_START\";\n    Events[\"TOUCH_START_ACTIVATE\"] = \"CORNERSTONE_TOOLS_TOUCH_START_ACTIVATE\";\n    Events[\"TOUCH_PRESS\"] = \"CORNERSTONE_TOOLS_TOUCH_PRESS\";\n    Events[\"TOUCH_DRAG\"] = \"CORNERSTONE_TOOLS_TOUCH_DRAG\";\n    Events[\"TOUCH_END\"] = \"CORNERSTONE_TOOLS_TOUCH_END\";\n    Events[\"TOUCH_TAP\"] = \"CORNERSTONE_TOOLS_TAP\";\n    Events[\"TOUCH_SWIPE\"] = \"CORNERSTONE_TOOLS_SWIPE\";\n})(Events || (Events = {}));\nexport default Events;\n//# sourceMappingURL=Events.js.map","var SegmentationRepresentations;\n(function (SegmentationRepresentations) {\n    SegmentationRepresentations[\"Labelmap\"] = \"LABELMAP\";\n    SegmentationRepresentations[\"Contour\"] = \"CONTOUR\";\n})(SegmentationRepresentations || (SegmentationRepresentations = {}));\nexport default SegmentationRepresentations;\n//# sourceMappingURL=SegmentationRepresentations.js.map","var Swipe;\n(function (Swipe) {\n    Swipe[\"UP\"] = \"UP\";\n    Swipe[\"DOWN\"] = \"DOWN\";\n    Swipe[\"LEFT\"] = \"LEFT\";\n    Swipe[\"RIGHT\"] = \"RIGHT\";\n})(Swipe || (Swipe = {}));\nexport { Swipe };\n//# sourceMappingURL=Touch.js.map","import { eventTarget, triggerEvent } from '@cornerstonejs/core';\nimport { Events } from '../../enums';\nconst globalLockedAnnotationsSet = new Set();\nfunction setAnnotationLocked(annotation, locked = true) {\n    const detail = makeEventDetail();\n    if (annotation) {\n        if (locked) {\n            lock(annotation, globalLockedAnnotationsSet, detail);\n        }\n        else {\n            unlock(annotation, globalLockedAnnotationsSet, detail);\n        }\n    }\n    publish(detail, globalLockedAnnotationsSet);\n}\nfunction unlockAllAnnotations() {\n    const detail = makeEventDetail();\n    clearLockedAnnotationsSet(globalLockedAnnotationsSet, detail);\n    publish(detail, globalLockedAnnotationsSet);\n}\nfunction getAnnotationsLocked() {\n    return Array.from(globalLockedAnnotationsSet);\n}\nfunction isAnnotationLocked(annotation) {\n    return globalLockedAnnotationsSet.has(annotation);\n}\nfunction getAnnotationsLockedCount() {\n    return globalLockedAnnotationsSet.size;\n}\nfunction checkAndDefineIsLockedProperty(annotation) {\n    if (annotation) {\n        const isLocked = !!annotation.isLocked;\n        if (shouldDefineIsLockedProperty(annotation)) {\n            Object.defineProperty(annotation, 'isLocked', {\n                configurable: false,\n                enumerable: true,\n                set: setIsLocked,\n                get: getIsLocked,\n            });\n        }\n        setAnnotationLocked(annotation, isLocked);\n    }\n}\nfunction makeEventDetail() {\n    return Object.freeze({\n        added: [],\n        removed: [],\n        locked: [],\n    });\n}\nfunction lock(annotation, lockedAnnotationsSet, detail) {\n    if (!lockedAnnotationsSet.has(annotation)) {\n        lockedAnnotationsSet.add(annotation);\n        detail.added.push(annotation);\n    }\n}\nfunction unlock(annotation, lockedAnnotationsSet, detail) {\n    if (lockedAnnotationsSet.delete(annotation)) {\n        detail.removed.push(annotation);\n    }\n}\nfunction clearLockedAnnotationsSet(lockedAnnotationsSet, detail) {\n    lockedAnnotationsSet.forEach((annotation) => {\n        unlock(annotation, lockedAnnotationsSet, detail);\n    });\n}\nfunction publish(detail, lockedAnnotationsSet) {\n    if (detail.added.length > 0 || detail.removed.length > 0) {\n        lockedAnnotationsSet.forEach((item) => void detail.locked.push(item));\n        triggerEvent(eventTarget, Events.ANNOTATION_LOCK_CHANGE, detail);\n    }\n}\nfunction shouldDefineIsLockedProperty(annotation) {\n    const descriptor = Object.getOwnPropertyDescriptor(annotation, 'isLocked');\n    if (descriptor) {\n        return (descriptor.configurable &&\n            (descriptor.set !== setIsLocked || descriptor.get !== getIsLocked));\n    }\n    return Object.isExtensible(annotation);\n}\nfunction setIsLocked(locked) {\n    setAnnotationLocked(this, locked);\n}\nfunction getIsLocked() {\n    return isAnnotationLocked(this);\n}\nexport { setAnnotationLocked, getAnnotationsLocked, getAnnotationsLockedCount, unlockAllAnnotations, isAnnotationLocked, checkAndDefineIsLockedProperty, };\n//# sourceMappingURL=annotationLocking.js.map","import { eventTarget, triggerEvent } from '@cornerstonejs/core';\nimport { Events } from '../../enums';\nimport { getAnnotation } from './annotationState';\nconst selectedAnnotationUIDs = new Set();\nfunction setAnnotationSelected(annotationUID, selected = true, preserveSelected = false) {\n    if (selected) {\n        selectAnnotation(annotationUID, preserveSelected);\n    }\n    else {\n        deselectAnnotation(annotationUID);\n    }\n}\nfunction selectAnnotation(annotationUID, preserveSelected = false) {\n    const detail = makeEventDetail();\n    if (!preserveSelected) {\n        clearSelectionSet(selectedAnnotationUIDs, detail);\n    }\n    if (annotationUID && !selectedAnnotationUIDs.has(annotationUID)) {\n        selectedAnnotationUIDs.add(annotationUID);\n        detail.added.push(annotationUID);\n    }\n    publish(detail, selectedAnnotationUIDs);\n}\nfunction deselectAnnotation(annotationUID) {\n    const detail = makeEventDetail();\n    if (annotationUID) {\n        if (selectedAnnotationUIDs.delete(annotationUID)) {\n            detail.removed.push(annotationUID);\n        }\n    }\n    else {\n        clearSelectionSet(selectedAnnotationUIDs, detail);\n    }\n    publish(detail, selectedAnnotationUIDs);\n}\nfunction getAnnotationsSelected() {\n    return Array.from(selectedAnnotationUIDs);\n}\nfunction getAnnotationsSelectedByToolName(toolName) {\n    return getAnnotationsSelected().filter((annotationUID) => {\n        const annotation = getAnnotation(annotationUID);\n        return annotation.metadata.toolName === toolName;\n    });\n}\nfunction isAnnotationSelected(annotationUID) {\n    return selectedAnnotationUIDs.has(annotationUID);\n}\nfunction getAnnotationsSelectedCount() {\n    return selectedAnnotationUIDs.size;\n}\nfunction makeEventDetail() {\n    return Object.freeze({\n        added: [],\n        removed: [],\n        selection: [],\n    });\n}\nfunction clearSelectionSet(selectionSet, detail) {\n    selectionSet.forEach((value) => {\n        if (selectionSet.delete(value)) {\n            detail.removed.push(value);\n        }\n    });\n}\nfunction publish(detail, selectionSet) {\n    if (detail.added.length > 0 || detail.removed.length > 0) {\n        selectionSet.forEach((item) => void detail.selection.push(item));\n        triggerEvent(eventTarget, Events.ANNOTATION_SELECTION_CHANGE, detail);\n    }\n}\nexport { setAnnotationSelected, getAnnotationsSelected, getAnnotationsSelectedByToolName, getAnnotationsSelectedCount, deselectAnnotation, isAnnotationSelected, };\n//# sourceMappingURL=annotationSelection.js.map","import { eventTarget, triggerEvent } from '@cornerstonejs/core';\nimport { getAnnotation } from './annotationState';\nimport { Events } from '../../enums';\nimport { isAnnotationSelected, deselectAnnotation, } from './annotationSelection';\nconst globalHiddenAnnotationUIDsSet = new Set();\nfunction setAnnotationVisibility(annotationUID, visible = true) {\n    const detail = makeEventDetail();\n    if (annotationUID) {\n        if (visible) {\n            show(annotationUID, globalHiddenAnnotationUIDsSet, detail);\n        }\n        else {\n            hide(annotationUID, globalHiddenAnnotationUIDsSet, detail);\n        }\n    }\n    publish(detail);\n}\nfunction showAllAnnotations() {\n    const detail = makeEventDetail();\n    globalHiddenAnnotationUIDsSet.forEach((annotationUID) => {\n        show(annotationUID, globalHiddenAnnotationUIDsSet, detail);\n    });\n    publish(detail);\n}\nfunction isAnnotationVisible(annotationUID) {\n    const annotation = getAnnotation(annotationUID);\n    if (annotation) {\n        return !globalHiddenAnnotationUIDsSet.has(annotationUID);\n    }\n}\nfunction checkAndDefineIsVisibleProperty(annotation) {\n    if (annotation) {\n        const isVisible = annotation.isVisible ?? true;\n        if (shouldDefineIsVisibleProperty(annotation)) {\n            Object.defineProperty(annotation, 'isVisible', {\n                configurable: false,\n                enumerable: true,\n                set: setIsVisible,\n                get: getIsVisible,\n            });\n        }\n        setAnnotationVisibility(annotation.annotationUID, isVisible);\n    }\n}\nfunction makeEventDetail() {\n    return Object.freeze({\n        lastVisible: [],\n        lastHidden: [],\n        hidden: [],\n    });\n}\nfunction show(annotationUID, annotationUIDsSet, detail) {\n    if (annotationUIDsSet.delete(annotationUID)) {\n        detail.lastVisible.push(annotationUID);\n    }\n}\nfunction hide(annotationUID, annotationUIDsSet, detail) {\n    if (!annotationUIDsSet.has(annotationUID)) {\n        annotationUIDsSet.add(annotationUID);\n        if (isAnnotationSelected(annotationUID)) {\n            deselectAnnotation(annotationUID);\n        }\n        detail.lastHidden.push(annotationUID);\n    }\n}\nfunction publish(detail) {\n    if (detail.lastHidden.length > 0 || detail.lastVisible.length > 0) {\n        globalHiddenAnnotationUIDsSet.forEach((item) => void detail.hidden.push(item));\n        triggerEvent(eventTarget, Events.ANNOTATION_VISIBILITY_CHANGE, detail);\n    }\n}\nfunction shouldDefineIsVisibleProperty(annotation) {\n    const descriptor = Object.getOwnPropertyDescriptor(annotation, 'isVisible');\n    if (descriptor) {\n        return (descriptor.configurable &&\n            (descriptor.set !== setIsVisible || descriptor.get !== getIsVisible));\n    }\n    return Object.isExtensible(annotation);\n}\nfunction setIsVisible(hidden) {\n    setAnnotationVisibility(this.annotationUID, hidden);\n}\nfunction getIsVisible() {\n    return isAnnotationVisible(this.annotationUID);\n}\nexport { setAnnotationVisibility, showAllAnnotations, isAnnotationVisible, checkAndDefineIsVisibleProperty, };\n//# sourceMappingURL=annotationVisibility.js.map","import cloneDeep from 'lodash.clonedeep';\nimport { Enums, eventTarget, getEnabledElement, utilities, } from '@cornerstonejs/core';\nimport { checkAndDefineIsLockedProperty } from './annotationLocking';\nimport { checkAndDefineIsVisibleProperty } from './annotationVisibility';\nclass FrameOfReferenceSpecificAnnotationManager {\n    constructor(uid) {\n        this.getGroupKey = (annotationGroupSelector) => {\n            if (typeof annotationGroupSelector === 'string') {\n                return annotationGroupSelector;\n            }\n            const element = annotationGroupSelector;\n            const enabledElement = getEnabledElement(element);\n            if (!enabledElement) {\n                throw new Error('Element not enabled, you must have an enabled element if you are not providing a FrameOfReferenceUID');\n            }\n            return enabledElement.FrameOfReferenceUID;\n        };\n        this._imageVolumeModifiedHandler = (evt) => {\n            const eventDetail = evt.detail;\n            const { FrameOfReferenceUID } = eventDetail;\n            const annotations = this.annotations;\n            const frameOfReferenceSpecificAnnotations = annotations[FrameOfReferenceUID];\n            if (!frameOfReferenceSpecificAnnotations) {\n                return;\n            }\n            Object.keys(frameOfReferenceSpecificAnnotations).forEach((toolName) => {\n                const toolSpecificAnnotations = frameOfReferenceSpecificAnnotations[toolName];\n                toolSpecificAnnotations.forEach((annotation) => {\n                    const invalidated = annotation.invalidated;\n                    if (invalidated !== undefined) {\n                        annotation.invalidated = true;\n                    }\n                });\n            });\n        };\n        this.getFramesOfReference = () => {\n            return Object.keys(this.annotations);\n        };\n        this.getAnnotations = (groupKey, toolName) => {\n            const annotations = this.annotations;\n            if (!annotations[groupKey]) {\n                return [];\n            }\n            if (toolName) {\n                return annotations[groupKey][toolName];\n            }\n            return annotations[groupKey];\n        };\n        this.getAnnotation = (annotationUID) => {\n            const annotations = this.annotations;\n            for (const frameOfReferenceUID in annotations) {\n                const frameOfReferenceAnnotations = annotations[frameOfReferenceUID];\n                for (const toolName in frameOfReferenceAnnotations) {\n                    const toolSpecificAnnotations = frameOfReferenceAnnotations[toolName];\n                    for (const annotation of toolSpecificAnnotations) {\n                        if (annotationUID === annotation.annotationUID) {\n                            return annotation;\n                        }\n                    }\n                }\n            }\n        };\n        this.getNumberOfAnnotations = (groupKey, toolName) => {\n            const annotations = this.getAnnotations(groupKey, toolName);\n            if (!annotations.length) {\n                return 0;\n            }\n            if (toolName) {\n                return annotations.length;\n            }\n            let total = 0;\n            for (const toolName in annotations) {\n                total += annotations[toolName].length;\n            }\n            return total;\n        };\n        this.addAnnotation = (annotation, groupKey) => {\n            const { metadata } = annotation;\n            const { FrameOfReferenceUID, toolName } = metadata;\n            groupKey = groupKey || FrameOfReferenceUID;\n            const annotations = this.annotations;\n            let frameOfReferenceSpecificAnnotations = annotations[groupKey];\n            if (!frameOfReferenceSpecificAnnotations) {\n                annotations[groupKey] = {};\n                frameOfReferenceSpecificAnnotations = annotations[groupKey];\n            }\n            let toolSpecificAnnotations = frameOfReferenceSpecificAnnotations[toolName];\n            if (!toolSpecificAnnotations) {\n                frameOfReferenceSpecificAnnotations[toolName] = [];\n                toolSpecificAnnotations = frameOfReferenceSpecificAnnotations[toolName];\n            }\n            toolSpecificAnnotations.push(annotation);\n            checkAndDefineIsLockedProperty(annotation);\n            checkAndDefineIsVisibleProperty(annotation);\n        };\n        this.removeAnnotation = (annotationUID) => {\n            const { annotations } = this;\n            for (const groupKey in annotations) {\n                const groupAnnotations = annotations[groupKey];\n                for (const toolName in groupAnnotations) {\n                    const toolAnnotations = groupAnnotations[toolName];\n                    const index = toolAnnotations.findIndex((annotation) => annotation.annotationUID === annotationUID);\n                    if (index !== -1) {\n                        toolAnnotations.splice(index, 1);\n                        if (toolAnnotations.length === 0) {\n                            delete groupAnnotations[toolName];\n                        }\n                    }\n                }\n                if (Object.keys(groupAnnotations).length === 0) {\n                    delete annotations[groupKey];\n                }\n            }\n        };\n        this.removeAnnotations = (groupKey, toolName) => {\n            const annotations = this.annotations;\n            if (annotations[groupKey]) {\n                if (toolName) {\n                    delete annotations[groupKey][toolName];\n                }\n                else {\n                    delete annotations[groupKey];\n                }\n            }\n        };\n        this.saveAnnotations = (groupKey, toolName) => {\n            const annotations = this.annotations;\n            if (groupKey && toolName) {\n                const frameOfReferenceSpecificAnnotations = annotations[groupKey];\n                if (!frameOfReferenceSpecificAnnotations) {\n                    return;\n                }\n                const toolSpecificAnnotations = frameOfReferenceSpecificAnnotations[toolName];\n                return cloneDeep(toolSpecificAnnotations);\n            }\n            else if (groupKey) {\n                const frameOfReferenceSpecificAnnotations = annotations[groupKey];\n                return cloneDeep(frameOfReferenceSpecificAnnotations);\n            }\n            return cloneDeep(annotations);\n        };\n        this.restoreAnnotations = (state, groupKey, toolName) => {\n            const annotations = this.annotations;\n            if (groupKey && toolName) {\n                let frameOfReferenceSpecificAnnotations = annotations[groupKey];\n                if (!frameOfReferenceSpecificAnnotations) {\n                    annotations[groupKey] = {};\n                    frameOfReferenceSpecificAnnotations = annotations[groupKey];\n                }\n                frameOfReferenceSpecificAnnotations[toolName] = state;\n            }\n            else if (groupKey) {\n                annotations[groupKey] = state;\n            }\n            else {\n                this.annotations = cloneDeep(state);\n            }\n        };\n        this.getNumberOfAllAnnotations = () => {\n            let count = 0;\n            const annotations = this.annotations;\n            for (const groupKey in annotations) {\n                const frameOfReferenceSpecificAnnotations = annotations[groupKey];\n                for (const toolName in frameOfReferenceSpecificAnnotations) {\n                    const toolSpecificAnnotations = frameOfReferenceSpecificAnnotations[toolName];\n                    count += toolSpecificAnnotations.length;\n                }\n            }\n            return count;\n        };\n        this.removeAllAnnotations = () => {\n            this.annotations = {};\n        };\n        if (!uid) {\n            uid = utilities.uuidv4();\n        }\n        this.annotations = {};\n        this.uid = uid;\n        eventTarget.addEventListener(Enums.Events.IMAGE_VOLUME_MODIFIED, this._imageVolumeModifiedHandler);\n    }\n}\nconst defaultFrameOfReferenceSpecificAnnotationManager = new FrameOfReferenceSpecificAnnotationManager('DEFAULT');\nexport { defaultFrameOfReferenceSpecificAnnotationManager };\nexport default FrameOfReferenceSpecificAnnotationManager;\n//# sourceMappingURL=FrameOfReferenceSpecificAnnotationManager.js.map","let svgNodeCache = {};\nexport function resetSvgNodeCache() {\n    svgNodeCache = {};\n}\nexport default svgNodeCache;\n//# sourceMappingURL=svgNodeCache.js.map","import _cloneDeep from 'lodash.clonedeep';\nimport svgNodeCache, { resetSvgNodeCache } from './svgNodeCache';\nconst defaultState = {\n    isInteractingWithTool: false,\n    isMultiPartToolActive: false,\n    tools: {},\n    toolGroups: [],\n    synchronizers: [],\n    svgNodeCache: svgNodeCache,\n    enabledElements: [],\n    handleRadius: 6,\n};\nlet state = {\n    isInteractingWithTool: false,\n    isMultiPartToolActive: false,\n    tools: {},\n    toolGroups: [],\n    synchronizers: [],\n    svgNodeCache: svgNodeCache,\n    enabledElements: [],\n    handleRadius: 6,\n};\nfunction resetCornerstoneToolsState() {\n    resetSvgNodeCache();\n    state = _cloneDeep(defaultState);\n}\nexport { resetCornerstoneToolsState, state, state as default, };\n//# sourceMappingURL=state.js.map","import { state } from './state';\nexport function addTool(ToolClass) {\n    const toolName = ToolClass.toolName;\n    const toolAlreadyAdded = state.tools[toolName] !== undefined;\n    if (!toolName) {\n        throw new Error(`No Tool Found for the ToolClass ${ToolClass.name}`);\n    }\n    if (toolAlreadyAdded) {\n        throw new Error(`${toolName} has already been added globally`);\n    }\n    state.tools[toolName] = {\n        toolClass: ToolClass,\n    };\n}\nexport function removeTool(ToolClass) {\n    const toolName = ToolClass.toolName;\n    if (!toolName) {\n        throw new Error(`No tool found for: ${ToolClass.name}`);\n    }\n    if (!state.tools[toolName] !== undefined) {\n        delete state.tools[toolName];\n    }\n    else {\n        throw new Error(`${toolName} cannot be removed because it has not been added`);\n    }\n}\nexport default addTool;\n//# sourceMappingURL=addTool.js.map","import { getEnabledElement } from '@cornerstonejs/core';\nexport default function getMouseEventPoints(evt, element) {\n    const elementToUse = element || evt.currentTarget;\n    const { viewport } = getEnabledElement(elementToUse);\n    const clientPoint = _clientToPoint(evt);\n    const pagePoint = _pageToPoint(evt);\n    const canvasPoint = _pagePointsToCanvasPoints(elementToUse, pagePoint);\n    const worldPoint = viewport.canvasToWorld(canvasPoint);\n    return {\n        page: pagePoint,\n        client: clientPoint,\n        canvas: canvasPoint,\n        world: worldPoint,\n    };\n}\nfunction _pagePointsToCanvasPoints(element, pagePoint) {\n    const rect = element.getBoundingClientRect();\n    return [\n        pagePoint[0] - rect.left - window.pageXOffset,\n        pagePoint[1] - rect.top - window.pageYOffset,\n    ];\n}\nfunction _pageToPoint(evt) {\n    return [evt.pageX, evt.pageY];\n}\nfunction _clientToPoint(evt) {\n    return [evt.clientX, evt.clientY];\n}\n//# sourceMappingURL=getMouseEventPoints.js.map","import { getEnabledElement, triggerEvent } from '@cornerstonejs/core';\nimport Events from '../../enums/Events';\nimport getMouseEventPoints from './getMouseEventPoints';\nfunction mouseDoubleClickListener(evt) {\n    const element = evt.currentTarget;\n    const { viewportId, renderingEngineId } = getEnabledElement(element);\n    const startPoints = getMouseEventPoints(evt, element);\n    const deltaPoints = {\n        page: [0, 0],\n        client: [0, 0],\n        canvas: [0, 0],\n        world: [0, 0, 0],\n    };\n    const eventDetail = {\n        event: evt,\n        eventName: Events.MOUSE_DOUBLE_CLICK,\n        viewportId,\n        renderingEngineId,\n        camera: {},\n        element,\n        startPoints,\n        lastPoints: startPoints,\n        currentPoints: startPoints,\n        deltaPoints,\n    };\n    const consumed = !triggerEvent(element, Events.MOUSE_DOUBLE_CLICK, eventDetail);\n    if (consumed) {\n        evt.stopImmediatePropagation();\n        evt.preventDefault();\n    }\n}\nexport default mouseDoubleClickListener;\n//# sourceMappingURL=mouseDoubleClickListener.js.map","import { getEnabledElement, triggerEvent } from '@cornerstonejs/core';\nimport Events from '../../enums/Events';\nimport getMouseEventPoints from './getMouseEventPoints';\nconst eventName = Events.MOUSE_MOVE;\nfunction mouseMoveListener(evt) {\n    const element = evt.currentTarget;\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngineId, viewportId } = enabledElement;\n    const currentPoints = getMouseEventPoints(evt);\n    const eventDetail = {\n        renderingEngineId,\n        viewportId,\n        camera: {},\n        element,\n        currentPoints,\n        eventName,\n        event: evt,\n    };\n    triggerEvent(element, eventName, eventDetail);\n}\nexport default mouseMoveListener;\n//# sourceMappingURL=mouseMoveListener.js.map","import { getEnabledElement, triggerEvent } from '@cornerstonejs/core';\nimport Events from '../../enums/Events';\nimport mouseMoveListener from './mouseMoveListener';\nimport getMouseEventPoints from './getMouseEventPoints';\nconst { MOUSE_DOWN, MOUSE_DOWN_ACTIVATE, MOUSE_CLICK, MOUSE_UP, MOUSE_DRAG } = Events;\nconst DOUBLE_CLICK_TOLERANCE_MS = 400;\nconst MULTI_BUTTON_TOLERANCE_MS = 150;\nconst DOUBLE_CLICK_DRAG_TOLERANCE = 3;\nconst defaultState = {\n    mouseButton: undefined,\n    element: null,\n    renderingEngineId: undefined,\n    viewportId: undefined,\n    isClickEvent: true,\n    clickDelay: 200,\n    preventClickTimeout: null,\n    startPoints: {\n        page: [0, 0],\n        client: [0, 0],\n        canvas: [0, 0],\n        world: [0, 0, 0],\n    },\n    lastPoints: {\n        page: [0, 0],\n        client: [0, 0],\n        canvas: [0, 0],\n        world: [0, 0, 0],\n    },\n};\nlet state = {\n    mouseButton: undefined,\n    renderingEngineId: undefined,\n    viewportId: undefined,\n    isClickEvent: true,\n    clickDelay: 200,\n    element: null,\n    preventClickTimeout: null,\n    startPoints: {\n        page: [0, 0],\n        client: [0, 0],\n        canvas: [0, 0],\n        world: [0, 0, 0],\n    },\n    lastPoints: {\n        page: [0, 0],\n        client: [0, 0],\n        canvas: [0, 0],\n        world: [0, 0, 0],\n    },\n};\nconst doubleClickState = {\n    doubleClickTimeout: null,\n    mouseDownEvent: null,\n    mouseUpEvent: null,\n    ignoreDoubleClick: false,\n};\nfunction mouseDownListener(evt) {\n    if (doubleClickState.doubleClickTimeout) {\n        if (evt.buttons === doubleClickState.mouseDownEvent.buttons)\n            return;\n        doubleClickState.mouseDownEvent = evt;\n        _doStateMouseDownAndUp();\n        return;\n    }\n    doubleClickState.doubleClickTimeout = setTimeout(_doStateMouseDownAndUp, evt.buttons === 1 ? DOUBLE_CLICK_TOLERANCE_MS : MULTI_BUTTON_TOLERANCE_MS);\n    doubleClickState.mouseDownEvent = evt;\n    doubleClickState.ignoreDoubleClick = false;\n    state.element = evt.currentTarget;\n    state.mouseButton = evt.buttons;\n    const enabledElement = getEnabledElement(state.element);\n    const { renderingEngineId, viewportId } = enabledElement;\n    state.renderingEngineId = renderingEngineId;\n    state.viewportId = viewportId;\n    state.preventClickTimeout = setTimeout(_preventClickHandler, state.clickDelay);\n    state.element.removeEventListener('mousemove', mouseMoveListener);\n    const startPoints = getMouseEventPoints(evt, state.element);\n    state.startPoints = _copyPoints(startPoints);\n    state.lastPoints = _copyPoints(startPoints);\n    document.addEventListener('mouseup', _onMouseUp);\n    document.addEventListener('mousemove', _onMouseDrag);\n}\nfunction _doMouseDown(evt) {\n    const deltaPoints = _getDeltaPoints(state.startPoints, state.startPoints);\n    const eventDetail = {\n        event: evt,\n        eventName: MOUSE_DOWN,\n        element: state.element,\n        mouseButton: state.mouseButton,\n        renderingEngineId: state.renderingEngineId,\n        viewportId: state.viewportId,\n        camera: {},\n        startPoints: state.startPoints,\n        lastPoints: state.startPoints,\n        currentPoints: state.startPoints,\n        deltaPoints,\n    };\n    state.lastPoints = _copyPoints(eventDetail.lastPoints);\n    const notConsumed = triggerEvent(eventDetail.element, MOUSE_DOWN, eventDetail);\n    if (notConsumed) {\n        triggerEvent(eventDetail.element, MOUSE_DOWN_ACTIVATE, eventDetail);\n    }\n}\nfunction _onMouseDrag(evt) {\n    const currentPoints = getMouseEventPoints(evt, state.element);\n    const lastPoints = _updateMouseEventsLastPoints(state.element, state.lastPoints);\n    const deltaPoints = _getDeltaPoints(currentPoints, lastPoints);\n    if (doubleClickState.doubleClickTimeout) {\n        if (_isDragPastDoubleClickTolerance(deltaPoints.canvas)) {\n            _doStateMouseDownAndUp();\n        }\n        else {\n            return;\n        }\n    }\n    const eventDetail = {\n        event: evt,\n        eventName: MOUSE_DRAG,\n        mouseButton: state.mouseButton,\n        renderingEngineId: state.renderingEngineId,\n        viewportId: state.viewportId,\n        camera: {},\n        element: state.element,\n        startPoints: _copyPoints(state.startPoints),\n        lastPoints: _copyPoints(lastPoints),\n        currentPoints,\n        deltaPoints,\n    };\n    triggerEvent(state.element, MOUSE_DRAG, eventDetail);\n    state.lastPoints = _copyPoints(currentPoints);\n}\nfunction _onMouseUp(evt) {\n    clearTimeout(state.preventClickTimeout);\n    if (doubleClickState.doubleClickTimeout) {\n        if (!doubleClickState.mouseUpEvent) {\n            doubleClickState.mouseUpEvent = evt;\n            state.element.addEventListener('mousemove', _onMouseMove);\n        }\n        else {\n            _cleanUp();\n        }\n    }\n    else {\n        const eventName = state.isClickEvent ? MOUSE_CLICK : MOUSE_UP;\n        const currentPoints = getMouseEventPoints(evt, state.element);\n        const deltaPoints = _getDeltaPoints(currentPoints, state.lastPoints);\n        const eventDetail = {\n            event: evt,\n            eventName,\n            mouseButton: state.mouseButton,\n            element: state.element,\n            renderingEngineId: state.renderingEngineId,\n            viewportId: state.viewportId,\n            camera: {},\n            startPoints: _copyPoints(state.startPoints),\n            lastPoints: _copyPoints(state.lastPoints),\n            currentPoints,\n            deltaPoints,\n        };\n        triggerEvent(eventDetail.element, eventName, eventDetail);\n        _cleanUp();\n    }\n    document.removeEventListener('mousemove', _onMouseDrag);\n}\nfunction _onMouseMove(evt) {\n    const currentPoints = getMouseEventPoints(evt, state.element);\n    const lastPoints = _updateMouseEventsLastPoints(state.element, state.lastPoints);\n    const deltaPoints = _getDeltaPoints(currentPoints, lastPoints);\n    if (!_isDragPastDoubleClickTolerance(deltaPoints.canvas)) {\n        return;\n    }\n    _doStateMouseDownAndUp();\n    mouseMoveListener(evt);\n}\nfunction _isDragPastDoubleClickTolerance(delta) {\n    return Math.abs(delta[0]) + Math.abs(delta[1]) > DOUBLE_CLICK_DRAG_TOLERANCE;\n}\nfunction _preventClickHandler() {\n    state.isClickEvent = false;\n}\nfunction _doStateMouseDownAndUp() {\n    doubleClickState.ignoreDoubleClick = true;\n    const mouseDownEvent = doubleClickState.mouseDownEvent;\n    const mouseUpEvent = doubleClickState.mouseUpEvent;\n    _clearDoubleClickTimeoutAndEvents();\n    _doMouseDown(mouseDownEvent);\n    if (mouseUpEvent) {\n        _onMouseUp(mouseUpEvent);\n    }\n}\nfunction _clearDoubleClickTimeoutAndEvents() {\n    if (doubleClickState.doubleClickTimeout) {\n        clearTimeout(doubleClickState.doubleClickTimeout);\n        doubleClickState.doubleClickTimeout = null;\n    }\n    doubleClickState.mouseDownEvent = null;\n    doubleClickState.mouseUpEvent = null;\n}\nfunction _cleanUp() {\n    document.removeEventListener('mouseup', _onMouseUp);\n    state.element?.removeEventListener('mousemove', _onMouseMove);\n    state.element?.addEventListener('mousemove', mouseMoveListener);\n    _clearDoubleClickTimeoutAndEvents();\n    state = JSON.parse(JSON.stringify(defaultState));\n}\nfunction _copyPoints(points) {\n    return JSON.parse(JSON.stringify(points));\n}\nfunction _updateMouseEventsLastPoints(element, lastPoints) {\n    const { viewport } = getEnabledElement(element);\n    const world = viewport.canvasToWorld(lastPoints.canvas);\n    return {\n        page: lastPoints.page,\n        client: lastPoints.client,\n        canvas: lastPoints.canvas,\n        world,\n    };\n}\nfunction _getDeltaPoints(currentPoints, lastPoints) {\n    return {\n        page: _subtractPoints2D(currentPoints.page, lastPoints.page),\n        client: _subtractPoints2D(currentPoints.client, lastPoints.client),\n        canvas: _subtractPoints2D(currentPoints.canvas, lastPoints.canvas),\n        world: _subtractPoints3D(currentPoints.world, lastPoints.world),\n    };\n}\nfunction _subtractPoints2D(point0, point1) {\n    return [point0[0] - point1[0], point0[1] - point1[1]];\n}\nfunction _subtractPoints3D(point0, point1) {\n    return [point0[0] - point1[0], point0[1] - point1[1], point0[2] - point1[2]];\n}\nexport function getMouseButton() {\n    return state.mouseButton;\n}\nexport function mouseDoubleClickIgnoreListener(evt) {\n    if (doubleClickState.ignoreDoubleClick) {\n        doubleClickState.ignoreDoubleClick = false;\n        evt.stopImmediatePropagation();\n        evt.preventDefault();\n    }\n    else {\n        _cleanUp();\n    }\n}\nexport default mouseDownListener;\n//# sourceMappingURL=mouseDownListener.js.map","import mouseDoubleClickListener from './mouseDoubleClickListener';\nimport mouseDownListener, { mouseDoubleClickIgnoreListener, } from './mouseDownListener';\nimport mouseMoveListener from './mouseMoveListener';\nfunction disable(element) {\n    element.removeEventListener('dblclick', mouseDoubleClickListener);\n    element.removeEventListener('mousedown', mouseDownListener);\n    element.removeEventListener('mousemove', mouseMoveListener);\n    element.removeEventListener('dblclick', mouseDoubleClickIgnoreListener, {\n        capture: true,\n    });\n}\nfunction enable(element) {\n    disable(element);\n    element.addEventListener('dblclick', mouseDoubleClickListener);\n    element.addEventListener('mousedown', mouseDownListener);\n    element.addEventListener('mousemove', mouseMoveListener);\n    element.addEventListener('dblclick', mouseDoubleClickIgnoreListener, {\n        capture: true,\n    });\n}\nexport default {\n    enable,\n    disable,\n};\n//# sourceMappingURL=index.js.map","const antiGhostDelay = 2000, pointerType = {\n    mouse: 0,\n    touch: 1,\n};\nlet lastInteractionType, lastInteractionTime;\nfunction handleTap(type, e) {\n    const now = Date.now();\n    if (type !== lastInteractionType) {\n        if (now - lastInteractionTime <= antiGhostDelay) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.stopImmediatePropagation();\n            return false;\n        }\n        lastInteractionType = type;\n    }\n    lastInteractionTime = now;\n}\nconst handleTapMouse = handleTap.bind(null, pointerType.mouse);\nconst handleTapTouch = handleTap.bind(null, pointerType.touch);\nfunction attachEvents(element, eventList, interactionType) {\n    const tapHandler = interactionType ? handleTapMouse : handleTapTouch;\n    eventList.forEach(function (eventName) {\n        element.addEventListener(eventName, tapHandler, { passive: false });\n    });\n}\nfunction removeEvents(element, eventList, interactionType) {\n    const tapHandler = interactionType ? handleTapMouse : handleTapTouch;\n    eventList.forEach(function (eventName) {\n        element.removeEventListener(eventName, tapHandler);\n    });\n}\nconst mouseEvents = ['mousedown', 'mouseup', 'mousemove'];\nconst touchEvents = ['touchstart', 'touchend'];\nfunction disable(element) {\n    removeEvents(element, mouseEvents, pointerType.mouse);\n    removeEvents(element, touchEvents, pointerType.touch);\n}\nfunction enable(element) {\n    disable(element);\n    attachEvents(element, mouseEvents, pointerType.mouse);\n    attachEvents(element, touchEvents, pointerType.touch);\n}\nexport default {\n    enable,\n    disable,\n};\n//# sourceMappingURL=preventGhostClick.js.map","import { getEnabledElement } from '@cornerstonejs/core';\nexport default function getTouchEventPoints(evt, element) {\n    const elementToUse = element || evt.currentTarget;\n    const touches = evt.type === 'touchend' ? evt.changedTouches : evt.touches;\n    return Object.keys(touches).map((i) => {\n        const clientPoint = _clientToPoint(touches[i]);\n        const pagePoint = _pageToPoint(touches[i]);\n        const canvasPoint = _pagePointsToCanvasPoints(elementToUse, pagePoint);\n        const { viewport } = getEnabledElement(elementToUse);\n        const worldPoint = viewport.canvasToWorld(canvasPoint);\n        return {\n            page: pagePoint,\n            client: clientPoint,\n            canvas: canvasPoint,\n            world: worldPoint,\n            touch: {\n                identifier: i,\n                radiusX: touches[i].radiusX,\n                radiusY: touches[i].radiusY,\n                force: touches[i].force,\n                rotationAngle: touches[i].rotationAngle,\n            },\n        };\n    });\n}\nfunction _pagePointsToCanvasPoints(element, pagePoint) {\n    const rect = element.getBoundingClientRect();\n    return [\n        pagePoint[0] - rect.left - window.pageXOffset,\n        pagePoint[1] - rect.top - window.pageYOffset,\n    ];\n}\nfunction _pageToPoint(touch) {\n    return [touch.pageX, touch.pageY];\n}\nfunction _clientToPoint(touch) {\n    return [touch.clientX, touch.clientY];\n}\n//# sourceMappingURL=getTouchEventPoints.js.map","function getDeltaPoints(currentPoints, lastPoints) {\n    const curr = getMeanPoints(currentPoints);\n    const last = getMeanPoints(lastPoints);\n    return {\n        page: _subtractPoints2D(curr.page, last.page),\n        client: _subtractPoints2D(curr.client, last.client),\n        canvas: _subtractPoints2D(curr.canvas, last.canvas),\n        world: _subtractPoints3D(curr.world, last.world),\n    };\n}\nfunction getDeltaDistance(currentPoints, lastPoints) {\n    const curr = getMeanPoints(currentPoints);\n    const last = getMeanPoints(lastPoints);\n    return {\n        page: _getDistance2D(curr.page, last.page),\n        client: _getDistance2D(curr.client, last.client),\n        canvas: _getDistance2D(curr.canvas, last.canvas),\n        world: _getDistance3D(curr.world, last.world),\n    };\n}\nfunction getDeltaRotation(currentPoints, lastPoints) {\n}\nfunction getDeltaDistanceBetweenIPoints(currentPoints, lastPoints) {\n    const currentDistance = _getMeanDistanceBetweenAllIPoints(currentPoints);\n    const lastDistance = _getMeanDistanceBetweenAllIPoints(lastPoints);\n    const deltaDistance = {\n        page: currentDistance.page - lastDistance.page,\n        client: currentDistance.client - lastDistance.client,\n        canvas: currentDistance.canvas - lastDistance.canvas,\n        world: currentDistance.world - lastDistance.world,\n    };\n    return deltaDistance;\n}\nfunction copyPointsList(points) {\n    return JSON.parse(JSON.stringify(points));\n}\nfunction copyPoints(points) {\n    return JSON.parse(JSON.stringify(points));\n}\nfunction getMeanPoints(points) {\n    return points.reduce((prev, curr) => {\n        return {\n            page: [\n                prev.page[0] + curr.page[0] / points.length,\n                prev.page[1] + curr.page[1] / points.length,\n            ],\n            client: [\n                prev.client[0] + curr.client[0] / points.length,\n                prev.client[1] + curr.client[1] / points.length,\n            ],\n            canvas: [\n                prev.canvas[0] + curr.canvas[0] / points.length,\n                prev.canvas[1] + curr.canvas[1] / points.length,\n            ],\n            world: [\n                prev.world[0] + curr.world[0] / points.length,\n                prev.world[1] + curr.world[1] / points.length,\n                prev.world[2] + curr.world[2] / points.length,\n            ],\n        };\n    }, {\n        page: [0, 0],\n        client: [0, 0],\n        canvas: [0, 0],\n        world: [0, 0, 0],\n    });\n}\nfunction getMeanTouchPoints(points) {\n    return points.reduce((prev, curr) => {\n        return {\n            page: [\n                prev.page[0] + curr.page[0] / points.length,\n                prev.page[1] + curr.page[1] / points.length,\n            ],\n            client: [\n                prev.client[0] + curr.client[0] / points.length,\n                prev.client[1] + curr.client[1] / points.length,\n            ],\n            canvas: [\n                prev.canvas[0] + curr.canvas[0] / points.length,\n                prev.canvas[1] + curr.canvas[1] / points.length,\n            ],\n            world: [\n                prev.world[0] + curr.world[0] / points.length,\n                prev.world[1] + curr.world[1] / points.length,\n                prev.world[2] + curr.world[2] / points.length,\n            ],\n            touch: {\n                identifier: null,\n                radiusX: prev.touch.radiusX + curr.touch.radiusX / points.length,\n                radiusY: prev.touch.radiusY + curr.touch.radiusY / points.length,\n                force: prev.touch.force + curr.touch.force / points.length,\n                rotationAngle: prev.touch.rotationAngle + curr.touch.rotationAngle / points.length,\n            },\n        };\n    }, {\n        page: [0, 0],\n        client: [0, 0],\n        canvas: [0, 0],\n        world: [0, 0, 0],\n        touch: {\n            identifier: null,\n            radiusX: 0,\n            radiusY: 0,\n            force: 0,\n            rotationAngle: 0,\n        },\n    });\n}\nfunction _subtractPoints2D(point0, point1) {\n    return [point0[0] - point1[0], point0[1] - point1[1]];\n}\nfunction _subtractPoints3D(point0, point1) {\n    return [point0[0] - point1[0], point0[1] - point1[1], point0[2] - point1[2]];\n}\nfunction _getMeanDistanceBetweenAllIPoints(points) {\n    const pairedDistance = [];\n    for (let i = 0; i < points.length; i++) {\n        for (let j = 0; j < points.length; j++) {\n            if (i < j) {\n                pairedDistance.push({\n                    page: _getDistance2D(points[i].page, points[j].page),\n                    client: _getDistance2D(points[i].client, points[j].client),\n                    canvas: _getDistance2D(points[i].canvas, points[j].canvas),\n                    world: _getDistance3D(points[i].world, points[j].world),\n                });\n            }\n        }\n    }\n    return pairedDistance.reduce((prev, curr) => {\n        return {\n            page: prev.page + curr.page / pairedDistance.length,\n            client: prev.client + curr.client / pairedDistance.length,\n            canvas: prev.canvas + curr.canvas / pairedDistance.length,\n            world: prev.world + curr.world / pairedDistance.length,\n        };\n    }, {\n        page: 0,\n        client: 0,\n        canvas: 0,\n        world: 0,\n    });\n}\nfunction _getDistance2D(point0, point1) {\n    return Math.sqrt(Math.pow(point0[0] - point1[0], 2) + Math.pow(point0[1] - point1[1], 2));\n}\nfunction _getDistance3D(point0, point1) {\n    return Math.sqrt(Math.pow(point0[0] - point1[0], 2) +\n        Math.pow(point0[1] - point1[1], 2) +\n        Math.pow(point0[2] - point1[2], 2));\n}\nexport { getMeanPoints, getMeanTouchPoints, copyPoints, copyPointsList, getDeltaDistanceBetweenIPoints, getDeltaPoints, getDeltaDistance, getDeltaRotation, };\n//# sourceMappingURL=index.js.map","import { getEnabledElement, triggerEvent } from '@cornerstonejs/core';\nimport Events from '../../enums/Events';\nimport { Swipe } from '../../enums/Touch';\nimport getTouchEventPoints from './getTouchEventPoints';\nimport { copyPoints, copyPointsList, getDeltaDistanceBetweenIPoints, getDeltaDistance, getDeltaPoints, getMeanTouchPoints, } from '../../utilities/touch';\nimport { Settings } from '@cornerstonejs/core';\nconst runtimeSettings = Settings.getRuntimeSettings();\nconst { TOUCH_START, TOUCH_START_ACTIVATE, TOUCH_PRESS, TOUCH_DRAG, TOUCH_END, TOUCH_TAP, TOUCH_SWIPE, } = Events;\nconst zeroIPoint = {\n    page: [0, 0],\n    client: [0, 0],\n    canvas: [0, 0],\n    world: [0, 0, 0],\n};\nconst zeroIDistance = {\n    page: 0,\n    client: 0,\n    canvas: 0,\n    world: 0,\n};\nconst defaultState = {\n    renderingEngineId: undefined,\n    viewportId: undefined,\n    element: null,\n    startPointsList: [\n        {\n            ...zeroIPoint,\n            touch: null,\n        },\n    ],\n    lastPointsList: [\n        {\n            ...zeroIPoint,\n            touch: null,\n        },\n    ],\n    isTouchStart: false,\n    startTime: null,\n    pressTimeout: null,\n    pressDelay: 700,\n    pressMaxDistance: 5,\n    accumulatedDistance: zeroIDistance,\n    swipeDistanceThreshold: 48,\n    swiped: false,\n    swipeToleranceMs: 300,\n};\nconst defaultTapState = {\n    renderingEngineId: undefined,\n    viewportId: undefined,\n    element: null,\n    startPointsList: [\n        {\n            ...zeroIPoint,\n            touch: null,\n        },\n    ],\n    taps: 0,\n    tapTimeout: null,\n    tapMaxDistance: 24,\n    tapToleranceMs: 300,\n};\nlet state = JSON.parse(JSON.stringify(defaultState));\nlet tapState = JSON.parse(JSON.stringify(defaultTapState));\nfunction triggerEventCallback(ele, name, eventDetail) {\n    if (runtimeSettings.get('debug')) {\n        if (name === 'CORNERSTONE_TOOLS_TOUCH_DRAG') {\n            console.debug(name);\n        }\n        else {\n            console.debug(name, eventDetail);\n        }\n    }\n    return triggerEvent(ele, name, eventDetail);\n}\nfunction touchStartListener(evt) {\n    state.element = evt.currentTarget;\n    const enabledElement = getEnabledElement(state.element);\n    const { renderingEngineId, viewportId } = enabledElement;\n    state.renderingEngineId = renderingEngineId;\n    state.viewportId = viewportId;\n    if (state.isTouchStart)\n        return;\n    clearTimeout(state.pressTimeout);\n    state.pressTimeout = setTimeout(() => _onTouchPress(evt), state.pressDelay);\n    _onTouchStart(evt);\n    document.addEventListener('touchmove', _onTouchDrag);\n    document.addEventListener('touchend', _onTouchEnd);\n}\nfunction _onTouchPress(evt) {\n    const totalDistance = state.accumulatedDistance.canvas;\n    if (totalDistance > state.pressMaxDistance)\n        return;\n    const eventDetail = {\n        event: evt,\n        eventName: TOUCH_PRESS,\n        renderingEngineId: state.renderingEngineId,\n        viewportId: state.viewportId,\n        camera: {},\n        element: state.element,\n        startPointsList: copyPointsList(state.startPointsList),\n        lastPointsList: copyPointsList(state.lastPointsList),\n        startPoints: copyPoints(getMeanTouchPoints(state.startPointsList)),\n        lastPoints: copyPoints(getMeanTouchPoints(state.lastPointsList)),\n    };\n    triggerEventCallback(eventDetail.element, TOUCH_PRESS, eventDetail);\n}\nfunction _onTouchStart(evt) {\n    state.isTouchStart = true;\n    state.startTime = new Date();\n    const startPointsList = getTouchEventPoints(evt, state.element);\n    const startPoints = getMeanTouchPoints(startPointsList);\n    const deltaPoints = zeroIPoint;\n    const deltaDistance = zeroIDistance;\n    const eventDetail = {\n        event: evt,\n        eventName: TOUCH_START,\n        element: state.element,\n        renderingEngineId: state.renderingEngineId,\n        viewportId: state.viewportId,\n        camera: {},\n        startPointsList: startPointsList,\n        lastPointsList: startPointsList,\n        currentPointsList: startPointsList,\n        startPoints: startPoints,\n        lastPoints: startPoints,\n        currentPoints: startPoints,\n        deltaPoints,\n        deltaDistance,\n    };\n    state.startPointsList = copyPointsList(eventDetail.startPointsList);\n    state.lastPointsList = copyPointsList(eventDetail.lastPointsList);\n    const eventDidPropagate = triggerEventCallback(eventDetail.element, TOUCH_START, eventDetail);\n    if (eventDidPropagate) {\n        triggerEventCallback(eventDetail.element, TOUCH_START_ACTIVATE, eventDetail);\n    }\n}\nfunction _onTouchDrag(evt) {\n    const currentPointsList = getTouchEventPoints(evt, state.element);\n    const lastPointsList = _updateTouchEventsLastPoints(state.element, state.lastPointsList);\n    const deltaPoints = currentPointsList.length === lastPointsList.length\n        ? getDeltaPoints(currentPointsList, lastPointsList)\n        : zeroIPoint;\n    const deltaDistance = currentPointsList.length === lastPointsList.length\n        ? getDeltaDistanceBetweenIPoints(currentPointsList, lastPointsList)\n        : zeroIDistance;\n    const totalDistance = currentPointsList.length === lastPointsList.length\n        ? getDeltaDistance(currentPointsList, state.lastPointsList)\n        : zeroIDistance;\n    state.accumulatedDistance = {\n        page: state.accumulatedDistance.page + totalDistance.page,\n        client: state.accumulatedDistance.client + totalDistance.client,\n        canvas: state.accumulatedDistance.canvas + totalDistance.canvas,\n        world: state.accumulatedDistance.world + totalDistance.world,\n    };\n    const eventDetail = {\n        event: evt,\n        eventName: TOUCH_DRAG,\n        renderingEngineId: state.renderingEngineId,\n        viewportId: state.viewportId,\n        camera: {},\n        element: state.element,\n        startPoints: getMeanTouchPoints(state.startPointsList),\n        lastPoints: getMeanTouchPoints(lastPointsList),\n        currentPoints: getMeanTouchPoints(currentPointsList),\n        startPointsList: copyPointsList(state.startPointsList),\n        lastPointsList: copyPointsList(lastPointsList),\n        currentPointsList,\n        deltaPoints: deltaPoints,\n        deltaDistance: deltaDistance,\n    };\n    triggerEventCallback(state.element, TOUCH_DRAG, eventDetail);\n    _checkTouchSwipe(evt, deltaPoints);\n    state.lastPointsList = copyPointsList(currentPointsList);\n}\nfunction _onTouchEnd(evt) {\n    clearTimeout(state.pressTimeout);\n    const currentPointsList = getTouchEventPoints(evt, state.element);\n    const lastPointsList = _updateTouchEventsLastPoints(state.element, state.lastPointsList);\n    const deltaPoints = currentPointsList.length === lastPointsList.length\n        ? getDeltaPoints(currentPointsList, lastPointsList)\n        : getDeltaPoints(currentPointsList, currentPointsList);\n    const deltaDistance = currentPointsList.length === lastPointsList.length\n        ? getDeltaDistanceBetweenIPoints(currentPointsList, lastPointsList)\n        : getDeltaDistanceBetweenIPoints(currentPointsList, currentPointsList);\n    const eventDetail = {\n        event: evt,\n        eventName: TOUCH_END,\n        element: state.element,\n        renderingEngineId: state.renderingEngineId,\n        viewportId: state.viewportId,\n        camera: {},\n        startPointsList: copyPointsList(state.startPointsList),\n        lastPointsList: copyPointsList(lastPointsList),\n        currentPointsList,\n        startPoints: getMeanTouchPoints(state.startPointsList),\n        lastPoints: getMeanTouchPoints(lastPointsList),\n        currentPoints: getMeanTouchPoints(currentPointsList),\n        deltaPoints,\n        deltaDistance,\n    };\n    triggerEventCallback(eventDetail.element, TOUCH_END, eventDetail);\n    _checkTouchTap(evt);\n    state = JSON.parse(JSON.stringify(defaultState));\n    document.removeEventListener('touchmove', _onTouchDrag);\n    document.removeEventListener('touchend', _onTouchEnd);\n}\nfunction _checkTouchTap(evt) {\n    const currentTime = new Date().getTime();\n    const startTime = state.startTime.getTime();\n    if (currentTime - startTime > tapState.tapToleranceMs)\n        return;\n    if (tapState.taps === 0) {\n        tapState.element = state.element;\n        tapState.renderingEngineId = state.renderingEngineId;\n        tapState.viewportId = state.viewportId;\n        tapState.startPointsList = state.startPointsList;\n    }\n    if (tapState.taps > 0 &&\n        !(tapState.element == state.element &&\n            tapState.renderingEngineId == state.renderingEngineId &&\n            tapState.viewportId == state.viewportId)) {\n        return;\n    }\n    const currentPointsList = getTouchEventPoints(evt, tapState.element);\n    const distanceFromStart = getDeltaDistance(currentPointsList, tapState.startPointsList).canvas;\n    if (distanceFromStart > tapState.tapMaxDistance)\n        return;\n    clearTimeout(tapState.tapTimeout);\n    tapState.taps += 1;\n    tapState.tapTimeout = setTimeout(() => {\n        const eventDetail = {\n            event: evt,\n            eventName: TOUCH_TAP,\n            element: tapState.element,\n            renderingEngineId: tapState.renderingEngineId,\n            viewportId: tapState.viewportId,\n            camera: {},\n            currentPointsList,\n            currentPoints: getMeanTouchPoints(currentPointsList),\n            taps: tapState.taps,\n        };\n        triggerEventCallback(eventDetail.element, TOUCH_TAP, eventDetail);\n        tapState = JSON.parse(JSON.stringify(defaultTapState));\n    }, tapState.tapToleranceMs);\n}\nfunction _checkTouchSwipe(evt, deltaPoints) {\n    const currentTime = new Date().getTime();\n    const startTime = state.startTime.getTime();\n    if (state.swiped || currentTime - startTime > state.swipeToleranceMs)\n        return;\n    const [x, y] = deltaPoints.canvas;\n    const eventDetail = {\n        event: evt,\n        eventName: TOUCH_SWIPE,\n        renderingEngineId: state.renderingEngineId,\n        viewportId: state.viewportId,\n        camera: {},\n        element: state.element,\n        swipe: null,\n    };\n    if (Math.abs(x) > state.swipeDistanceThreshold) {\n        eventDetail.swipe = x > 0 ? Swipe.RIGHT : Swipe.LEFT;\n        triggerEventCallback(eventDetail.element, TOUCH_SWIPE, eventDetail);\n        state.swiped = true;\n    }\n    if (Math.abs(y) > state.swipeDistanceThreshold) {\n        eventDetail.swipe = y > 0 ? Swipe.DOWN : Swipe.UP;\n        triggerEventCallback(eventDetail.element, TOUCH_SWIPE, eventDetail);\n        state.swiped = true;\n    }\n}\nfunction _updateTouchEventsLastPoints(element, lastPoints) {\n    const { viewport } = getEnabledElement(element);\n    return lastPoints.map((lp) => {\n        const world = viewport.canvasToWorld(lp.canvas);\n        return {\n            page: lp.page,\n            client: lp.client,\n            canvas: lp.canvas,\n            world,\n            touch: lp.touch,\n        };\n    });\n}\nexport default touchStartListener;\n//# sourceMappingURL=touchStartListener.js.map","import preventGhostClick from './preventGhostClick';\nimport touchStartListener from './touchStartListener';\nfunction disable(element) {\n    preventGhostClick.disable(element);\n    element.removeEventListener('touchstart', touchStartListener);\n}\nfunction enable(element) {\n    disable(element);\n    preventGhostClick.enable(element);\n    element.addEventListener('touchstart', touchStartListener, {\n        passive: false,\n    });\n}\nexport default {\n    enable,\n    disable,\n};\n//# sourceMappingURL=index.js.map","const PIXEL_STEP = 10;\nconst LINE_HEIGHT = 40;\nconst PAGE_HEIGHT = 800;\nexport default function normalizeWheel(event) {\n    let spinX = 0, spinY = 0, pixelX = 0, pixelY = 0;\n    if ('detail' in event) {\n        spinY = event.detail;\n    }\n    if ('wheelDelta' in event) {\n        spinY = -event.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in event) {\n        spinY = -event.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in event) {\n        spinX = -event.wheelDeltaX / 120;\n    }\n    pixelX = spinX * PIXEL_STEP;\n    pixelY = spinY * PIXEL_STEP;\n    if ('deltaY' in event) {\n        pixelY = event.deltaY;\n    }\n    if ('deltaX' in event) {\n        pixelX = event.deltaX;\n    }\n    if ((pixelX || pixelY) && event.deltaMode) {\n        if (event.deltaMode === 1) {\n            pixelX *= LINE_HEIGHT;\n            pixelY *= LINE_HEIGHT;\n        }\n        else {\n            pixelX *= PAGE_HEIGHT;\n            pixelY *= PAGE_HEIGHT;\n        }\n    }\n    if (pixelX && !spinX) {\n        spinX = pixelX < 1 ? -1 : 1;\n    }\n    if (pixelY && !spinY) {\n        spinY = pixelY < 1 ? -1 : 1;\n    }\n    return {\n        spinX,\n        spinY,\n        pixelX,\n        pixelY,\n    };\n}\n//# sourceMappingURL=normalizeWheel.js.map","import { getEnabledElement, triggerEvent } from '@cornerstonejs/core';\nimport normalizeWheel from './normalizeWheel';\nimport Events from '../../enums/Events';\nimport getMouseEventPoints from '../mouse/getMouseEventPoints';\nfunction wheelListener(evt) {\n    const element = evt.currentTarget;\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngineId, viewportId } = enabledElement;\n    if (evt.deltaY > -1 && evt.deltaY < 1) {\n        return;\n    }\n    evt.preventDefault();\n    const { spinX, spinY, pixelX, pixelY } = normalizeWheel(evt);\n    const direction = spinY < 0 ? -1 : 1;\n    const eventDetail = {\n        event: evt,\n        eventName: Events.MOUSE_WHEEL,\n        renderingEngineId,\n        viewportId,\n        element,\n        camera: {},\n        detail: evt,\n        wheel: {\n            spinX,\n            spinY,\n            pixelX,\n            pixelY,\n            direction,\n        },\n        points: getMouseEventPoints(evt),\n    };\n    triggerEvent(element, Events.MOUSE_WHEEL, eventDetail);\n}\nexport default wheelListener;\n//# sourceMappingURL=wheelListener.js.map","import wheelListener from './wheelListener';\nfunction enable(element) {\n    disable(element);\n    element.addEventListener('wheel', wheelListener, { passive: false });\n}\nfunction disable(element) {\n    element.removeEventListener('wheel', wheelListener);\n}\nexport default {\n    enable,\n    disable,\n};\n//# sourceMappingURL=index.js.map","import _cloneDeep from 'lodash.clonedeep';\nimport { getEnabledElement, triggerEvent } from '@cornerstonejs/core';\nimport Events from '../../enums/Events';\nconst defaultState = {\n    renderingEngineId: undefined,\n    viewportId: undefined,\n    key: undefined,\n    keyCode: undefined,\n    element: null,\n};\nlet state = {\n    renderingEngineId: undefined,\n    viewportId: undefined,\n    key: undefined,\n    keyCode: undefined,\n    element: null,\n};\nfunction keyListener(evt) {\n    state.element = evt.currentTarget;\n    const enabledElement = getEnabledElement(state.element);\n    const { renderingEngineId, viewportId } = enabledElement;\n    state.renderingEngineId = renderingEngineId;\n    state.viewportId = viewportId;\n    state.key = evt.key;\n    state.keyCode = evt.keyCode;\n    evt.preventDefault();\n    const eventDetail = {\n        renderingEngineId: state.renderingEngineId,\n        viewportId: state.viewportId,\n        element: state.element,\n        key: state.key,\n        keyCode: state.keyCode,\n    };\n    triggerEvent(eventDetail.element, Events.KEY_DOWN, eventDetail);\n    document.addEventListener('keyup', _onKeyUp);\n    state.element.removeEventListener('keydown', keyListener);\n}\nfunction _onKeyUp(evt) {\n    const eventDetail = {\n        renderingEngineId: state.renderingEngineId,\n        viewportId: state.viewportId,\n        element: state.element,\n        key: state.key,\n        keyCode: state.keyCode,\n    };\n    document.removeEventListener('keyup', _onKeyUp);\n    state.element.addEventListener('keydown', keyListener);\n    state = _cloneDeep(defaultState);\n    triggerEvent(eventDetail.element, Events.KEY_UP, eventDetail);\n}\nexport function getModifierKey() {\n    return state.keyCode;\n}\nexport function resetModifierKey() {\n    state.keyCode = undefined;\n}\nexport default keyListener;\n//# sourceMappingURL=keyDownListener.js.map","import keyDownListener, { getModifierKey } from './keyDownListener';\nfunction enable(element) {\n    disable(element);\n    element.addEventListener('keydown', keyDownListener);\n}\nfunction disable(element) {\n    element.removeEventListener('keydown', keyDownListener);\n}\nexport default {\n    enable,\n    disable,\n    getModifierKey,\n};\n//# sourceMappingURL=index.js.map","const CORNERSTONE_COLOR_LUT = [\n    [0, 0, 0, 0],\n    [221, 84, 84, 255],\n    [77, 228, 121, 255],\n    [166, 70, 235, 255],\n    [189, 180, 116, 255],\n    [109, 182, 196, 255],\n    [204, 101, 157, 255],\n    [123, 211, 94, 255],\n    [93, 87, 218, 255],\n    [225, 128, 80, 255],\n    [73, 232, 172, 255],\n    [181, 119, 186, 255],\n    [176, 193, 112, 255],\n    [105, 153, 200, 255],\n    [208, 97, 120, 255],\n    [90, 215, 101, 255],\n    [135, 83, 222, 255],\n    [229, 178, 76, 255],\n    [122, 183, 181, 255],\n    [190, 115, 171, 255],\n    [149, 197, 108, 255],\n    [100, 118, 205, 255],\n    [212, 108, 93, 255],\n    [86, 219, 141, 255],\n    [183, 79, 226, 255],\n    [233, 233, 72, 255],\n    [118, 167, 187, 255],\n    [194, 111, 146, 255],\n    [116, 201, 104, 255],\n    [115, 96, 209, 255],\n    [216, 147, 89, 255],\n    [82, 223, 188, 255],\n    [230, 75, 224, 255],\n    [163, 184, 121, 255],\n    [114, 143, 191, 255],\n    [198, 107, 114, 255],\n    [99, 206, 122, 255],\n    [153, 92, 213, 255],\n    [220, 192, 85, 255],\n    [78, 215, 227, 255],\n    [234, 71, 173, 255],\n    [141, 188, 117, 255],\n    [110, 113, 195, 255],\n    [202, 128, 103, 255],\n    [95, 210, 157, 255],\n    [195, 88, 217, 255],\n    [206, 224, 81, 255],\n    [74, 166, 231, 255],\n    [185, 120, 139, 255],\n    [113, 192, 113, 255],\n    [133, 106, 199, 255],\n    [207, 162, 98, 255],\n    [91, 214, 198, 255],\n    [221, 84, 198, 255],\n    [159, 228, 77, 255],\n    [70, 111, 235, 255],\n    [189, 119, 116, 255],\n    [109, 196, 138, 255],\n    [165, 101, 204, 255],\n    [211, 201, 94, 255],\n    [87, 191, 218, 255],\n    [225, 80, 153, 255],\n    [106, 232, 73, 255],\n    [124, 119, 186, 255],\n    [193, 142, 112, 255],\n    [105, 200, 168, 255],\n    [203, 97, 208, 255],\n    [184, 215, 90, 255],\n    [83, 147, 222, 255],\n    [229, 76, 101, 255],\n    [122, 183, 130, 255],\n    [146, 115, 190, 255],\n    [197, 171, 108, 255],\n    [100, 205, 205, 255],\n    [212, 93, 177, 255],\n    [141, 219, 86, 255],\n    [79, 97, 226, 255],\n    [233, 99, 72, 255],\n    [118, 187, 150, 255],\n    [173, 111, 194, 255],\n    [197, 201, 104, 255],\n    [96, 171, 209, 255],\n    [216, 89, 137, 255],\n    [94, 223, 82, 255],\n    [107, 75, 230, 255],\n    [184, 153, 121, 255],\n    [114, 191, 175, 255],\n    [198, 107, 191, 255],\n    [166, 206, 99, 255],\n    [92, 132, 213, 255],\n    [220, 85, 91, 255],\n    [78, 227, 115, 255],\n    [159, 71, 234, 255],\n    [188, 176, 117, 255],\n    [110, 185, 195, 255],\n    [202, 103, 161, 255],\n    [129, 210, 95, 255],\n    [88, 88, 217, 255],\n    [224, 123, 81, 255],\n    [74, 231, 166, 255],\n    [177, 120, 185, 255],\n    [179, 192, 113, 255],\n    [106, 156, 199, 255],\n    [207, 98, 125, 255],\n    [91, 214, 96, 255],\n    [130, 84, 221, 255],\n    [228, 171, 77, 255],\n    [70, 235, 221, 255],\n    [189, 116, 174, 255],\n    [153, 196, 109, 255],\n    [101, 123, 204, 255],\n    [211, 104, 94, 255],\n    [87, 218, 136, 255],\n    [177, 80, 225, 255],\n    [232, 225, 73, 255],\n    [119, 169, 186, 255],\n    [193, 112, 149, 255],\n    [121, 200, 105, 255],\n    [111, 97, 208, 255],\n    [215, 142, 90, 255],\n    [83, 222, 181, 255],\n    [229, 76, 229, 255],\n    [165, 183, 122, 255],\n    [115, 146, 190, 255],\n    [197, 108, 119, 255],\n    [100, 205, 118, 255],\n    [148, 93, 212, 255],\n    [219, 186, 86, 255],\n    [79, 220, 226, 255],\n    [233, 72, 179, 255],\n    [144, 187, 118, 255],\n    [111, 118, 194, 255],\n    [201, 124, 104, 255],\n    [96, 209, 153, 255],\n    [189, 89, 216, 255],\n    [211, 223, 82, 255],\n    [75, 172, 230, 255],\n    [184, 121, 142, 255],\n    [117, 191, 114, 255],\n    [130, 107, 198, 255],\n    [206, 157, 99, 255],\n    [92, 213, 193, 255],\n    [220, 85, 203, 255],\n    [165, 227, 78, 255],\n    [71, 118, 234, 255],\n    [188, 117, 117, 255],\n    [110, 195, 135, 255],\n    [161, 103, 202, 255],\n    [210, 195, 95, 255],\n    [88, 195, 217, 255],\n    [224, 81, 158, 255],\n    [113, 231, 74, 255],\n    [123, 120, 185, 255],\n    [192, 139, 113, 255],\n    [106, 199, 164, 255],\n    [198, 98, 207, 255],\n    [188, 214, 91, 255],\n    [84, 153, 221, 255],\n    [228, 77, 108, 255],\n    [70, 235, 84, 255],\n    [143, 116, 189, 255],\n    [196, 167, 109, 255],\n    [101, 204, 199, 255],\n    [211, 94, 182, 255],\n    [147, 218, 87, 255],\n    [80, 104, 225, 255],\n    [232, 93, 73, 255],\n    [119, 186, 147, 255],\n    [170, 112, 193, 255],\n    [200, 200, 105, 255],\n    [97, 175, 208, 255],\n    [215, 90, 142, 255],\n    [100, 222, 83, 255],\n    [101, 76, 229, 255],\n    [183, 150, 122, 255],\n    [115, 190, 171, 255],\n    [197, 108, 194, 255],\n    [170, 205, 100, 255],\n    [93, 138, 212, 255],\n    [219, 86, 97, 255],\n    [79, 226, 110, 255],\n    [153, 72, 233, 255],\n    [187, 173, 118, 255],\n    [111, 187, 194, 255],\n    [201, 104, 165, 255],\n    [134, 209, 96, 255],\n    [89, 95, 216, 255],\n    [223, 117, 82, 255],\n    [75, 230, 159, 255],\n    [174, 121, 184, 255],\n    [182, 191, 114, 255],\n    [107, 160, 198, 255],\n    [206, 99, 130, 255],\n    [92, 213, 92, 255],\n    [124, 85, 220, 255],\n    [227, 165, 78, 255],\n    [71, 234, 214, 255],\n    [188, 117, 176, 255],\n    [156, 195, 110, 255],\n    [103, 128, 202, 255],\n    [210, 100, 95, 255],\n    [88, 217, 131, 255],\n    [170, 81, 224, 255],\n    [231, 218, 74, 255],\n    [120, 172, 185, 255],\n    [192, 113, 153, 255],\n    [125, 199, 106, 255],\n    [107, 98, 207, 255],\n    [214, 137, 91, 255],\n    [84, 221, 175, 255],\n    [222, 77, 228, 255],\n    [194, 235, 70, 255],\n    [116, 149, 189, 255],\n    [196, 109, 123, 255],\n    [101, 204, 114, 255],\n    [143, 94, 211, 255],\n    [218, 180, 87, 255],\n    [80, 225, 225, 255],\n    [232, 73, 186, 255],\n    [147, 186, 119, 255],\n    [112, 122, 193, 255],\n    [200, 121, 105, 255],\n    [97, 208, 148, 255],\n    [184, 90, 215, 255],\n    [216, 222, 83, 255],\n    [76, 178, 229, 255],\n    [183, 122, 145, 255],\n    [121, 190, 115, 255],\n    [126, 108, 197, 255],\n    [205, 153, 100, 255],\n    [93, 212, 187, 255],\n    [219, 86, 208, 255],\n    [171, 226, 79, 255],\n    [72, 126, 233, 255],\n    [187, 118, 121, 255],\n    [111, 194, 132, 255],\n    [157, 104, 201, 255],\n    [209, 190, 96, 255],\n    [89, 200, 216, 255],\n    [223, 82, 164, 255],\n    [120, 230, 75, 255],\n    [121, 121, 184, 255],\n    [191, 136, 114, 255],\n    [107, 198, 160, 255],\n    [192, 99, 206, 255],\n    [193, 213, 92, 255],\n    [85, 158, 220, 255],\n    [227, 78, 115, 255],\n    [71, 234, 78, 255],\n    [141, 117, 188, 255],\n    [195, 163, 110, 255],\n    [103, 202, 194, 255],\n    [210, 95, 186, 255],\n    [153, 217, 88, 255],\n    [81, 111, 224, 255],\n];\nexport default CORNERSTONE_COLOR_LUT;\n//# sourceMappingURL=COLOR_LUT.js.map","const defaultContourConfig = {\n    renderOutline: true,\n    outlineWidthActive: 2,\n    outlineWidthInactive: 2,\n    outlineOpacity: 1,\n    outlineOpacityInactive: 0.85,\n    renderFill: true,\n    fillAlpha: 1,\n    fillAlphaInactive: 0,\n};\nfunction getDefaultContourConfig() {\n    return defaultContourConfig;\n}\nexport default getDefaultContourConfig;\n//# sourceMappingURL=contourConfig.js.map","const defaultLabelmapConfig = {\n    renderOutline: true,\n    outlineWidthActive: 3,\n    outlineWidthInactive: 2,\n    renderFill: true,\n    renderFillInactive: true,\n    fillAlpha: 0.7,\n    fillAlphaInactive: 0.65,\n    outlineOpacity: 1,\n    outlineOpacityInactive: 0.85,\n};\nfunction getDefaultLabelmapConfig() {\n    return defaultLabelmapConfig;\n}\nfunction isValidLabelmapConfig(config) {\n    return (config &&\n        typeof config.renderOutline === 'boolean' &&\n        typeof config.outlineWidthActive === 'number' &&\n        typeof config.outlineWidthInactive === 'number' &&\n        typeof config.renderFill === 'boolean' &&\n        typeof config.renderFillInactive === 'boolean' &&\n        typeof config.fillAlpha === 'number' &&\n        typeof config.fillAlphaInactive === 'number' &&\n        typeof config.outlineOpacity === 'number' &&\n        typeof config.outlineOpacityInactive === 'number');\n}\nexport default getDefaultLabelmapConfig;\nexport { isValidLabelmapConfig };\n//# sourceMappingURL=labelmapConfig.js.map","import { utilities as csUtils } from '@cornerstonejs/core';\nimport cloneDeep from 'lodash.clonedeep';\nimport CORNERSTONE_COLOR_LUT from '../../constants/COLOR_LUT';\nimport { SegmentationRepresentations } from '../../enums';\nimport getDefaultContourConfig from '../../tools/displayTools/Contour/contourConfig';\nimport getDefaultLabelmapConfig from '../../tools/displayTools/Labelmap/labelmapConfig';\nconst defaultLabelmapConfig = getDefaultLabelmapConfig();\nconst defaultContourConfig = getDefaultContourConfig();\nconst newGlobalConfig = {\n    renderInactiveSegmentations: true,\n    representations: {\n        [SegmentationRepresentations.Labelmap]: defaultLabelmapConfig,\n        [SegmentationRepresentations.Contour]: defaultContourConfig,\n    },\n};\nconst initialDefaultState = {\n    colorLUT: [],\n    segmentations: [],\n    globalConfig: newGlobalConfig,\n    toolGroups: {},\n};\nexport default class SegmentationStateManager {\n    constructor(uid) {\n        if (!uid) {\n            uid = csUtils.uuidv4();\n        }\n        this.state = cloneDeep(initialDefaultState);\n        this.uid = uid;\n    }\n    getState() {\n        return this.state;\n    }\n    getToolGroups() {\n        return Object.keys(this.state.toolGroups);\n    }\n    getColorLUT(lutIndex) {\n        return this.state.colorLUT[lutIndex];\n    }\n    resetState() {\n        this.state = cloneDeep(initialDefaultState);\n    }\n    getSegmentation(segmentationId) {\n        return this.state.segmentations.find((segmentation) => segmentation.segmentationId === segmentationId);\n    }\n    addSegmentation(segmentation) {\n        this._initDefaultColorLUTIfNecessary();\n        if (this.getSegmentation(segmentation.segmentationId)) {\n            throw new Error(`Segmentation with id ${segmentation.segmentationId} already exists`);\n        }\n        this.state.segmentations.push(segmentation);\n    }\n    getSegmentationRepresentations(toolGroupId) {\n        const toolGroupSegRepresentationsWithConfig = this.state.toolGroups[toolGroupId];\n        if (!toolGroupSegRepresentationsWithConfig) {\n            return;\n        }\n        return toolGroupSegRepresentationsWithConfig.segmentationRepresentations;\n    }\n    addSegmentationRepresentation(toolGroupId, segmentationRepresentation) {\n        if (!this.state.toolGroups[toolGroupId]) {\n            this.state.toolGroups[toolGroupId] = {\n                segmentationRepresentations: [],\n                config: {},\n            };\n        }\n        this.state.toolGroups[toolGroupId].segmentationRepresentations.push(segmentationRepresentation);\n        this._handleActiveSegmentation(toolGroupId, segmentationRepresentation);\n    }\n    getGlobalConfig() {\n        return this.state.globalConfig;\n    }\n    setGlobalConfig(config) {\n        this.state.globalConfig = config;\n    }\n    getSegmentationRepresentationByUID(toolGroupId, segmentationRepresentationUID) {\n        const toolGroupSegRepresentations = this.getSegmentationRepresentations(toolGroupId);\n        const segmentationData = toolGroupSegRepresentations.find((representation) => representation.segmentationRepresentationUID ===\n            segmentationRepresentationUID);\n        return segmentationData;\n    }\n    removeSegmentation(segmentationId) {\n        this.state.segmentations = this.state.segmentations.filter((segmentation) => segmentation.segmentationId !== segmentationId);\n    }\n    removeSegmentationRepresentation(toolGroupId, segmentationRepresentationUID) {\n        const toolGroupSegmentationRepresentations = this.getSegmentationRepresentations(toolGroupId);\n        if (!toolGroupSegmentationRepresentations ||\n            !toolGroupSegmentationRepresentations.length) {\n            throw new Error(`No viewport specific segmentation state found for viewport ${toolGroupId}`);\n        }\n        const state = toolGroupSegmentationRepresentations;\n        const index = state.findIndex((segData) => segData.segmentationRepresentationUID === segmentationRepresentationUID);\n        if (index === -1) {\n            console.warn(`No viewport specific segmentation state data found for viewport ${toolGroupId} and segmentation data UID ${segmentationRepresentationUID}`);\n        }\n        const removedSegmentationRepresentation = toolGroupSegmentationRepresentations[index];\n        toolGroupSegmentationRepresentations.splice(index, 1);\n        this._handleActiveSegmentation(toolGroupId, removedSegmentationRepresentation);\n    }\n    setActiveSegmentationRepresentation(toolGroupId, segmentationRepresentationUID) {\n        const toolGroupSegmentations = this.getSegmentationRepresentations(toolGroupId);\n        if (!toolGroupSegmentations || !toolGroupSegmentations.length) {\n            throw new Error(`No segmentation data found for toolGroupId: ${toolGroupId}`);\n        }\n        const segmentationData = toolGroupSegmentations.find((segmentationData) => segmentationData.segmentationRepresentationUID ===\n            segmentationRepresentationUID);\n        if (!segmentationData) {\n            throw new Error(`No segmentation data found for segmentation data UID ${segmentationRepresentationUID}`);\n        }\n        segmentationData.active = true;\n        this._handleActiveSegmentation(toolGroupId, segmentationData);\n    }\n    getToolGroupSpecificConfig(toolGroupId) {\n        const toolGroupStateWithConfig = this.state.toolGroups[toolGroupId];\n        if (!toolGroupStateWithConfig) {\n            return;\n        }\n        return toolGroupStateWithConfig.config;\n    }\n    getSegmentationRepresentationSpecificConfig(toolGroupId, segmentationRepresentationUID) {\n        const segmentationRepresentation = this.getSegmentationRepresentationByUID(toolGroupId, segmentationRepresentationUID);\n        if (!segmentationRepresentation) {\n            return;\n        }\n        return segmentationRepresentation.segmentationRepresentationSpecificConfig;\n    }\n    setSegmentationRepresentationSpecificConfig(toolGroupId, segmentationRepresentationUID, config) {\n        const segmentationRepresentation = this.getSegmentationRepresentationByUID(toolGroupId, segmentationRepresentationUID);\n        if (!segmentationRepresentation) {\n            return;\n        }\n        segmentationRepresentation.segmentationRepresentationSpecificConfig =\n            config;\n    }\n    getSegmentSpecificConfig(toolGroupId, segmentationRepresentationUID, segmentIndex) {\n        const segmentationRepresentation = this.getSegmentationRepresentationByUID(toolGroupId, segmentationRepresentationUID);\n        if (!segmentationRepresentation) {\n            return;\n        }\n        return segmentationRepresentation.segmentSpecificConfig[segmentIndex];\n    }\n    setSegmentSpecificConfig(toolGroupId, segmentationRepresentationUID, config) {\n        const segmentationRepresentation = this.getSegmentationRepresentationByUID(toolGroupId, segmentationRepresentationUID);\n        if (!segmentationRepresentation) {\n            return;\n        }\n        segmentationRepresentation.segmentSpecificConfig = config;\n    }\n    setSegmentationRepresentationConfig(toolGroupId, config) {\n        let toolGroupStateWithConfig = this.state.toolGroups[toolGroupId];\n        if (!toolGroupStateWithConfig) {\n            this.state.toolGroups[toolGroupId] = {\n                segmentationRepresentations: [],\n                config: {\n                    renderInactiveSegmentations: true,\n                    representations: {},\n                },\n            };\n            toolGroupStateWithConfig = this.state.toolGroups[toolGroupId];\n        }\n        toolGroupStateWithConfig.config = {\n            ...toolGroupStateWithConfig.config,\n            ...config,\n        };\n    }\n    addColorLUT(colorLUT, lutIndex) {\n        if (this.state.colorLUT[lutIndex]) {\n            console.log('Color LUT table already exists, overwriting');\n        }\n        this.state.colorLUT[lutIndex] = colorLUT;\n    }\n    removeColorLUT(colorLUTIndex) {\n        delete this.state.colorLUT[colorLUTIndex];\n    }\n    _handleActiveSegmentation(toolGroupId, recentlyAddedOrRemovedSegmentationRepresentation) {\n        const segmentationRepresentations = this.getSegmentationRepresentations(toolGroupId);\n        if (segmentationRepresentations.length === 0) {\n            return;\n        }\n        if (segmentationRepresentations.length === 1) {\n            segmentationRepresentations[0].active = true;\n            return;\n        }\n        const activeSegmentationRepresentations = segmentationRepresentations.filter((representation) => representation.active);\n        if (activeSegmentationRepresentations.length === 0) {\n            segmentationRepresentations[0].active = true;\n            return;\n        }\n        if (recentlyAddedOrRemovedSegmentationRepresentation.active) {\n            segmentationRepresentations.forEach((representation) => {\n                if (representation.segmentationRepresentationUID !==\n                    recentlyAddedOrRemovedSegmentationRepresentation.segmentationRepresentationUID) {\n                    representation.active = false;\n                }\n            });\n        }\n    }\n    _initDefaultColorLUTIfNecessary() {\n        if (this.state.colorLUT.length === 0 || !this.state.colorLUT[0]) {\n            this.addColorLUT(CORNERSTONE_COLOR_LUT, 0);\n        }\n    }\n}\nconst defaultSegmentationStateManager = new SegmentationStateManager('DEFAULT');\nexport { defaultSegmentationStateManager };\n//# sourceMappingURL=SegmentationStateManager.js.map","import { triggerEvent, eventTarget } from '@cornerstonejs/core';\nimport { Events } from '../../enums';\nimport { getSegmentationRepresentations, getSegmentations, } from '../../stateManagement/segmentation/segmentationState';\nfunction triggerSegmentationRemoved(segmentationId) {\n    const eventDetail = {\n        segmentationId,\n    };\n    triggerEvent(eventTarget, Events.SEGMENTATION_REMOVED, eventDetail);\n}\nfunction triggerSegmentationRepresentationRemoved(toolGroupId, segmentationRepresentationUID) {\n    const eventDetail = {\n        toolGroupId,\n        segmentationRepresentationUID,\n    };\n    triggerEvent(eventTarget, Events.SEGMENTATION_REPRESENTATION_REMOVED, eventDetail);\n}\nfunction triggerSegmentationRepresentationModified(toolGroupId, segmentationRepresentationUID) {\n    const eventDetail = {\n        toolGroupId,\n        segmentationRepresentationUID,\n    };\n    if (segmentationRepresentationUID) {\n        triggerEvent(eventTarget, Events.SEGMENTATION_REPRESENTATION_MODIFIED, eventDetail);\n        return;\n    }\n    const segmentationRepresentations = getSegmentationRepresentations(toolGroupId) || [];\n    segmentationRepresentations.forEach((segmentationRepresentation) => {\n        const { segmentationRepresentationUID } = segmentationRepresentation;\n        const eventDetail = {\n            toolGroupId,\n            segmentationRepresentationUID,\n        };\n        triggerEvent(eventTarget, Events.SEGMENTATION_REPRESENTATION_MODIFIED, eventDetail);\n    });\n}\nfunction triggerSegmentationModified(segmentationId) {\n    let segmentationIds;\n    if (segmentationId) {\n        segmentationIds = [segmentationId];\n    }\n    else {\n        segmentationIds = getSegmentations().map(({ segmentationId }) => segmentationId);\n    }\n    segmentationIds.forEach((segmentationId) => {\n        const eventDetail = {\n            segmentationId,\n        };\n        triggerEvent(eventTarget, Events.SEGMENTATION_MODIFIED, eventDetail);\n    });\n}\nfunction triggerSegmentationDataModified(segmentationId, modifiedSlicesToUse) {\n    const eventDetail = {\n        segmentationId,\n        modifiedSlicesToUse,\n    };\n    triggerEvent(eventTarget, Events.SEGMENTATION_DATA_MODIFIED, eventDetail);\n}\nexport { triggerSegmentationRepresentationModified, triggerSegmentationRepresentationRemoved, triggerSegmentationDataModified, triggerSegmentationModified, triggerSegmentationRemoved, };\n//# sourceMappingURL=triggerSegmentationEvents.js.map","function normalizeSegmentationInput(segmentationInput) {\n    const { segmentationId, representation } = segmentationInput;\n    return {\n        segmentationId,\n        cachedStats: {},\n        segmentLabels: {},\n        label: null,\n        segmentsLocked: new Set(),\n        type: representation.type,\n        activeSegmentIndex: 1,\n        representationData: {\n            [representation.type]: {\n                ...representation.data,\n            },\n        },\n    };\n}\nexport default normalizeSegmentationInput;\n//# sourceMappingURL=normalizeSegmentationInput.js.map","import { defaultSegmentationStateManager } from './SegmentationStateManager';\nimport { triggerSegmentationModified, triggerSegmentationRemoved, triggerSegmentationRepresentationModified, triggerSegmentationRepresentationRemoved, } from './triggerSegmentationEvents';\nimport normalizeSegmentationInput from './helpers/normalizeSegmentationInput';\nfunction getDefaultSegmentationStateManager() {\n    return defaultSegmentationStateManager;\n}\nfunction getSegmentation(segmentationId) {\n    const segmentationStateManager = getDefaultSegmentationStateManager();\n    return segmentationStateManager.getSegmentation(segmentationId);\n}\nfunction getSegmentations() {\n    const segmentationStateManager = getDefaultSegmentationStateManager();\n    const state = segmentationStateManager.getState();\n    return state.segmentations;\n}\nfunction addSegmentation(segmentationInput, suppressEvents) {\n    const segmentationStateManager = getDefaultSegmentationStateManager();\n    const segmentation = normalizeSegmentationInput(segmentationInput);\n    segmentationStateManager.addSegmentation(segmentation);\n    if (!suppressEvents) {\n        triggerSegmentationModified(segmentation.segmentationId);\n    }\n}\nfunction getSegmentationRepresentations(toolGroupId) {\n    const segmentationStateManager = getDefaultSegmentationStateManager();\n    return segmentationStateManager.getSegmentationRepresentations(toolGroupId);\n}\nfunction getToolGroupIdsWithSegmentation(segmentationId) {\n    const segmentationStateManager = getDefaultSegmentationStateManager();\n    const state = segmentationStateManager.getState();\n    const toolGroupIds = Object.keys(state.toolGroups);\n    const foundToolGroupIds = [];\n    toolGroupIds.forEach((toolGroupId) => {\n        const toolGroupSegmentationRepresentations = segmentationStateManager.getSegmentationRepresentations(toolGroupId);\n        toolGroupSegmentationRepresentations.forEach((representation) => {\n            if (representation.segmentationId === segmentationId) {\n                foundToolGroupIds.push(toolGroupId);\n            }\n        });\n    });\n    return foundToolGroupIds;\n}\nfunction getToolGroupSpecificConfig(toolGroupId) {\n    const segmentationStateManager = getDefaultSegmentationStateManager();\n    return segmentationStateManager.getToolGroupSpecificConfig(toolGroupId);\n}\nfunction setToolGroupSpecificConfig(toolGroupId, config, suppressEvents) {\n    const segmentationStateManager = getDefaultSegmentationStateManager();\n    segmentationStateManager.setSegmentationRepresentationConfig(toolGroupId, config);\n    if (!suppressEvents) {\n        triggerSegmentationRepresentationModified(toolGroupId);\n    }\n}\nfunction setSegmentationRepresentationSpecificConfig(toolGroupId, segmentationRepresentationUID, config, suppressEvents = false) {\n    const segmentationStateManager = getDefaultSegmentationStateManager();\n    segmentationStateManager.setSegmentationRepresentationSpecificConfig(toolGroupId, segmentationRepresentationUID, config);\n    if (!suppressEvents) {\n        triggerSegmentationRepresentationModified(toolGroupId, segmentationRepresentationUID);\n    }\n}\nfunction getSegmentationRepresentationSpecificConfig(toolGroupId, segmentationRepresentationUID) {\n    const segmentationStateManager = getDefaultSegmentationStateManager();\n    return segmentationStateManager.getSegmentationRepresentationSpecificConfig(toolGroupId, segmentationRepresentationUID);\n}\nfunction getSegmentSpecificRepresentationConfig(toolGroupId, segmentationRepresentationUID, segmentIndex) {\n    const segmentationStateManager = getDefaultSegmentationStateManager();\n    return segmentationStateManager.getSegmentSpecificConfig(toolGroupId, segmentationRepresentationUID, segmentIndex);\n}\nfunction setSegmentSpecificRepresentationConfig(toolGroupId, segmentationRepresentationUID, config, suppressEvents = false) {\n    const segmentationStateManager = getDefaultSegmentationStateManager();\n    segmentationStateManager.setSegmentSpecificConfig(toolGroupId, segmentationRepresentationUID, config);\n    if (!suppressEvents) {\n        triggerSegmentationRepresentationModified(toolGroupId, segmentationRepresentationUID);\n    }\n}\nfunction addSegmentationRepresentation(toolGroupId, segmentationRepresentation, suppressEvents) {\n    const segmentationStateManager = getDefaultSegmentationStateManager();\n    segmentationStateManager.addSegmentationRepresentation(toolGroupId, segmentationRepresentation);\n    if (!suppressEvents) {\n        triggerSegmentationRepresentationModified(toolGroupId, segmentationRepresentation.segmentationRepresentationUID);\n    }\n}\nfunction getGlobalConfig() {\n    const segmentationStateManager = getDefaultSegmentationStateManager();\n    return segmentationStateManager.getGlobalConfig();\n}\nfunction setGlobalConfig(config, suppressEvents) {\n    const segmentationStateManager = getDefaultSegmentationStateManager();\n    segmentationStateManager.setGlobalConfig(config);\n    if (!suppressEvents) {\n        triggerSegmentationModified();\n    }\n}\nfunction getSegmentationRepresentationByUID(toolGroupId, segmentationRepresentationUID) {\n    const segmentationStateManager = getDefaultSegmentationStateManager();\n    return segmentationStateManager.getSegmentationRepresentationByUID(toolGroupId, segmentationRepresentationUID);\n}\nfunction removeSegmentation(segmentationId) {\n    const segmentationStateManager = getDefaultSegmentationStateManager();\n    segmentationStateManager.removeSegmentation(segmentationId);\n    triggerSegmentationRemoved(segmentationId);\n}\nfunction removeSegmentationRepresentation(toolGroupId, segmentationRepresentationUID) {\n    const segmentationStateManager = getDefaultSegmentationStateManager();\n    segmentationStateManager.removeSegmentationRepresentation(toolGroupId, segmentationRepresentationUID);\n    triggerSegmentationRepresentationRemoved(toolGroupId, segmentationRepresentationUID);\n}\nfunction removeColorLUT(colorLUTIndex) {\n    const segmentationStateManager = getDefaultSegmentationStateManager();\n    segmentationStateManager.removeColorLUT(colorLUTIndex);\n}\nfunction getColorLUT(index) {\n    const segmentationStateManager = getDefaultSegmentationStateManager();\n    return segmentationStateManager.getColorLUT(index);\n}\nfunction addColorLUT(colorLUT, index) {\n    const segmentationStateManager = getDefaultSegmentationStateManager();\n    segmentationStateManager.addColorLUT(colorLUT, index);\n}\nexport { getDefaultSegmentationStateManager, getSegmentation, getSegmentations, addSegmentation, removeSegmentation, getSegmentationRepresentations, addSegmentationRepresentation, removeSegmentationRepresentation, getToolGroupSpecificConfig, setToolGroupSpecificConfig, getGlobalConfig, setGlobalConfig, getSegmentationRepresentationSpecificConfig, setSegmentationRepresentationSpecificConfig, getSegmentSpecificRepresentationConfig, setSegmentSpecificRepresentationConfig, getToolGroupIdsWithSegmentation, getSegmentationRepresentationByUID, addColorLUT, getColorLUT, removeColorLUT, };\n//# sourceMappingURL=segmentationState.js.map","import * as SegmentationState from '../../../stateManagement/segmentation/segmentationState';\nfunction getGlobalConfig() {\n    return SegmentationState.getGlobalConfig();\n}\nfunction setGlobalConfig(segmentationConfig) {\n    SegmentationState.setGlobalConfig(segmentationConfig);\n}\nfunction getGlobalRepresentationConfig(representationType) {\n    const globalConfig = getGlobalConfig();\n    return globalConfig.representations[representationType];\n}\nfunction setGlobalRepresentationConfig(representationType, config) {\n    const globalConfig = getGlobalConfig();\n    setGlobalConfig({\n        ...globalConfig,\n        representations: {\n            ...globalConfig.representations,\n            [representationType]: {\n                ...globalConfig.representations[representationType],\n                ...config,\n            },\n        },\n    });\n}\nfunction getToolGroupSpecificConfig(toolGroupId) {\n    return SegmentationState.getToolGroupSpecificConfig(toolGroupId);\n}\nfunction setToolGroupSpecificConfig(toolGroupId, segmentationRepresentationConfig) {\n    SegmentationState.setToolGroupSpecificConfig(toolGroupId, segmentationRepresentationConfig);\n}\nfunction getSegmentationRepresentationSpecificConfig(toolGroupId, segmentationRepresentationUID) {\n    return SegmentationState.getSegmentationRepresentationSpecificConfig(toolGroupId, segmentationRepresentationUID);\n}\nfunction setSegmentationRepresentationSpecificConfig(toolGroupId, segmentationRepresentationUID, config) {\n    SegmentationState.setSegmentationRepresentationSpecificConfig(toolGroupId, segmentationRepresentationUID, config);\n}\nfunction getSegmentSpecificConfig(toolGroupId, segmentationRepresentationUID, segmentIndex) {\n    return SegmentationState.getSegmentSpecificRepresentationConfig(toolGroupId, segmentationRepresentationUID, segmentIndex);\n}\nfunction setSegmentSpecificConfig(toolGroupId, segmentationRepresentationUID, config) {\n    SegmentationState.setSegmentSpecificRepresentationConfig(toolGroupId, segmentationRepresentationUID, config);\n}\nexport { getGlobalConfig, setGlobalConfig, getGlobalRepresentationConfig, setGlobalRepresentationConfig, getToolGroupSpecificConfig, setToolGroupSpecificConfig, getSegmentationRepresentationSpecificConfig, setSegmentationRepresentationSpecificConfig, getSegmentSpecificConfig, setSegmentSpecificConfig, };\n//# sourceMappingURL=segmentationConfig.js.map","import { getEnabledElement, addVolumesToViewports, Enums, } from '@cornerstonejs/core';\nasync function addLabelmapToElement(element, volumeId, segmentationRepresentationUID) {\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine, viewport } = enabledElement;\n    const { id: viewportId } = viewport;\n    const visibility = true;\n    const immediateRender = false;\n    const suppressEvents = true;\n    const volumeInputs = [\n        {\n            volumeId,\n            actorUID: segmentationRepresentationUID,\n            visibility,\n            blendMode: Enums.BlendModes.MAXIMUM_INTENSITY_BLEND,\n        },\n    ];\n    await addVolumesToViewports(renderingEngine, volumeInputs, [viewportId], immediateRender, suppressEvents);\n}\nexport default addLabelmapToElement;\n//# sourceMappingURL=addLabelmapToElement.js.map","import { getEnabledElement } from '@cornerstonejs/core';\nfunction removeLabelmapFromElement(element, segmentationRepresentationUID, removeFromCache = false) {\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n    viewport.removeVolumeActors([\n        segmentationRepresentationUID,\n    ]);\n}\nexport default removeLabelmapFromElement;\n//# sourceMappingURL=removeLabelmapFromElement.js.map","import vtkPiecewiseFunction from '@kitware/vtk.js/Common/DataModel/PiecewiseFunction';\nimport vtkColorTransferFunction from '@kitware/vtk.js/Rendering/Core/ColorTransferFunction';\nimport { cache, getEnabledElementByIds, utilities, } from '@cornerstonejs/core';\nimport Representations from '../../../enums/SegmentationRepresentations';\nimport * as SegmentationConfig from '../../../stateManagement/segmentation/config/segmentationConfig';\nimport * as SegmentationState from '../../../stateManagement/segmentation/segmentationState';\nimport { getToolGroup } from '../../../store/ToolGroupManager';\nimport addLabelmapToElement from './addLabelmapToElement';\nimport removeLabelmapFromElement from './removeLabelmapFromElement';\nconst MAX_NUMBER_COLORS = 255;\nconst labelMapConfigCache = new Map();\nasync function addSegmentationRepresentation(toolGroupId, representationInput, toolGroupSpecificConfig) {\n    const { segmentationId } = representationInput;\n    const segmentationRepresentationUID = utilities.uuidv4();\n    const segmentsHidden = new Set();\n    const colorLUTIndex = 0;\n    const active = true;\n    const cfun = vtkColorTransferFunction.newInstance();\n    const ofun = vtkPiecewiseFunction.newInstance();\n    ofun.addPoint(0, 0);\n    const toolGroupSpecificRepresentation = {\n        segmentationId,\n        segmentationRepresentationUID,\n        type: Representations.Labelmap,\n        segmentsHidden,\n        colorLUTIndex,\n        active,\n        segmentationRepresentationSpecificConfig: {},\n        segmentSpecificConfig: {},\n        config: {\n            cfun,\n            ofun,\n        },\n    };\n    if (toolGroupSpecificConfig) {\n        const currentToolGroupConfig = SegmentationConfig.getToolGroupSpecificConfig(toolGroupId);\n        const mergedConfig = utilities.deepMerge(currentToolGroupConfig, toolGroupSpecificConfig);\n        SegmentationConfig.setToolGroupSpecificConfig(toolGroupId, {\n            renderInactiveSegmentations: mergedConfig.renderInactiveSegmentations || true,\n            representations: {\n                ...mergedConfig.representations,\n            },\n        });\n    }\n    SegmentationState.addSegmentationRepresentation(toolGroupId, toolGroupSpecificRepresentation);\n    return segmentationRepresentationUID;\n}\nfunction removeSegmentationRepresentation(toolGroupId, segmentationRepresentationUID, renderImmediate = false) {\n    _removeLabelmapFromToolGroupViewports(toolGroupId, segmentationRepresentationUID);\n    SegmentationState.removeSegmentationRepresentation(toolGroupId, segmentationRepresentationUID);\n    if (renderImmediate) {\n        const viewportsInfo = getToolGroup(toolGroupId).getViewportsInfo();\n        viewportsInfo.forEach(({ viewportId, renderingEngineId }) => {\n            const enabledElement = getEnabledElementByIds(viewportId, renderingEngineId);\n            enabledElement.viewport.render();\n        });\n    }\n}\nfunction isSameFrameOfReference(viewport, referencedVolumeId) {\n    if (!referencedVolumeId) {\n        return true;\n    }\n    const defaultActor = viewport.getDefaultActor();\n    if (!defaultActor) {\n        return false;\n    }\n    const { uid: defaultActorUID } = defaultActor;\n    const volume = cache.getVolume(defaultActorUID);\n    if (volume) {\n        const referencedVolume = cache.getVolume(referencedVolumeId);\n        if (referencedVolume &&\n            volume.metadata.FrameOfReferenceUID ===\n                referencedVolume.metadata.FrameOfReferenceUID) {\n            return true;\n        }\n    }\n    return false;\n}\nasync function render(viewport, representation, toolGroupConfig) {\n    const { colorLUTIndex, active, segmentationId, segmentationRepresentationUID, segmentsHidden, config: renderingConfig, } = representation;\n    const segmentation = SegmentationState.getSegmentation(segmentationId);\n    const labelmapData = segmentation.representationData[Representations.Labelmap];\n    const { volumeId: labelmapUID } = labelmapData;\n    const labelmap = cache.getVolume(labelmapUID);\n    if (!labelmap) {\n        throw new Error(`No Labelmap found for volumeId: ${labelmapUID}`);\n    }\n    if (!isSameFrameOfReference(viewport, labelmapData?.referencedVolumeId)) {\n        return;\n    }\n    let actorEntry = viewport.getActor(segmentationRepresentationUID);\n    if (!actorEntry) {\n        const segmentation = SegmentationState.getSegmentation(segmentationId);\n        const { volumeId } = segmentation.representationData[Representations.Labelmap];\n        await _addLabelmapToViewport(viewport, volumeId, segmentationRepresentationUID);\n        actorEntry = viewport.getActor(segmentationRepresentationUID);\n    }\n    if (!actorEntry) {\n        return;\n    }\n    const { cfun, ofun } = renderingConfig;\n    const renderInactiveSegmentations = toolGroupConfig.renderInactiveSegmentations;\n    _setLabelmapColorAndOpacity(viewport.id, actorEntry, cfun, ofun, colorLUTIndex, toolGroupConfig.representations[Representations.Labelmap], representation, active, renderInactiveSegmentations, segmentsHidden);\n}\nfunction _setLabelmapColorAndOpacity(viewportId, actorEntry, cfun, ofun, colorLUTIndex, toolGroupLabelmapConfig, segmentationRepresentation, isActiveLabelmap, renderInactiveSegmentations, segmentsHidden) {\n    const { segmentSpecificConfig, segmentationRepresentationSpecificConfig } = segmentationRepresentation;\n    const segmentationRepresentationLabelmapConfig = segmentationRepresentationSpecificConfig[Representations.Labelmap];\n    const colorLUT = SegmentationState.getColorLUT(colorLUTIndex);\n    const numColors = Math.min(256, colorLUT.length);\n    const volumeActor = actorEntry.actor;\n    const { uid: actorUID } = actorEntry;\n    const { outlineWidth, renderOutline, outlineOpacity } = _getLabelmapConfig(toolGroupLabelmapConfig, segmentationRepresentationLabelmapConfig, isActiveLabelmap);\n    for (let i = 0; i < numColors; i++) {\n        const segmentIndex = i;\n        const segmentColor = colorLUT[segmentIndex];\n        const segmentSpecificLabelmapConfig = segmentSpecificConfig[segmentIndex]?.[Representations.Labelmap];\n        const { fillAlpha, outlineWidth, renderFill, renderOutline } = _getLabelmapConfig(toolGroupLabelmapConfig, segmentationRepresentationLabelmapConfig, isActiveLabelmap, segmentSpecificLabelmapConfig);\n        const { forceOpacityUpdate, forceColorUpdate } = _needsTransferFunctionUpdate(viewportId, actorUID, segmentIndex, {\n            fillAlpha,\n            renderFill,\n            renderOutline,\n            segmentColor,\n            outlineWidth,\n            segmentsHidden,\n        });\n        if (forceColorUpdate) {\n            cfun.addRGBPoint(segmentIndex, segmentColor[0] / MAX_NUMBER_COLORS, segmentColor[1] / MAX_NUMBER_COLORS, segmentColor[2] / MAX_NUMBER_COLORS);\n        }\n        if (forceOpacityUpdate) {\n            if (renderFill) {\n                const segmentOpacity = segmentsHidden.has(segmentIndex)\n                    ? 0\n                    : (segmentColor[3] / 255) * fillAlpha;\n                ofun.removePoint(segmentIndex);\n                ofun.addPointLong(segmentIndex, segmentOpacity, 0.5, 1.0);\n            }\n            else {\n                ofun.addPointLong(segmentIndex, 0.01, 0.5, 1.0);\n            }\n        }\n    }\n    volumeActor.getProperty().setRGBTransferFunction(0, cfun);\n    ofun.setClamping(false);\n    volumeActor.getProperty().setScalarOpacity(0, ofun);\n    volumeActor.getProperty().setInterpolationTypeToNearest();\n    volumeActor.getProperty().setUseLabelOutline(renderOutline);\n    volumeActor.getProperty().setLabelOutlineOpacity(outlineOpacity);\n    volumeActor.getProperty().setLabelOutlineThickness(outlineWidth);\n    const visible = isActiveLabelmap || renderInactiveSegmentations;\n    volumeActor.setVisibility(visible);\n}\nfunction _getLabelmapConfig(toolGroupLabelmapConfig, segmentationRepresentationLabelmapConfig, isActiveLabelmap, segmentsLabelmapConfig) {\n    const segmentLabelmapConfig = segmentsLabelmapConfig || {};\n    const configToUse = {\n        ...toolGroupLabelmapConfig,\n        ...segmentationRepresentationLabelmapConfig,\n        ...segmentLabelmapConfig,\n    };\n    const fillAlpha = isActiveLabelmap\n        ? configToUse.fillAlpha\n        : configToUse.fillAlphaInactive;\n    const outlineWidth = isActiveLabelmap\n        ? configToUse.outlineWidthActive\n        : configToUse.outlineWidthInactive;\n    const renderFill = isActiveLabelmap\n        ? configToUse.renderFill\n        : configToUse.renderFillInactive;\n    const renderOutline = configToUse.renderOutline;\n    const outlineOpacity = isActiveLabelmap\n        ? configToUse.outlineOpacity\n        : configToUse.outlineOpacityInactive;\n    return {\n        fillAlpha,\n        outlineWidth,\n        renderFill,\n        renderOutline,\n        outlineOpacity,\n    };\n}\nfunction _needsTransferFunctionUpdate(viewportId, actorUID, segmentIndex, { fillAlpha, renderFill, renderOutline, segmentColor, outlineWidth, segmentsHidden, }) {\n    const cacheUID = `${viewportId}-${actorUID}-${segmentIndex}`;\n    const oldConfig = labelMapConfigCache.get(cacheUID);\n    if (!oldConfig) {\n        labelMapConfigCache.set(cacheUID, {\n            fillAlpha,\n            renderFill,\n            renderOutline,\n            outlineWidth,\n            segmentColor,\n            segmentsHidden: new Set(segmentsHidden),\n        });\n        return {\n            forceOpacityUpdate: true,\n            forceColorUpdate: true,\n        };\n    }\n    const { fillAlpha: oldFillAlpha, renderFill: oldRenderFill, renderOutline: oldRenderOutline, outlineWidth: oldOutlineWidth, segmentColor: oldSegmentColor, segmentsHidden: oldSegmentsHidden, } = oldConfig;\n    const forceColorUpdate = oldSegmentColor[0] !== segmentColor[0] ||\n        oldSegmentColor[1] !== segmentColor[1] ||\n        oldSegmentColor[2] !== segmentColor[2];\n    const forceOpacityUpdate = oldSegmentColor[3] !== segmentColor[3] ||\n        oldFillAlpha !== fillAlpha ||\n        oldRenderFill !== renderFill ||\n        oldRenderOutline !== renderOutline ||\n        oldOutlineWidth !== outlineWidth ||\n        oldSegmentsHidden.has(segmentIndex) !== segmentsHidden.has(segmentIndex);\n    labelMapConfigCache.set(cacheUID, {\n        fillAlpha,\n        renderFill,\n        renderOutline,\n        outlineWidth,\n        segmentColor: segmentColor.slice(),\n        segmentsHidden: new Set(segmentsHidden),\n    });\n    return {\n        forceOpacityUpdate,\n        forceColorUpdate,\n    };\n}\nfunction _removeLabelmapFromToolGroupViewports(toolGroupId, segmentationRepresentationUID) {\n    const toolGroup = getToolGroup(toolGroupId);\n    if (toolGroup === undefined) {\n        throw new Error(`ToolGroup with ToolGroupId ${toolGroupId} does not exist`);\n    }\n    const { viewportsInfo } = toolGroup;\n    for (const viewportInfo of viewportsInfo) {\n        const { viewportId, renderingEngineId } = viewportInfo;\n        const enabledElement = getEnabledElementByIds(viewportId, renderingEngineId);\n        removeLabelmapFromElement(enabledElement.viewport.element, segmentationRepresentationUID);\n    }\n}\nasync function _addLabelmapToViewport(viewport, volumeId, segmentationRepresentationUID) {\n    await addLabelmapToElement(viewport.element, volumeId, segmentationRepresentationUID);\n}\nexport default {\n    render,\n    addSegmentationRepresentation,\n    removeSegmentationRepresentation,\n};\n//# sourceMappingURL=labelmapDisplay.js.map","import macro from '../../macros.js';\nimport vtkDataArray from '../../Common/Core/DataArray.js';\nimport vtkPoints from '../../Common/Core/Points.js';\nimport vtkPolyData from '../../Common/DataModel/PolyData.js';\nimport { DesiredOutputPrecision } from '../../Common/DataModel/DataSetAttributes/Constants.js';\nimport { VtkDataTypes } from '../../Common/Core/DataArray/Constants.js';\n\nvar vtkErrorMacro = macro.vtkErrorMacro;\n\nfunction offsetCellArray(typedArray, offset) {\n  var currentIdx = 0;\n  return typedArray.map(function (value, index) {\n    if (index === currentIdx) {\n      currentIdx += value + 1;\n      return value;\n    }\n\n    return value + offset;\n  });\n}\n\nfunction appendCellData(dest, src, ptOffset, cellOffset) {\n  dest.set(offsetCellArray(src, ptOffset), cellOffset);\n} // ----------------------------------------------------------------------------\n// vtkAppendPolyData methods\n// ----------------------------------------------------------------------------\n\n\nfunction vtkAppendPolyData(publicAPI, model) {\n  // Set our classname\n  model.classHierarchy.push('vtkAppendPolyData');\n\n  publicAPI.requestData = function (inData, outData) {\n    // implement requestData\n    var numberOfInputs = publicAPI.getNumberOfInputPorts();\n\n    if (!numberOfInputs) {\n      vtkErrorMacro('No input specified.');\n      return;\n    }\n\n    if (numberOfInputs === 1) {\n      // pass through filter\n      outData[0] = inData[0];\n      return;\n    } // Allocate output\n\n\n    var output = vtkPolyData.newInstance();\n    var numPts = 0;\n    var pointType = 0;\n    var ttype = 1;\n    var firstType = 1;\n    var numVerts = 0;\n    var numLines = 0;\n    var numStrips = 0;\n    var numPolys = 0; // Field data is propagated to output only if present in all inputs\n\n    var hasPtNormals = true; // assume present by default\n\n    var hasPtTCoords = true;\n    var hasPtScalars = true;\n\n    for (var i = 0; i < numberOfInputs; i++) {\n      var ds = inData[i];\n\n      if (!ds) {\n        // eslint-disable-next-line\n        continue;\n      }\n\n      var dsNumPts = ds.getPoints().getNumberOfPoints();\n      numPts += dsNumPts;\n      numVerts += ds.getVerts().getNumberOfValues();\n      numLines += ds.getLines().getNumberOfValues();\n      numStrips += ds.getStrips().getNumberOfValues();\n      numPolys += ds.getPolys().getNumberOfValues();\n\n      if (dsNumPts) {\n        if (firstType) {\n          firstType = 0;\n          pointType = ds.getPoints().getDataType();\n        }\n\n        ttype = ds.getPoints().getDataType();\n        pointType = pointType > ttype ? pointType : ttype;\n      }\n\n      var ptD = ds.getPointData();\n\n      if (ptD) {\n        hasPtNormals = hasPtNormals && ptD.getNormals() !== null;\n        hasPtTCoords = hasPtTCoords && ptD.getTCoords() !== null;\n        hasPtScalars = hasPtScalars && ptD.getScalars() !== null;\n      } else {\n        hasPtNormals = false;\n        hasPtTCoords = false;\n        hasPtScalars = false;\n      }\n    }\n\n    if (model.outputPointsPrecision === DesiredOutputPrecision.SINGLE) {\n      pointType = VtkDataTypes.FLOAT;\n    } else if (model.outputPointsPrecision === DesiredOutputPrecision.DOUBLE) {\n      pointType = VtkDataTypes.DOUBLE;\n    }\n\n    var points = vtkPoints.newInstance({\n      dataType: pointType\n    });\n    points.setNumberOfPoints(numPts);\n    var pointData = points.getData();\n    var vertData = new Uint32Array(numVerts);\n    var lineData = new Uint32Array(numLines);\n    var stripData = new Uint32Array(numStrips);\n    var polyData = new Uint32Array(numPolys);\n    var newPtNormals = null;\n    var newPtTCoords = null;\n    var newPtScalars = null;\n    var lds = inData[numberOfInputs - 1];\n\n    if (hasPtNormals) {\n      var dsNormals = lds.getPointData().getNormals();\n      newPtNormals = vtkDataArray.newInstance({\n        numberOfComponents: 3,\n        numberOfTuples: numPts,\n        size: 3 * numPts,\n        dataType: dsNormals.getDataType(),\n        name: dsNormals.getName()\n      });\n    }\n\n    if (hasPtTCoords) {\n      var dsTCoords = lds.getPointData().getTCoords();\n      newPtTCoords = vtkDataArray.newInstance({\n        numberOfComponents: 2,\n        numberOfTuples: numPts,\n        size: 2 * numPts,\n        dataType: dsTCoords.getDataType(),\n        name: dsTCoords.getName()\n      });\n    }\n\n    if (hasPtScalars) {\n      var dsScalars = lds.getPointData().getScalars();\n      newPtScalars = vtkDataArray.newInstance({\n        numberOfComponents: dsScalars.getNumberOfComponents(),\n        numberOfTuples: numPts,\n        size: numPts * dsScalars.getNumberOfComponents(),\n        dataType: dsScalars.getDataType(),\n        name: dsScalars.getName()\n      });\n    }\n\n    numPts = 0;\n    numVerts = 0;\n    numLines = 0;\n    numStrips = 0;\n    numPolys = 0;\n\n    for (var _i = 0; _i < numberOfInputs; _i++) {\n      var _ds = inData[_i];\n      pointData.set(_ds.getPoints().getData(), numPts * 3);\n      appendCellData(vertData, _ds.getVerts().getData(), numPts, numVerts);\n      numVerts += _ds.getVerts().getNumberOfValues();\n      appendCellData(lineData, _ds.getLines().getData(), numPts, numLines);\n      numLines += _ds.getLines().getNumberOfValues();\n      appendCellData(stripData, _ds.getStrips().getData(), numPts, numStrips);\n      numStrips += _ds.getStrips().getNumberOfValues();\n      appendCellData(polyData, _ds.getPolys().getData(), numPts, numPolys);\n      numPolys += _ds.getPolys().getNumberOfValues();\n\n      var dsPD = _ds.getPointData();\n\n      if (hasPtNormals) {\n        var ptNorms = dsPD.getNormals();\n        newPtNormals.getData().set(ptNorms.getData(), numPts * 3);\n      }\n\n      if (hasPtTCoords) {\n        var ptTCoords = dsPD.getTCoords();\n        newPtTCoords.getData().set(ptTCoords.getData(), numPts * 2);\n      }\n\n      if (hasPtScalars) {\n        var ptScalars = dsPD.getScalars();\n        newPtScalars.getData().set(ptScalars.getData(), numPts * newPtScalars.getNumberOfComponents());\n      }\n\n      numPts += _ds.getPoints().getNumberOfPoints();\n    }\n\n    output.setPoints(points);\n    output.getVerts().setData(vertData);\n    output.getLines().setData(lineData);\n    output.getStrips().setData(stripData);\n    output.getPolys().setData(polyData);\n\n    if (newPtNormals) {\n      output.getPointData().setNormals(newPtNormals);\n    }\n\n    if (newPtTCoords) {\n      output.getPointData().setTCoords(newPtTCoords);\n    }\n\n    if (newPtScalars) {\n      output.getPointData().setScalars(newPtScalars);\n    }\n\n    outData[0] = output;\n  };\n} // ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n\nvar DEFAULT_VALUES = {\n  outputPointsPrecision: DesiredOutputPrecision.DEFAULT\n}; // ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues); // Build VTK API\n\n  macro.setGet(publicAPI, model, ['outputPointsPrecision']); // Make this a VTK object\n\n  macro.obj(publicAPI, model); // Also make it an algorithm with one input and one output\n\n  macro.algo(publicAPI, model, 1, 1); // Object specific methods\n\n  vtkAppendPolyData(publicAPI, model);\n} // ----------------------------------------------------------------------------\n\nvar newInstance = macro.newInstance(extend, 'vtkAppendPolyData'); // ----------------------------------------------------------------------------\n\nvar vtkAppendPolyData$1 = {\n  newInstance: newInstance,\n  extend: extend\n};\n\nexport { vtkAppendPolyData$1 as default, extend, newInstance };\n","import { Enums } from '@cornerstonejs/core';\nimport vtkCellArray from '@kitware/vtk.js/Common/Core/CellArray';\nimport vtkPoints from '@kitware/vtk.js/Common/Core/Points';\nimport vtkPolyData from '@kitware/vtk.js/Common/DataModel/PolyData';\nexport function getSegmentSpecificConfig(contourRepresentation, segmentId, index) {\n    let segmentSpecificConfig = contourRepresentation.segmentSpecificConfig?.[segmentId];\n    if (!segmentSpecificConfig) {\n        segmentSpecificConfig =\n            contourRepresentation.segmentSpecificConfig?.[index];\n    }\n    if (!segmentSpecificConfig) {\n        return null;\n    }\n    return segmentSpecificConfig.CONTOUR;\n}\nexport function validateGeometry(geometry) {\n    if (!geometry) {\n        throw new Error(`No contours found for geometryId ${geometry.id}`);\n    }\n    const geometryId = geometry.id;\n    if (geometry.type !== Enums.GeometryType.CONTOUR) {\n        throw new Error(`Geometry type ${geometry.type} not supported for rendering.`);\n    }\n    if (!geometry.data) {\n        console.warn(`No contours found for geometryId ${geometryId}. Skipping render.`);\n        return;\n    }\n}\nexport function getPolyData(contourSet) {\n    const pointArray = [];\n    const points = vtkPoints.newInstance();\n    const lines = vtkCellArray.newInstance();\n    let pointIndex = 0;\n    contourSet.getContours().forEach((contour) => {\n        const pointList = contour.getPoints();\n        const flatPoints = contour.getFlatPointsArray();\n        const type = contour.getType();\n        const pointIndexes = pointList.map((_, pointListIndex) => pointListIndex + pointIndex);\n        if (type === Enums.ContourType.CLOSED_PLANAR) {\n            pointIndexes.push(pointIndexes[0]);\n        }\n        const linePoints = Float32Array.from(flatPoints);\n        pointArray.push(...linePoints);\n        lines.insertNextCell([...pointIndexes]);\n        pointIndex = pointIndex + pointList.length;\n    });\n    points.setData(pointArray, 3);\n    const polygon = vtkPolyData.newInstance();\n    polygon.setPoints(points);\n    polygon.setLines(lines);\n    return polygon;\n}\n//# sourceMappingURL=utils.js.map","const configCachePerSegmentationRepresentationUID = new Map();\nexport function getConfigCache(segmentationRepresentationUID) {\n    return configCachePerSegmentationRepresentationUID.get(segmentationRepresentationUID);\n}\nexport function setConfigCache(segmentationRepresentationUID, config) {\n    configCachePerSegmentationRepresentationUID.set(segmentationRepresentationUID, config);\n}\nexport function deleteConfigCache(segmentationRepresentationUID) {\n    configCachePerSegmentationRepresentationUID.delete(segmentationRepresentationUID);\n}\n//# sourceMappingURL=contourConfigCache.js.map","import { cache } from '@cornerstonejs/core';\nimport vtkDataArray from '@kitware/vtk.js/Common/Core/DataArray';\nimport vtkAppendPolyData from '@kitware/vtk.js/Filters/General/AppendPolyData';\nimport vtkActor from '@kitware/vtk.js/Rendering/Core/Actor';\nimport vtkMapper from '@kitware/vtk.js/Rendering/Core/Mapper';\nimport { getPolyData, getSegmentSpecificConfig, validateGeometry, } from './utils';\nimport { getConfigCache, setConfigCache } from './contourConfigCache';\nexport function addContourSetsToElement(viewport, geometryIds, contourRepresentation, contourRepresentationConfig, contourActorUID) {\n    const { segmentationRepresentationUID, segmentsHidden } = contourRepresentation;\n    const appendPolyData = vtkAppendPolyData.newInstance();\n    const scalarToColorMap = new Map();\n    const segmentSpecificMap = new Map();\n    geometryIds.forEach((geometryId) => {\n        const geometry = cache.getGeometry(geometryId);\n        if (!geometry) {\n            console.warn(`No geometry found for geometryId ${geometryId}. Skipping render.`);\n            return;\n        }\n        const segmentIndex = geometry.data.getSegmentIndex();\n        validateGeometry(geometry);\n        const segmentSpecificConfig = getSegmentSpecificConfig(contourRepresentation, geometryId, segmentIndex);\n        const contourSet = geometry.data;\n        const polyData = getPolyData(contourSet);\n        const color = contourSet.getColor();\n        const size = polyData.getPoints().getNumberOfPoints();\n        const scalars = vtkDataArray.newInstance({\n            size: size * 4,\n            numberOfComponents: 4,\n            dataType: 'Uint8Array',\n        });\n        for (let i = 0; i < size; ++i) {\n            scalars.setTuple(i, [...color, 255]);\n        }\n        polyData.getPointData().setScalars(scalars);\n        if (segmentSpecificConfig) {\n            segmentSpecificMap.set(segmentIndex, segmentSpecificConfig);\n        }\n        scalarToColorMap.set(segmentIndex, [\n            ...color,\n            segmentsHidden.has(segmentIndex) ? 0 : 255,\n        ]);\n        segmentIndex === 0\n            ? appendPolyData.setInputData(polyData)\n            : appendPolyData.addInputData(polyData);\n    });\n    const polyDataOutput = appendPolyData.getOutputData();\n    const outlineWidthActive = contourRepresentationConfig.representations.CONTOUR.outlineWidthActive;\n    const mapper = vtkMapper.newInstance();\n    mapper.setInputData(polyDataOutput);\n    const actor = vtkActor.newInstance();\n    actor.setMapper(mapper);\n    actor.getProperty().setLineWidth(outlineWidthActive);\n    setConfigCache(segmentationRepresentationUID, Object.assign({}, getConfigCache(segmentationRepresentationUID), {\n        segmentsHidden: new Set(segmentsHidden),\n        segmentSpecificMap,\n        outlineWidthActive,\n    }));\n    actor.setForceOpaque(true);\n    viewport.addActor({\n        uid: contourActorUID,\n        actor: actor,\n    });\n    viewport.resetCamera();\n    viewport.render();\n}\n//# sourceMappingURL=addContourSetsToElement.js.map","import { cache } from '@cornerstonejs/core';\nimport { getConfigCache, setConfigCache } from './contourConfigCache';\nimport { getSegmentSpecificConfig } from './utils';\nexport function updateContourSets(viewport, geometryIds, contourRepresentation, contourRepresentationConfig, contourActorUID) {\n    const { segmentationRepresentationUID, segmentsHidden } = contourRepresentation;\n    const newContourConfig = contourRepresentationConfig.representations.CONTOUR;\n    const cachedConfig = getConfigCache(segmentationRepresentationUID);\n    const contourSetsActor = viewport.getActor(contourActorUID);\n    if (!contourSetsActor) {\n        console.warn(`No contour actor found for actorUID ${contourActorUID}. Skipping render.`);\n        return;\n    }\n    const { actor } = contourSetsActor;\n    const newOutlineWithActive = newContourConfig.outlineWidthActive;\n    if (cachedConfig?.outlineWidthActive !== newOutlineWithActive) {\n        actor\n            .getProperty()\n            .setLineWidth(newOutlineWithActive);\n        setConfigCache(segmentationRepresentationUID, Object.assign({}, cachedConfig, {\n            outlineWidthActive: newOutlineWithActive,\n        }));\n    }\n    const mapper = actor.getMapper();\n    const lut = mapper.getLookupTable();\n    const segmentsToSetToInvisible = [];\n    const segmentsToSetToVisible = [];\n    for (const segmentIndex of segmentsHidden) {\n        if (!cachedConfig.segmentsHidden.has(segmentIndex)) {\n            segmentsToSetToInvisible.push(segmentIndex);\n        }\n    }\n    for (const segmentIndex of cachedConfig.segmentsHidden) {\n        if (!segmentsHidden.has(segmentIndex)) {\n            segmentsToSetToVisible.push(segmentIndex);\n        }\n    }\n    const mergedInvisibleSegments = Array.from(cachedConfig.segmentsHidden)\n        .filter((segmentIndex) => !segmentsToSetToVisible.includes(segmentIndex))\n        .concat(segmentsToSetToInvisible);\n    const { contourSets, segmentSpecificConfigs } = geometryIds.reduce((acc, geometryId) => {\n        const geometry = cache.getGeometry(geometryId);\n        const { data: contourSet } = geometry;\n        const segmentIndex = contourSet.getSegmentIndex();\n        const segmentSpecificConfig = getSegmentSpecificConfig(contourRepresentation, geometryId, segmentIndex);\n        acc.contourSets.push(contourSet);\n        acc.segmentSpecificConfigs[segmentIndex] = segmentSpecificConfig ?? {};\n        return acc;\n    }, { contourSets: [], segmentSpecificConfigs: {} });\n    const affectedSegments = [\n        ...mergedInvisibleSegments,\n        ...segmentsToSetToVisible,\n    ];\n    const hasCustomSegmentSpecificConfig = Object.values(segmentSpecificConfigs).some((config) => Object.keys(config).length > 0);\n    let polyDataModified = false;\n    if (affectedSegments.length || hasCustomSegmentSpecificConfig) {\n        const appendPolyData = mapper.getInputData();\n        const appendScalars = appendPolyData.getPointData().getScalars();\n        const appendScalarsData = appendScalars.getData();\n        let offset = 0;\n        contourSets.forEach((contourSet) => {\n            const segmentIndex = contourSet.getSegmentIndex();\n            const size = contourSet.getTotalNumberOfPoints();\n            if (affectedSegments.includes(segmentIndex) ||\n                segmentSpecificConfigs[segmentIndex]?.fillAlpha) {\n                const color = contourSet.getColor();\n                let visibility = mergedInvisibleSegments.includes(segmentIndex)\n                    ? 0\n                    : 255;\n                const segmentConfig = segmentSpecificConfigs[segmentIndex];\n                if (segmentConfig.fillAlpha !== undefined) {\n                    visibility = segmentConfig.fillAlpha * 255;\n                }\n                for (let i = 0; i < size; ++i) {\n                    appendScalarsData[offset + i * 4] = color[0];\n                    appendScalarsData[offset + i * 4 + 1] = color[1];\n                    appendScalarsData[offset + i * 4 + 2] = color[2];\n                    appendScalarsData[offset + i * 4 + 3] = visibility;\n                }\n                polyDataModified = true;\n            }\n            offset = offset + size * 4;\n        });\n        if (polyDataModified) {\n            appendPolyData.modified();\n        }\n        setConfigCache(segmentationRepresentationUID, Object.assign({}, cachedConfig, {\n            segmentsHidden: new Set(segmentsHidden),\n        }));\n        mapper.setLookupTable(lut);\n    }\n    viewport.render();\n}\n//# sourceMappingURL=updateContourSets.js.map","import { getEnabledElement } from '@cornerstonejs/core';\nfunction removeContourFromElement(element, segmentationRepresentationUID, removeFromCache = false) {\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n    const actorEntries = viewport.getActors();\n    const actorUIDsToRemove = actorEntries\n        .map(({ uid }) => uid.includes(segmentationRepresentationUID) ? uid : undefined)\n        .filter(Boolean);\n    viewport.removeActors(actorUIDsToRemove);\n}\nexport default removeContourFromElement;\n//# sourceMappingURL=removeContourFromElement.js.map","import { getEnabledElementByIds, utilities as csUtils, } from '@cornerstonejs/core';\nimport Representations from '../../../enums/SegmentationRepresentations';\nimport * as SegmentationConfig from '../../../stateManagement/segmentation/config/segmentationConfig';\nimport * as SegmentationState from '../../../stateManagement/segmentation/segmentationState';\nimport { getToolGroup } from '../../../store/ToolGroupManager';\nimport { addOrUpdateContourSets } from './addOrUpdateContourSets';\nimport removeContourFromElement from './removeContourFromElement';\nimport { deleteConfigCache } from './contourConfigCache';\nasync function addSegmentationRepresentation(toolGroupId, representationInput, toolGroupSpecificConfig) {\n    const { segmentationId } = representationInput;\n    const segmentationRepresentationUID = csUtils.uuidv4();\n    const segmentsHidden = new Set();\n    const visibility = true;\n    const colorLUTIndex = 0;\n    const active = true;\n    const toolGroupSpecificRepresentation = {\n        segmentationId,\n        segmentationRepresentationUID,\n        type: Representations.Contour,\n        segmentsHidden,\n        colorLUTIndex,\n        active,\n        segmentationRepresentationSpecificConfig: {},\n        segmentSpecificConfig: {},\n        config: {},\n    };\n    if (toolGroupSpecificConfig) {\n        const currentToolGroupConfig = SegmentationConfig.getToolGroupSpecificConfig(toolGroupId);\n        const mergedConfig = csUtils.deepMerge(currentToolGroupConfig, toolGroupSpecificConfig);\n        SegmentationConfig.setToolGroupSpecificConfig(toolGroupId, {\n            renderInactiveSegmentations: mergedConfig.renderInactiveSegmentations || true,\n            representations: {\n                ...mergedConfig.representations,\n            },\n        });\n    }\n    SegmentationState.addSegmentationRepresentation(toolGroupId, toolGroupSpecificRepresentation);\n    return segmentationRepresentationUID;\n}\nfunction removeSegmentationRepresentation(toolGroupId, segmentationRepresentationUID, renderImmediate = false) {\n    _removeContourFromToolGroupViewports(toolGroupId, segmentationRepresentationUID);\n    SegmentationState.removeSegmentationRepresentation(toolGroupId, segmentationRepresentationUID);\n    deleteConfigCache(segmentationRepresentationUID);\n    if (renderImmediate) {\n        const viewportsInfo = getToolGroup(toolGroupId).getViewportsInfo();\n        viewportsInfo.forEach(({ viewportId, renderingEngineId }) => {\n            const enabledElement = getEnabledElementByIds(viewportId, renderingEngineId);\n            enabledElement.viewport.render();\n        });\n    }\n}\nasync function render(viewport, representationConfig, toolGroupConfig) {\n    const { segmentationId } = representationConfig;\n    const segmentation = SegmentationState.getSegmentation(segmentationId);\n    const contourData = segmentation.representationData[Representations.Contour];\n    const { geometryIds } = contourData;\n    if (!geometryIds?.length) {\n        console.warn(`No contours found for segmentationId ${segmentationId}. Skipping render.`);\n    }\n    addOrUpdateContourSets(viewport, geometryIds, representationConfig, toolGroupConfig);\n}\nfunction _removeContourFromToolGroupViewports(toolGroupId, segmentationRepresentationUID) {\n    const toolGroup = getToolGroup(toolGroupId);\n    if (toolGroup === undefined) {\n        throw new Error(`ToolGroup with ToolGroupId ${toolGroupId} does not exist`);\n    }\n    const { viewportsInfo } = toolGroup;\n    for (const viewportInfo of viewportsInfo) {\n        const { viewportId, renderingEngineId } = viewportInfo;\n        const enabledElement = getEnabledElementByIds(viewportId, renderingEngineId);\n        removeContourFromElement(enabledElement.viewport.element, segmentationRepresentationUID);\n    }\n}\nexport default {\n    render,\n    addSegmentationRepresentation,\n    removeSegmentationRepresentation,\n};\n//# sourceMappingURL=contourDisplay.js.map","import { addContourSetsToElement } from './addContourSetsToElement';\nimport { updateContourSets } from './updateContourSets';\nexport function addOrUpdateContourSets(viewport, geometryIds, contourRepresentation, contourRepresentationConfig) {\n    const { segmentationRepresentationUID } = contourRepresentation;\n    const actorUID = `CONTOUR_${segmentationRepresentationUID}`;\n    const actor = viewport.getActor(actorUID);\n    const addOrUpdateFn = actor ? updateContourSets : addContourSetsToElement;\n    addOrUpdateFn(viewport, geometryIds, contourRepresentation, contourRepresentationConfig, actorUID);\n}\n//# sourceMappingURL=addOrUpdateContourSets.js.map","import SegmentationRepresentations from '../../enums/SegmentationRepresentations';\nimport { labelmapDisplay } from '../../tools/displayTools/Labelmap';\nimport { contourDisplay } from '../../tools/displayTools/Contour';\nimport { getSegmentationRepresentations, getSegmentationRepresentationByUID, } from './segmentationState';\nfunction removeSegmentationsFromToolGroup(toolGroupId, segmentationRepresentationUIDs, immediate) {\n    const toolGroupSegRepresentations = getSegmentationRepresentations(toolGroupId);\n    if (!toolGroupSegRepresentations ||\n        toolGroupSegRepresentations.length === 0) {\n        return;\n    }\n    const toolGroupSegRepresentationUIDs = toolGroupSegRepresentations.map((representation) => representation.segmentationRepresentationUID);\n    let segRepresentationUIDsToRemove = segmentationRepresentationUIDs;\n    if (segRepresentationUIDsToRemove) {\n        const invalidSegRepresentationUIDs = segmentationRepresentationUIDs.filter((segRepresentationUID) => !toolGroupSegRepresentationUIDs.includes(segRepresentationUID));\n        if (invalidSegRepresentationUIDs.length > 0) {\n            throw new Error(`The following segmentationRepresentationUIDs are not part of the toolGroup: ${JSON.stringify(invalidSegRepresentationUIDs)}`);\n        }\n    }\n    else {\n        segRepresentationUIDsToRemove = toolGroupSegRepresentationUIDs;\n    }\n    segRepresentationUIDsToRemove.forEach((segmentationDataUID) => {\n        _removeSegmentation(toolGroupId, segmentationDataUID, immediate);\n    });\n}\nfunction _removeSegmentation(toolGroupId, segmentationRepresentationUID, immediate) {\n    const segmentationRepresentation = getSegmentationRepresentationByUID(toolGroupId, segmentationRepresentationUID);\n    const { type } = segmentationRepresentation;\n    if (type === SegmentationRepresentations.Labelmap) {\n        labelmapDisplay.removeSegmentationRepresentation(toolGroupId, segmentationRepresentationUID, immediate);\n    }\n    else if (type === SegmentationRepresentations.Contour) {\n        contourDisplay.removeSegmentationRepresentation(toolGroupId, segmentationRepresentationUID, immediate);\n    }\n    else {\n        throw new Error(`The representation ${type} is not supported yet`);\n    }\n}\nexport default removeSegmentationsFromToolGroup;\n//# sourceMappingURL=removeSegmentationsFromToolGroup.js.map","import { cache } from '@cornerstonejs/core';\nfunction validate(segmentationInput) {\n    if (!segmentationInput.representation.data) {\n        throw new Error('The segmentationInput.representationData.data is undefined, please provide a valid representationData.data');\n    }\n    const representationData = segmentationInput.representation\n        .data;\n    if (!representationData.volumeId) {\n        throw new Error('The segmentationInput.representationData.volumeId is undefined, please provide a valid representationData.volumeId');\n    }\n    const cachedVolume = cache.getVolume(representationData.volumeId);\n    if (!cachedVolume) {\n        throw new Error(`volumeId of ${representationData.volumeId} not found in cache, you should load and cache volume before adding segmentation`);\n    }\n}\nexport default validate;\n//# sourceMappingURL=validateRepresentationData.js.map","import * as Enums from '../../../enums';\nimport validateLabelmap from '../../../tools/displayTools/Labelmap/validateRepresentationData';\nfunction validateSegmentationInput(segmentationInputArray) {\n    if (!segmentationInputArray || !segmentationInputArray.length) {\n        throw new Error('The segmentationInputArray is undefined or empty array');\n    }\n    segmentationInputArray.forEach((segmentationInput) => {\n        if (segmentationInput.segmentationId === undefined) {\n            throw new Error('The segmentationInput.segmentationId is undefined, please provide a valid segmentationId');\n        }\n        if (segmentationInput.representation === undefined) {\n            throw new Error('The segmentationInput.representation is undefined, please provide a valid representation');\n        }\n        if (segmentationInput.representation.type ===\n            Enums.SegmentationRepresentations.Labelmap) {\n            validateLabelmap(segmentationInput);\n        }\n    });\n}\nexport default validateSegmentationInput;\n//# sourceMappingURL=validateSegmentationInput.js.map","import _cloneDeep from 'lodash.clonedeep';\nimport { validateSegmentationInput } from './helpers';\nimport { addSegmentation as addSegmentationToState } from './segmentationState';\nfunction addSegmentations(segmentationInputArray) {\n    validateSegmentationInput(segmentationInputArray);\n    segmentationInputArray.map((segInput) => {\n        const segmentationInput = _cloneDeep(segInput);\n        addSegmentationToState(segmentationInput);\n    });\n}\nexport default addSegmentations;\n//# sourceMappingURL=addSegmentations.js.map","import Representations from '../../enums/SegmentationRepresentations';\nimport { getToolGroup } from '../../store/ToolGroupManager';\nimport { labelmapDisplay } from '../../tools/displayTools/Labelmap';\nimport { contourDisplay } from '../../tools/displayTools/Contour';\nasync function addSegmentationRepresentations(toolGroupId, representationInputArray, toolGroupSpecificRepresentationConfig) {\n    const toolGroup = getToolGroup(toolGroupId);\n    if (!toolGroup) {\n        throw new Error(`No tool group found for toolGroupId: ${toolGroupId}`);\n    }\n    const promises = representationInputArray.map((representationInput) => {\n        return _addSegmentationRepresentation(toolGroupId, representationInput, toolGroupSpecificRepresentationConfig);\n    });\n    const segmentationRepresentationUIDs = await Promise.all(promises);\n    return segmentationRepresentationUIDs;\n}\nasync function _addSegmentationRepresentation(toolGroupId, representationInput, toolGroupSpecificRepresentationConfig) {\n    let segmentationRepresentationUID;\n    if (representationInput.type === Representations.Labelmap) {\n        segmentationRepresentationUID =\n            await labelmapDisplay.addSegmentationRepresentation(toolGroupId, representationInput, toolGroupSpecificRepresentationConfig);\n    }\n    else if (representationInput.type === Representations.Contour) {\n        segmentationRepresentationUID =\n            await contourDisplay.addSegmentationRepresentation(toolGroupId, representationInput, toolGroupSpecificRepresentationConfig);\n    }\n    else {\n        throw new Error(`The representation type ${representationInput.type} is not supported`);\n    }\n    return segmentationRepresentationUID;\n}\nexport default addSegmentationRepresentations;\n//# sourceMappingURL=addSegmentationRepresentations.js.map","import { getDefaultSegmentationStateManager } from './segmentationState';\nimport { triggerSegmentationRepresentationModified } from './triggerSegmentationEvents';\nfunction getActiveSegmentationRepresentation(toolGroupId) {\n    const segmentationStateManager = getDefaultSegmentationStateManager();\n    const toolGroupSegmentationRepresentations = segmentationStateManager.getSegmentationRepresentations(toolGroupId);\n    if (!toolGroupSegmentationRepresentations) {\n        return;\n    }\n    const activeRepresentation = toolGroupSegmentationRepresentations.find((representation) => representation.active);\n    return activeRepresentation;\n}\nfunction setActiveSegmentationRepresentation(toolGroupId, segmentationRepresentationUID) {\n    const segmentationStateManager = getDefaultSegmentationStateManager();\n    segmentationStateManager.setActiveSegmentationRepresentation(toolGroupId, segmentationRepresentationUID);\n    triggerSegmentationRepresentationModified(toolGroupId, segmentationRepresentationUID);\n}\nexport { getActiveSegmentationRepresentation, setActiveSegmentationRepresentation, };\n//# sourceMappingURL=activeSegmentation.js.map","import { getSegmentation } from '../../stateManagement/segmentation/segmentationState';\nimport { triggerSegmentationModified } from './triggerSegmentationEvents';\nfunction isSegmentIndexLocked(segmentationId, segmentIndex) {\n    const segmentation = getSegmentation(segmentationId);\n    if (!segmentation) {\n        throw new Error(`No segmentation state found for ${segmentationId}`);\n    }\n    const { segmentsLocked } = segmentation;\n    return segmentsLocked.has(segmentIndex);\n}\nfunction setSegmentIndexLocked(segmentationId, segmentIndex, locked = true) {\n    const segmentation = getSegmentation(segmentationId);\n    if (!segmentation) {\n        throw new Error(`No segmentation state found for ${segmentationId}`);\n    }\n    const { segmentsLocked } = segmentation;\n    if (locked) {\n        segmentsLocked.add(segmentIndex);\n    }\n    else {\n        segmentsLocked.delete(segmentIndex);\n    }\n    triggerSegmentationModified(segmentationId);\n}\nfunction getLockedSegments(segmentationId) {\n    const segmentation = getSegmentation(segmentationId);\n    if (!segmentation) {\n        throw new Error(`No segmentation state found for ${segmentationId}`);\n    }\n    const { segmentsLocked } = segmentation;\n    return Array.from(segmentsLocked);\n}\nexport { isSegmentIndexLocked, setSegmentIndexLocked, getLockedSegments };\n//# sourceMappingURL=segmentLocking.js.map","import { utilities } from '@cornerstonejs/core';\nimport * as SegmentationState from '../../../stateManagement/segmentation/segmentationState';\nimport { triggerSegmentationRepresentationModified } from '../triggerSegmentationEvents';\nfunction addColorLUT(colorLUT, colorLUTIndex) {\n    if (!colorLUT) {\n        throw new Error('addColorLUT: colorLUT is required');\n    }\n    if (!utilities.isEqual(colorLUT[0], [0, 0, 0, 0])) {\n        console.warn('addColorLUT: [0, 0, 0, 0] color is not provided for the background color (segmentIndex =0), automatically adding it');\n        colorLUT.unshift([0, 0, 0, 0]);\n    }\n    SegmentationState.addColorLUT(colorLUT, colorLUTIndex);\n}\nfunction setColorLUT(toolGroupId, segmentationRepresentationUID, colorLUTIndex) {\n    const segRepresentation = SegmentationState.getSegmentationRepresentationByUID(toolGroupId, segmentationRepresentationUID);\n    if (!segRepresentation) {\n        throw new Error(`setColorLUT: could not find segmentation representation with UID ${segmentationRepresentationUID}`);\n    }\n    if (!SegmentationState.getColorLUT(colorLUTIndex)) {\n        throw new Error(`setColorLUT: could not find colorLUT with index ${colorLUTIndex}`);\n    }\n    segRepresentation.colorLUTIndex = colorLUTIndex;\n    triggerSegmentationRepresentationModified(toolGroupId, segmentationRepresentationUID);\n}\nfunction getColorForSegmentIndex(toolGroupId, segmentationRepresentationUID, segmentIndex) {\n    const segmentationRepresentation = SegmentationState.getSegmentationRepresentationByUID(toolGroupId, segmentationRepresentationUID);\n    if (!segmentationRepresentation) {\n        throw new Error(`segmentation representation with UID ${segmentationRepresentationUID} does not exist for tool group ${toolGroupId}`);\n    }\n    const { colorLUTIndex } = segmentationRepresentation;\n    const colorLUT = SegmentationState.getColorLUT(colorLUTIndex);\n    return colorLUT[segmentIndex];\n}\nfunction setColorForSegmentIndex(toolGroupId, segmentationRepresentationUID, segmentIndex, color) {\n    const colorReference = getColorForSegmentIndex(toolGroupId, segmentationRepresentationUID, segmentIndex);\n    for (let i = 0; i < color.length; i++) {\n        colorReference[i] = color[i];\n    }\n    triggerSegmentationRepresentationModified(toolGroupId, segmentationRepresentationUID);\n}\nexport { getColorForSegmentIndex, addColorLUT, setColorLUT, setColorForSegmentIndex, };\n//# sourceMappingURL=segmentationColor.js.map","import { cache } from '@cornerstonejs/core';\nimport * as SegmentationState from '../../../stateManagement/segmentation/segmentationState';\nimport { getSegmentationRepresentations } from '../../../stateManagement/segmentation/segmentationState';\nimport { triggerSegmentationRepresentationModified } from '../triggerSegmentationEvents';\nimport SegmentationRepresentations from '../../../enums/SegmentationRepresentations';\nfunction getSegmentationIndices(segmentationId) {\n    const segmentation = SegmentationState.getSegmentation(segmentationId);\n    if (segmentation.type === SegmentationRepresentations.Labelmap) {\n        const volume = cache.getVolume(segmentationId);\n        const scalarData = volume.getScalarData();\n        const keySet = {};\n        for (let i = 0; i < scalarData.length; i++) {\n            const segmentIndex = scalarData[i];\n            if (segmentIndex !== 0 && !keySet[segmentIndex]) {\n                keySet[segmentIndex] = true;\n            }\n        }\n        return Object.keys(keySet).map((it) => parseInt(it, 10));\n    }\n    else if (segmentation.type === SegmentationRepresentations.Contour) {\n        const geometryIds = segmentation.representationData.CONTOUR?.geometryIds;\n        if (!geometryIds) {\n            throw new Error(`No geometryIds found for segmentationId ${segmentationId}`);\n        }\n        return geometryIds.map((geometryId) => {\n            const geometry = cache.getGeometry(geometryId);\n            return geometry.data.getSegmentIndex();\n        });\n    }\n}\nfunction setSegmentationVisibility(toolGroupId, segmentationRepresentationUID, visibility) {\n    const toolGroupSegmentationRepresentations = getSegmentationRepresentations(toolGroupId);\n    if (!toolGroupSegmentationRepresentations) {\n        return;\n    }\n    const representation = toolGroupSegmentationRepresentations.find((representation) => representation.segmentationRepresentationUID ===\n        segmentationRepresentationUID);\n    if (!representation) {\n        return;\n    }\n    const { segmentsHidden, segmentationId } = representation;\n    const indices = getSegmentationIndices(segmentationId);\n    if (visibility) {\n        segmentsHidden.clear();\n    }\n    else {\n        indices.forEach((index) => {\n            segmentsHidden.add(index);\n        });\n    }\n    triggerSegmentationRepresentationModified(toolGroupId, representation.segmentationRepresentationUID);\n}\nfunction getSegmentationVisibility(toolGroupId, segmentationRepresentationUID) {\n    const toolGroupSegmentationRepresentations = getSegmentationRepresentations(toolGroupId);\n    const representation = toolGroupSegmentationRepresentations.find((representation) => representation.segmentationRepresentationUID ===\n        segmentationRepresentationUID);\n    if (!representation) {\n        return;\n    }\n    const { segmentsHidden } = representation;\n    return segmentsHidden.size === 0;\n}\nfunction setSegmentsVisibility(toolGroupId, segmentationRepresentationUID, segmentIndices, visibility) {\n    const segRepresentation = SegmentationState.getSegmentationRepresentationByUID(toolGroupId, segmentationRepresentationUID);\n    if (!segRepresentation) {\n        return;\n    }\n    segmentIndices.forEach((segmentIndex) => {\n        visibility\n            ? segRepresentation.segmentsHidden.delete(segmentIndex)\n            : segRepresentation.segmentsHidden.add(segmentIndex);\n    });\n    triggerSegmentationRepresentationModified(toolGroupId, segmentationRepresentationUID);\n}\nfunction setSegmentVisibility(toolGroupId, segmentationRepresentationUID, segmentIndex, visibility) {\n    const segRepresentation = SegmentationState.getSegmentationRepresentationByUID(toolGroupId, segmentationRepresentationUID);\n    if (!segRepresentation) {\n        return;\n    }\n    visibility\n        ? segRepresentation.segmentsHidden.delete(segmentIndex)\n        : segRepresentation.segmentsHidden.add(segmentIndex);\n    triggerSegmentationRepresentationModified(toolGroupId, segmentationRepresentationUID);\n}\nexport { setSegmentationVisibility, getSegmentationVisibility, setSegmentVisibility, setSegmentsVisibility, };\n//# sourceMappingURL=segmentationVisibility.js.map","import { getSegmentation } from './segmentationState';\nimport { triggerSegmentationModified } from './triggerSegmentationEvents';\nfunction setActiveSegmentIndex(segmentationId, segmentIndex) {\n    const segmentation = getSegmentation(segmentationId);\n    if (segmentation?.activeSegmentIndex !== segmentIndex) {\n        segmentation.activeSegmentIndex = segmentIndex;\n        triggerSegmentationModified(segmentationId);\n    }\n}\nfunction getActiveSegmentIndex(segmentationId) {\n    const segmentation = getSegmentation(segmentationId);\n    if (segmentation) {\n        return segmentation.activeSegmentIndex;\n    }\n}\nexport { getActiveSegmentIndex, setActiveSegmentIndex };\n//# sourceMappingURL=segmentIndex.js.map","import { StackViewport, utilities, BaseVolumeViewport, } from '@cornerstonejs/core';\nimport { ToolModes } from '../../enums';\nclass BaseTool {\n    constructor(toolProps, defaultToolProps) {\n        const initialProps = utilities.deepMerge(defaultToolProps, toolProps);\n        const { configuration = {}, supportedInteractionTypes, toolGroupId, } = initialProps;\n        if (!configuration.strategies) {\n            configuration.strategies = {};\n            configuration.defaultStrategy = undefined;\n            configuration.activeStrategy = undefined;\n            configuration.strategyOptions = {};\n        }\n        this.toolGroupId = toolGroupId;\n        this.supportedInteractionTypes = supportedInteractionTypes || [];\n        this.configuration = Object.assign({}, configuration);\n        this.mode = ToolModes.Disabled;\n    }\n    getToolName() {\n        return this.constructor.toolName;\n    }\n    applyActiveStrategy(enabledElement, operationData) {\n        const { strategies, activeStrategy } = this.configuration;\n        return strategies[activeStrategy].call(this, enabledElement, operationData);\n    }\n    setConfiguration(newConfiguration) {\n        this.configuration = utilities.deepMerge(this.configuration, newConfiguration);\n    }\n    setActiveStrategy(strategyName) {\n        this.setConfiguration({ activeStrategy: strategyName });\n    }\n    getTargetVolumeId(viewport) {\n        if (this.configuration.volumeId) {\n            return this.configuration.volumeId;\n        }\n        const actorEntries = viewport.getActors();\n        if (!actorEntries) {\n            return;\n        }\n        return actorEntries.find((actorEntry) => actorEntry.actor.getClassName() === 'vtkVolume')?.uid;\n    }\n    getTargetIdImage(targetId, renderingEngine) {\n        if (targetId.startsWith('imageId:')) {\n            const imageId = targetId.split('imageId:')[1];\n            const imageURI = utilities.imageIdToURI(imageId);\n            let viewports = utilities.getViewportsWithImageURI(imageURI, renderingEngine.id);\n            if (!viewports || !viewports.length) {\n                return;\n            }\n            viewports = viewports.filter((viewport) => {\n                return viewport.getCurrentImageId() === imageId;\n            });\n            if (!viewports || !viewports.length) {\n                return;\n            }\n            return viewports[0].getImageData();\n        }\n        else if (targetId.startsWith('volumeId:')) {\n            const volumeId = targetId.split('volumeId:')[1];\n            const viewports = utilities.getViewportsWithVolumeId(volumeId, renderingEngine.id);\n            if (!viewports || !viewports.length) {\n                return;\n            }\n            return viewports[0].getImageData();\n        }\n        else {\n            throw new Error('getTargetIdImage: targetId must start with \"imageId:\" or \"volumeId:\"');\n        }\n    }\n    getTargetId(viewport) {\n        if (viewport instanceof StackViewport) {\n            return `imageId:${viewport.getCurrentImageId()}`;\n        }\n        else if (viewport instanceof BaseVolumeViewport) {\n            return `volumeId:${this.getTargetVolumeId(viewport)}`;\n        }\n        else {\n            throw new Error('getTargetId: viewport must be a StackViewport or VolumeViewport');\n        }\n    }\n}\nBaseTool.toolName = 'BaseTool';\nexport default BaseTool;\n//# sourceMappingURL=BaseTool.js.map","import { state } from '../store';\nimport { getEnabledElement } from '@cornerstonejs/core';\nconst VIEWPORT_ELEMENT = 'viewport-element';\nfunction getSvgDrawingHelper(element) {\n    const enabledElement = getEnabledElement(element);\n    const { viewportId, renderingEngineId } = enabledElement;\n    const canvasHash = `${viewportId}:${renderingEngineId}`;\n    const svgLayerElement = _getSvgLayer(element);\n    Object.keys(state.svgNodeCache[canvasHash]).forEach((cacheKey) => {\n        state.svgNodeCache[canvasHash][cacheKey].touched = false;\n    });\n    return {\n        svgLayerElement: svgLayerElement,\n        svgNodeCacheForCanvas: state.svgNodeCache,\n        getSvgNode: getSvgNode.bind(this, canvasHash),\n        appendNode: appendNode.bind(this, svgLayerElement, canvasHash),\n        setNodeTouched: setNodeTouched.bind(this, canvasHash),\n        clearUntouched: clearUntouched.bind(this, svgLayerElement, canvasHash),\n    };\n}\nfunction _getSvgLayer(element) {\n    const viewportElement = `.${VIEWPORT_ELEMENT}`;\n    const internalDivElement = element.querySelector(viewportElement);\n    const svgLayer = internalDivElement.querySelector('.svg-layer');\n    return svgLayer;\n}\nfunction getSvgNode(canvasHash, cacheKey) {\n    if (!state.svgNodeCache[canvasHash]) {\n        return;\n    }\n    if (state.svgNodeCache[canvasHash][cacheKey]) {\n        return state.svgNodeCache[canvasHash][cacheKey].domRef;\n    }\n}\nfunction appendNode(svgLayerElement, canvasHash, svgNode, cacheKey) {\n    if (!state.svgNodeCache[canvasHash]) {\n        return null;\n    }\n    state.svgNodeCache[canvasHash][cacheKey] = {\n        touched: true,\n        domRef: svgNode,\n    };\n    svgLayerElement.appendChild(svgNode);\n}\nfunction setNodeTouched(canvasHash, cacheKey) {\n    if (!state.svgNodeCache[canvasHash]) {\n        return;\n    }\n    if (state.svgNodeCache[canvasHash][cacheKey]) {\n        state.svgNodeCache[canvasHash][cacheKey].touched = true;\n    }\n}\nfunction clearUntouched(svgLayerElement, canvasHash) {\n    if (!state.svgNodeCache[canvasHash]) {\n        return;\n    }\n    Object.keys(state.svgNodeCache[canvasHash]).forEach((cacheKey) => {\n        const cacheEntry = state.svgNodeCache[canvasHash][cacheKey];\n        if (!cacheEntry.touched && cacheEntry.domRef) {\n            svgLayerElement.removeChild(cacheEntry.domRef);\n            delete state.svgNodeCache[canvasHash][cacheKey];\n        }\n    });\n}\nexport default getSvgDrawingHelper;\n//# sourceMappingURL=getSvgDrawingHelper.js.map","import getSvgDrawingHelper from './getSvgDrawingHelper';\nfunction draw(element, fn) {\n    const svgDrawingHelper = getSvgDrawingHelper(element);\n    fn(svgDrawingHelper);\n    svgDrawingHelper.clearUntouched();\n}\nexport default draw;\n//# sourceMappingURL=draw.js.map","function _getHash(annotationUID, drawingElementType, nodeUID) {\n    return `${annotationUID}::${drawingElementType}::${nodeUID}`;\n}\nexport default _getHash;\n//# sourceMappingURL=_getHash.js.map","export function _setAttributesIfNecessary(attributes, svgNode) {\n    Object.keys(attributes).forEach((key) => {\n        const currentValue = svgNode.getAttribute(key);\n        const newValue = attributes[key];\n        if (newValue === undefined || newValue === '') {\n            svgNode.removeAttribute(key);\n        }\n        else if (currentValue !== newValue) {\n            svgNode.setAttribute(key, newValue);\n        }\n    });\n}\nexport default _setAttributesIfNecessary;\n//# sourceMappingURL=_setAttributesIfNecessary.js.map","export function _setNewAttributesIfValid(attributes, svgNode) {\n    Object.keys(attributes).forEach((key) => {\n        const newValue = attributes[key];\n        if (newValue !== undefined && newValue !== '') {\n            svgNode.setAttribute(key, newValue);\n        }\n    });\n}\nexport default _setNewAttributesIfValid;\n//# sourceMappingURL=_setNewAttributesIfValid.js.map","import _getHash from './_getHash';\nimport _setAttributesIfNecessary from './_setAttributesIfNecessary';\nimport _setNewAttributesIfValid from './_setNewAttributesIfValid';\nfunction drawCircle(svgDrawingHelper, annotationUID, circleUID, center, radius, options = {}, dataId = '') {\n    const { color, fill, width, lineWidth, lineDash } = Object.assign({\n        color: 'dodgerblue',\n        fill: 'transparent',\n        width: '2',\n        lineDash: undefined,\n        lineWidth: undefined,\n    }, options);\n    const strokeWidth = lineWidth || width;\n    const svgns = 'http://www.w3.org/2000/svg';\n    const svgNodeHash = _getHash(annotationUID, 'circle', circleUID);\n    const existingCircleElement = svgDrawingHelper.getSvgNode(svgNodeHash);\n    const attributes = {\n        cx: `${center[0]}`,\n        cy: `${center[1]}`,\n        r: `${radius}`,\n        stroke: color,\n        fill,\n        'stroke-width': strokeWidth,\n        'stroke-dasharray': lineDash,\n    };\n    if (existingCircleElement) {\n        _setAttributesIfNecessary(attributes, existingCircleElement);\n        svgDrawingHelper.setNodeTouched(svgNodeHash);\n    }\n    else {\n        const newCircleElement = document.createElementNS(svgns, 'circle');\n        if (dataId !== '') {\n            newCircleElement.setAttribute('data-id', dataId);\n        }\n        _setNewAttributesIfValid(attributes, newCircleElement);\n        svgDrawingHelper.appendNode(newCircleElement, svgNodeHash);\n    }\n}\nexport default drawCircle;\n//# sourceMappingURL=drawCircle.js.map","import _getHash from './_getHash';\nimport _setAttributesIfNecessary from './_setAttributesIfNecessary';\nimport _setNewAttributesIfValid from './_setNewAttributesIfValid';\nfunction drawEllipse(svgDrawingHelper, annotationUID, ellipseUID, corner1, corner2, options = {}, dataId = '') {\n    const { color, width, lineWidth, lineDash } = Object.assign({\n        color: 'dodgerblue',\n        width: '2',\n        lineWidth: undefined,\n        lineDash: undefined,\n    }, options);\n    const strokeWidth = lineWidth || width;\n    const svgns = 'http://www.w3.org/2000/svg';\n    const svgNodeHash = _getHash(annotationUID, 'ellipse', ellipseUID);\n    const existingEllipse = svgDrawingHelper.getSvgNode(svgNodeHash);\n    const w = Math.abs(corner1[0] - corner2[0]);\n    const h = Math.abs(corner1[1] - corner2[1]);\n    const xMin = Math.min(corner1[0], corner2[0]);\n    const yMin = Math.min(corner1[1], corner2[1]);\n    const center = [xMin + w / 2, yMin + h / 2];\n    const radiusX = w / 2;\n    const radiusY = h / 2;\n    const attributes = {\n        cx: `${center[0]}`,\n        cy: `${center[1]}`,\n        rx: `${radiusX}`,\n        ry: `${radiusY}`,\n        stroke: color,\n        fill: 'transparent',\n        'stroke-width': strokeWidth,\n        'stroke-dasharray': lineDash,\n    };\n    if (existingEllipse) {\n        _setAttributesIfNecessary(attributes, existingEllipse);\n        svgDrawingHelper.setNodeTouched(svgNodeHash);\n    }\n    else {\n        const svgEllipseElement = document.createElementNS(svgns, 'ellipse');\n        if (dataId !== '') {\n            svgEllipseElement.setAttribute('data-id', dataId);\n        }\n        _setNewAttributesIfValid(attributes, svgEllipseElement);\n        svgDrawingHelper.appendNode(svgEllipseElement, svgNodeHash);\n    }\n}\nexport default drawEllipse;\n//# sourceMappingURL=drawEllipse.js.map","import _getHash from './_getHash';\nimport _setNewAttributesIfValid from './_setNewAttributesIfValid';\nimport _setAttributesIfNecessary from './_setAttributesIfNecessary';\nfunction drawHandles(svgDrawingHelper, annotationUID, handleGroupUID, handlePoints, options = {}) {\n    const { color, handleRadius, width, lineWidth, fill, type, opacity } = Object.assign({\n        color: 'dodgerblue',\n        handleRadius: '6',\n        width: '2',\n        lineWidth: undefined,\n        fill: 'transparent',\n        type: 'circle',\n        opacity: 1,\n    }, options);\n    const strokeWidth = lineWidth || width;\n    for (let i = 0; i < handlePoints.length; i++) {\n        const handle = handlePoints[i];\n        const svgns = 'http://www.w3.org/2000/svg';\n        const svgNodeHash = _getHash(annotationUID, 'handle', `hg-${handleGroupUID}-index-${i}`);\n        let attributes;\n        if (type === 'circle') {\n            attributes = {\n                cx: `${handle[0]}`,\n                cy: `${handle[1]}`,\n                r: handleRadius,\n                stroke: color,\n                fill,\n                'stroke-width': strokeWidth,\n                opacity: opacity,\n            };\n        }\n        else if (type === 'rect') {\n            const handleRadiusFloat = parseFloat(handleRadius);\n            const side = handleRadiusFloat * 1.5;\n            const x = handle[0] - side * 0.5;\n            const y = handle[1] - side * 0.5;\n            attributes = {\n                x: `${x}`,\n                y: `${y}`,\n                width: `${side}`,\n                height: `${side}`,\n                stroke: color,\n                fill,\n                'stroke-width': strokeWidth,\n                rx: `${side * 0.1}`,\n                opacity: opacity,\n            };\n        }\n        else {\n            throw new Error(`Unsupported handle type: ${type}`);\n        }\n        const existingHandleElement = svgDrawingHelper.getSvgNode(svgNodeHash);\n        if (existingHandleElement) {\n            _setAttributesIfNecessary(attributes, existingHandleElement);\n            svgDrawingHelper.setNodeTouched(svgNodeHash);\n        }\n        else {\n            const newHandleElement = document.createElementNS(svgns, type);\n            _setNewAttributesIfValid(attributes, newHandleElement);\n            svgDrawingHelper.appendNode(newHandleElement, svgNodeHash);\n        }\n    }\n}\nexport default drawHandles;\n//# sourceMappingURL=drawHandles.js.map","import _getHash from './_getHash';\nimport _setNewAttributesIfValid from './_setNewAttributesIfValid';\nimport _setAttributesIfNecessary from './_setAttributesIfNecessary';\nexport default function drawLine(svgDrawingHelper, annotationUID, lineUID, start, end, options = {}, dataId = '') {\n    if (isNaN(start[0]) || isNaN(start[1]) || isNaN(end[0]) || isNaN(end[1])) {\n        return;\n    }\n    const { color, width, lineWidth, lineDash, shadow } = Object.assign({\n        color: 'dodgerblue',\n        width: '2',\n        lineWidth: undefined,\n        lineDash: undefined,\n        shadow: undefined,\n    }, options);\n    const strokeWidth = lineWidth || width;\n    const svgns = 'http://www.w3.org/2000/svg';\n    const svgNodeHash = _getHash(annotationUID, 'line', lineUID);\n    const existingLine = svgDrawingHelper.getSvgNode(svgNodeHash);\n    const dropShadowStyle = shadow\n        ? `filter:url(#shadow-${svgDrawingHelper.svgLayerElement.id});`\n        : '';\n    const attributes = {\n        x1: `${start[0]}`,\n        y1: `${start[1]}`,\n        x2: `${end[0]}`,\n        y2: `${end[1]}`,\n        stroke: color,\n        style: dropShadowStyle,\n        'stroke-width': strokeWidth,\n        'stroke-dasharray': lineDash,\n    };\n    if (existingLine) {\n        _setAttributesIfNecessary(attributes, existingLine);\n        svgDrawingHelper.setNodeTouched(svgNodeHash);\n    }\n    else {\n        const newLine = document.createElementNS(svgns, 'line');\n        if (dataId !== '') {\n            newLine.setAttribute('data-id', dataId);\n        }\n        _setNewAttributesIfValid(attributes, newLine);\n        svgDrawingHelper.appendNode(newLine, svgNodeHash);\n    }\n}\n//# sourceMappingURL=drawLine.js.map","import _getHash from './_getHash';\nimport _setNewAttributesIfValid from './_setNewAttributesIfValid';\nimport _setAttributesIfNecessary from './_setAttributesIfNecessary';\nexport default function drawPolyline(svgDrawingHelper, annotationUID, polylineUID, points, options) {\n    if (points.length < 2) {\n        return;\n    }\n    const { color, width, lineWidth, lineDash } = Object.assign({\n        color: 'dodgerblue',\n        width: '2',\n        lineWidth: undefined,\n        lineDash: undefined,\n        connectLastToFirst: false,\n    }, options);\n    const strokeWidth = lineWidth || width;\n    const svgns = 'http://www.w3.org/2000/svg';\n    const svgNodeHash = _getHash(annotationUID, 'polyline', polylineUID);\n    const existingPolyLine = svgDrawingHelper.getSvgNode(svgNodeHash);\n    let pointsAttribute = '';\n    for (const point of points) {\n        pointsAttribute += `${point[0]}, ${point[1]} `;\n    }\n    if (options.connectLastToFirst) {\n        const firstPoint = points[0];\n        pointsAttribute += `${firstPoint[0]}, ${firstPoint[1]}`;\n    }\n    const attributes = {\n        points: pointsAttribute,\n        stroke: color,\n        fill: 'none',\n        'stroke-width': strokeWidth,\n        'stroke-dasharray': lineDash,\n    };\n    if (existingPolyLine) {\n        _setAttributesIfNecessary(attributes, existingPolyLine);\n        svgDrawingHelper.setNodeTouched(svgNodeHash);\n    }\n    else {\n        const newPolyLine = document.createElementNS(svgns, 'polyline');\n        _setNewAttributesIfValid(attributes, newPolyLine);\n        svgDrawingHelper.appendNode(newPolyLine, svgNodeHash);\n    }\n}\n//# sourceMappingURL=drawPolyline.js.map","import _getHash from './_getHash';\nimport _setAttributesIfNecessary from './_setAttributesIfNecessary';\nfunction drawTextBox(svgDrawingHelper, annotationUID, textUID, textLines, position, options = {}) {\n    const mergedOptions = Object.assign({\n        fontFamily: 'Helvetica, Arial, sans-serif',\n        fontSize: '14px',\n        color: 'rgb(255, 255, 0)',\n        background: '',\n        padding: 25,\n        centerX: false,\n        centerY: true,\n    }, options);\n    const textGroupBoundingBox = _drawTextGroup(svgDrawingHelper, annotationUID, textUID, textLines, position, mergedOptions);\n    return textGroupBoundingBox;\n}\nfunction _drawTextGroup(svgDrawingHelper, annotationUID, textUID, textLines = [''], position, options) {\n    const { padding, color, fontFamily, fontSize, background } = options;\n    let textGroupBoundingBox;\n    const [x, y] = [position[0] + padding, position[1] + padding];\n    const svgns = 'http://www.w3.org/2000/svg';\n    const svgNodeHash = _getHash(annotationUID, 'text', textUID);\n    const existingTextGroup = svgDrawingHelper.getSvgNode(svgNodeHash);\n    if (existingTextGroup) {\n        const textElement = existingTextGroup.querySelector('text');\n        const textSpans = Array.from(textElement.children);\n        for (let i = 0; i < textSpans.length; i++) {\n            const textSpanElement = textSpans[i];\n            const text = textLines[i] || '';\n            textSpanElement.textContent = text;\n        }\n        if (textLines.length > textSpans.length) {\n            for (let i = 0; i < textLines.length - textSpans.length; i++) {\n                const textLine = textLines[i + textSpans.length];\n                const textSpan = _createTextSpan(textLine);\n                textElement.appendChild(textSpan);\n            }\n            existingTextGroup.appendChild(textElement);\n            svgDrawingHelper.appendNode(existingTextGroup, svgNodeHash);\n        }\n        const textAttributes = {\n            fill: color,\n            'font-size': fontSize,\n            'font-family': fontFamily,\n        };\n        const textGroupAttributes = {\n            transform: `translate(${x} ${y})`,\n        };\n        _setAttributesIfNecessary(textAttributes, textElement);\n        _setAttributesIfNecessary(textGroupAttributes, existingTextGroup);\n        textGroupBoundingBox = _drawTextBackground(existingTextGroup, background);\n        svgDrawingHelper.setNodeTouched(svgNodeHash);\n    }\n    else {\n        const textGroup = document.createElementNS(svgns, 'g');\n        textGroup.setAttribute('transform', `translate(${x} ${y})`);\n        const textElement = _createTextElement(svgDrawingHelper, options);\n        for (let i = 0; i < textLines.length; i++) {\n            const textLine = textLines[i];\n            const textSpan = _createTextSpan(textLine);\n            textElement.appendChild(textSpan);\n        }\n        textGroup.appendChild(textElement);\n        svgDrawingHelper.appendNode(textGroup, svgNodeHash);\n        textGroupBoundingBox = _drawTextBackground(textGroup, background);\n    }\n    return Object.assign({}, textGroupBoundingBox, {\n        x,\n        y,\n        height: textGroupBoundingBox.height + padding,\n        width: textGroupBoundingBox.width + padding,\n    });\n}\nfunction _createTextElement(svgDrawingHelper, options) {\n    const { color, fontFamily, fontSize } = options;\n    const svgns = 'http://www.w3.org/2000/svg';\n    const textElement = document.createElementNS(svgns, 'text');\n    const noSelectStyle = 'user-select: none; pointer-events: none; -webkit-tap-highlight-color:  rgba(255, 255, 255, 0);';\n    const dropShadowStyle = `filter:url(#shadow-${svgDrawingHelper.svgLayerElement.id});`;\n    const combinedStyle = `${noSelectStyle}${dropShadowStyle}`;\n    textElement.setAttribute('x', '0');\n    textElement.setAttribute('y', '0');\n    textElement.setAttribute('fill', color);\n    textElement.setAttribute('font-family', fontFamily);\n    textElement.setAttribute('font-size', fontSize);\n    textElement.setAttribute('style', combinedStyle);\n    return textElement;\n}\nfunction _createTextSpan(text) {\n    const svgns = 'http://www.w3.org/2000/svg';\n    const textSpanElement = document.createElementNS(svgns, 'tspan');\n    textSpanElement.setAttribute('x', '0');\n    textSpanElement.setAttribute('dy', '1.2em');\n    textSpanElement.textContent = text;\n    return textSpanElement;\n}\nfunction _drawTextBackground(group, color) {\n    let element = group.querySelector('rect.background');\n    if (!color) {\n        if (element) {\n            group.removeChild(element);\n        }\n        return group.getBBox();\n    }\n    if (!element) {\n        element = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        element.setAttribute('class', 'background');\n        group.insertBefore(element, group.firstChild);\n    }\n    const bBox = group.getBBox();\n    const attributes = {\n        x: `${bBox.x}`,\n        y: `${bBox.y}`,\n        width: `${bBox.width}`,\n        height: `${bBox.height}`,\n        fill: color,\n    };\n    _setAttributesIfNecessary(attributes, element);\n    return bBox;\n}\nexport default drawTextBox;\n//# sourceMappingURL=drawTextBox.js.map","export default function findClosestPoint(sourcePoints, targetPoint) {\n    let minPoint = [0, 0];\n    let minDistance = Number.MAX_SAFE_INTEGER;\n    sourcePoints.forEach(function (sourcePoint) {\n        const distance = _distanceBetween(targetPoint, sourcePoint);\n        if (distance < minDistance) {\n            minDistance = distance;\n            minPoint = [...sourcePoint];\n        }\n    });\n    return minPoint;\n}\nfunction _distanceBetween(p1, p2) {\n    const [x1, y1] = p1;\n    const [x2, y2] = p2;\n    return Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\n}\n//# sourceMappingURL=findClosestPoint.js.map","import drawLine from './drawLine';\nimport findClosestPoint from '../utilities/math/vec2/findClosestPoint';\nfunction drawLink(svgDrawingHelper, annotationUID, linkUID, annotationAnchorPoints, refPoint, boundingBox, options = {}) {\n    const start = annotationAnchorPoints.length > 0\n        ? findClosestPoint(annotationAnchorPoints, refPoint)\n        : refPoint;\n    const boundingBoxPoints = _boundingBoxPoints(boundingBox);\n    const end = findClosestPoint(boundingBoxPoints, start);\n    const mergedOptions = Object.assign({\n        color: 'rgb(255, 255, 0)',\n        lineWidth: '1',\n        lineDash: '2,3',\n    }, options);\n    drawLine(svgDrawingHelper, annotationUID, `link-${linkUID}`, start, end, mergedOptions);\n}\nfunction _boundingBoxPoints(boundingBox) {\n    const { x: left, y: top, height, width } = boundingBox;\n    const halfWidth = width / 2;\n    const halfHeight = height / 2;\n    const topMiddle = [left + halfWidth, top];\n    const leftMiddle = [left, top + halfHeight];\n    const bottomMiddle = [left + halfWidth, top + height];\n    const rightMiddle = [left + width, top + halfHeight];\n    return [topMiddle, leftMiddle, bottomMiddle, rightMiddle];\n}\nexport default drawLink;\n//# sourceMappingURL=drawLink.js.map","import drawTextBox from './drawTextBox';\nimport drawLink from './drawLink';\nfunction drawLinkedTextBox(svgDrawingHelper, annotationUID, textBoxUID, textLines, textBoxPosition, annotationAnchorPoints, textBox, options = {}) {\n    const mergedOptions = Object.assign({\n        handleRadius: '6',\n        centering: {\n            x: false,\n            y: true,\n        },\n    }, options);\n    const canvasBoundingBox = drawTextBox(svgDrawingHelper, annotationUID, textBoxUID, textLines, textBoxPosition, mergedOptions);\n    drawLink(svgDrawingHelper, annotationUID, textBoxUID, annotationAnchorPoints, textBoxPosition, canvasBoundingBox, mergedOptions);\n    return canvasBoundingBox;\n}\nexport default drawLinkedTextBox;\n//# sourceMappingURL=drawLinkedTextBox.js.map","import _getHash from './_getHash';\nimport _setAttributesIfNecessary from './_setAttributesIfNecessary';\nimport _setNewAttributesIfValid from './_setNewAttributesIfValid';\nexport default function drawRect(svgDrawingHelper, annotationUID, rectangleUID, start, end, options = {}, dataId = '') {\n    const { color, width: _width, lineWidth, lineDash, } = Object.assign({\n        color: 'dodgerblue',\n        width: '2',\n        lineWidth: undefined,\n        lineDash: undefined,\n    }, options);\n    const strokeWidth = lineWidth || _width;\n    const svgns = 'http://www.w3.org/2000/svg';\n    const svgNodeHash = _getHash(annotationUID, 'rect', rectangleUID);\n    const existingRect = svgDrawingHelper.getSvgNode(svgNodeHash);\n    const tlhc = [Math.min(start[0], end[0]), Math.min(start[1], end[1])];\n    const width = Math.abs(start[0] - end[0]);\n    const height = Math.abs(start[1] - end[1]);\n    const attributes = {\n        x: `${tlhc[0]}`,\n        y: `${tlhc[1]}`,\n        width: `${width}`,\n        height: `${height}`,\n        stroke: color,\n        fill: 'transparent',\n        'stroke-width': strokeWidth,\n        'stroke-dasharray': lineDash,\n    };\n    if (existingRect) {\n        _setAttributesIfNecessary(attributes, existingRect);\n        svgDrawingHelper.setNodeTouched(svgNodeHash);\n    }\n    else {\n        const svgRectElement = document.createElementNS(svgns, 'rect');\n        if (dataId !== '') {\n            svgRectElement.setAttribute('data-id', dataId);\n        }\n        _setNewAttributesIfValid(attributes, svgRectElement);\n        svgDrawingHelper.appendNode(svgRectElement, svgNodeHash);\n    }\n}\n//# sourceMappingURL=drawRect.js.map","import drawLine from './drawLine';\nexport default function drawArrow(svgDrawingHelper, annotationUID, arrowUID, start, end, options = {}) {\n    if (isNaN(start[0]) || isNaN(start[1]) || isNaN(end[0]) || isNaN(end[1])) {\n        return;\n    }\n    const { color, width, lineWidth, lineDash } = Object.assign({\n        color: 'dodgerblue',\n        width: '2',\n        lineWidth: undefined,\n        lineDash: undefined,\n    }, options);\n    drawLine(svgDrawingHelper, annotationUID, arrowUID, start, end, {\n        color,\n        width,\n        lineWidth,\n        lineDash,\n    });\n    const headLength = 10;\n    const angle = Math.atan2(end[1] - start[1], end[0] - start[0]);\n    const firstLine = {\n        start: [\n            end[0] - headLength * Math.cos(angle - Math.PI / 7),\n            end[1] - headLength * Math.sin(angle - Math.PI / 7),\n        ],\n        end: end,\n    };\n    const secondLine = {\n        start: [\n            end[0] - headLength * Math.cos(angle + Math.PI / 7),\n            end[1] - headLength * Math.sin(angle + Math.PI / 7),\n        ],\n        end: end,\n    };\n    drawLine(svgDrawingHelper, annotationUID, '2', firstLine.start, firstLine.end, {\n        color,\n        width,\n        lineWidth,\n    });\n    drawLine(svgDrawingHelper, annotationUID, '3', secondLine.start, secondLine.end, {\n        color,\n        width,\n        lineWidth,\n    });\n}\n//# sourceMappingURL=drawArrow.js.map","import { ToolGroupManager } from '../store';\nimport { getEnabledElement } from '@cornerstonejs/core';\nexport default function getToolsWithModesForElement(element, modesFilter) {\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngineId, viewportId } = enabledElement;\n    const toolGroup = ToolGroupManager.getToolGroupForViewport(viewportId, renderingEngineId);\n    if (!toolGroup) {\n        return [];\n    }\n    const enabledTools = [];\n    const toolGroupToolNames = Object.keys(toolGroup.toolOptions);\n    for (let j = 0; j < toolGroupToolNames.length; j++) {\n        const toolName = toolGroupToolNames[j];\n        const toolOptions = toolGroup.toolOptions[toolName];\n        if (!toolOptions) {\n            continue;\n        }\n        if (modesFilter.includes(toolOptions.mode)) {\n            const toolInstance = toolGroup.getToolInstance(toolName);\n            enabledTools.push(toolInstance);\n        }\n    }\n    return enabledTools;\n}\n//# sourceMappingURL=getToolsWithModesForElement.js.map","import { getEnabledElement, triggerEvent, getRenderingEngine, } from '@cornerstonejs/core';\nimport { Events, ToolModes } from '../enums';\nimport { draw as drawSvg } from '../drawingSvg';\nimport getToolsWithModesForElement from './getToolsWithModesForElement';\nconst { Active, Passive, Enabled } = ToolModes;\nclass AnnotationRenderingEngine {\n    constructor() {\n        this._needsRender = new Set();\n        this._animationFrameSet = false;\n        this._animationFrameHandle = null;\n        this._renderFlaggedViewports = () => {\n            this._throwIfDestroyed();\n            const elements = Array.from(this._viewportElements.values());\n            for (let i = 0; i < elements.length; i++) {\n                const element = elements[i];\n                if (this._needsRender.has(element)) {\n                    this._triggerRender(element);\n                    this._needsRender.delete(element);\n                    if (this._needsRender.size === 0) {\n                        this._animationFrameSet = false;\n                        this._animationFrameHandle = null;\n                        return;\n                    }\n                }\n            }\n        };\n        this._viewportElements = new Map();\n    }\n    addViewportElement(viewportId, element) {\n        this._viewportElements.set(viewportId, element);\n    }\n    removeViewportElement(viewportId, element) {\n        this._viewportElements.delete(viewportId);\n        this._needsRender.delete(element);\n        this._reset();\n    }\n    renderViewport(element) {\n        this._setViewportsToBeRenderedNextFrame([element]);\n    }\n    _throwIfDestroyed() {\n        if (this.hasBeenDestroyed) {\n            throw new Error('this.destroy() has been manually called to free up memory, can not longer use this instance. Instead make a new one.');\n        }\n    }\n    _setAllViewportsToBeRenderedNextFrame() {\n        const elements = [...this._viewportElements.values()];\n        elements.forEach((element) => {\n            this._needsRender.add(element);\n        });\n        this._renderFlaggedViewports();\n    }\n    _setViewportsToBeRenderedNextFrame(elements) {\n        const elementsEnabled = [...this._viewportElements.values()];\n        elements.forEach((element) => {\n            if (elementsEnabled.indexOf(element) !== -1) {\n                this._needsRender.add(element);\n            }\n        });\n        this._render();\n    }\n    _render() {\n        if (this._needsRender.size > 0 && this._animationFrameSet === false) {\n            this._animationFrameHandle = window.requestAnimationFrame(this._renderFlaggedViewports);\n            this._animationFrameSet = true;\n        }\n    }\n    _triggerRender(element) {\n        const enabledElement = getEnabledElement(element);\n        if (!enabledElement) {\n            console.warn('Element has been disabled');\n            return;\n        }\n        const renderingEngine = getRenderingEngine(enabledElement.renderingEngineId);\n        if (!renderingEngine) {\n            console.warn('rendering Engine has been destroyed');\n            return;\n        }\n        const enabledTools = getToolsWithModesForElement(element, [\n            Active,\n            Passive,\n            Enabled,\n        ]);\n        const { renderingEngineId, viewportId } = enabledElement;\n        const eventDetail = {\n            element,\n            renderingEngineId,\n            viewportId,\n        };\n        drawSvg(element, (svgDrawingHelper) => {\n            let anyRendered = false;\n            const handleDrawSvg = (tool) => {\n                if (tool.renderAnnotation) {\n                    const rendered = tool.renderAnnotation(enabledElement, svgDrawingHelper);\n                    anyRendered = anyRendered || rendered;\n                }\n            };\n            enabledTools.forEach(handleDrawSvg);\n            if (anyRendered) {\n                triggerEvent(element, Events.ANNOTATION_RENDERED, { ...eventDetail });\n            }\n        });\n    }\n    _reset() {\n        window.cancelAnimationFrame(this._animationFrameHandle);\n        this._needsRender.clear();\n        this._animationFrameSet = false;\n        this._animationFrameHandle = null;\n        this._setAllViewportsToBeRenderedNextFrame();\n    }\n}\nconst annotationRenderingEngine = new AnnotationRenderingEngine();\nfunction triggerAnnotationRender(element) {\n    annotationRenderingEngine.renderViewport(element);\n}\nexport { annotationRenderingEngine, triggerAnnotationRender };\nexport default triggerAnnotationRender;\n//# sourceMappingURL=triggerAnnotationRender.js.map","import { vec3 } from 'gl-matrix';\nimport { CONSTANTS, metaData } from '@cornerstonejs/core';\nconst { EPSILON } = CONSTANTS;\nconst PARALLEL_THRESHOLD = 1 - EPSILON;\nexport default function filterAnnotationsWithinSlice(annotations, camera, spacingInNormalDirection) {\n    const { viewPlaneNormal } = camera;\n    const annotationsWithParallelNormals = annotations.filter((td) => {\n        let annotationViewPlaneNormal = td.metadata.viewPlaneNormal;\n        if (!annotationViewPlaneNormal) {\n            const { referencedImageId } = td.metadata;\n            const { imageOrientationPatient } = metaData.get('imagePlaneModule', referencedImageId);\n            const rowCosineVec = vec3.fromValues(imageOrientationPatient[0], imageOrientationPatient[1], imageOrientationPatient[2]);\n            const colCosineVec = vec3.fromValues(imageOrientationPatient[3], imageOrientationPatient[4], imageOrientationPatient[5]);\n            annotationViewPlaneNormal = vec3.create();\n            vec3.cross(annotationViewPlaneNormal, rowCosineVec, colCosineVec);\n            td.metadata.viewPlaneNormal = annotationViewPlaneNormal;\n        }\n        const isParallel = Math.abs(vec3.dot(viewPlaneNormal, annotationViewPlaneNormal)) >\n            PARALLEL_THRESHOLD;\n        return annotationViewPlaneNormal && isParallel;\n    });\n    if (!annotationsWithParallelNormals.length) {\n        return [];\n    }\n    const halfSpacingInNormalDirection = spacingInNormalDirection / 2;\n    const { focalPoint } = camera;\n    const annotationsWithinSlice = [];\n    for (const annotation of annotationsWithParallelNormals) {\n        const data = annotation.data;\n        const point = data.handles.points[0];\n        if (!annotation.isVisible) {\n            continue;\n        }\n        const dir = vec3.create();\n        vec3.sub(dir, focalPoint, point);\n        const dot = vec3.dot(dir, viewPlaneNormal);\n        if (Math.abs(dot) < halfSpacingInNormalDirection) {\n            annotationsWithinSlice.push(annotation);\n        }\n    }\n    return annotationsWithinSlice;\n}\n//# sourceMappingURL=filterAnnotationsWithinSlice.js.map","import { StackViewport, VolumeViewport, utilities as csUtils, } from '@cornerstonejs/core';\nimport filterAnnotationsWithinSlice from './filterAnnotationsWithinSlice';\nexport default function filterAnnotationsForDisplay(viewport, annotations) {\n    if (viewport instanceof StackViewport) {\n        const imageId = viewport.getCurrentImageId();\n        const colonIndex = imageId.indexOf(':');\n        const imageURI = imageId.substring(colonIndex + 1);\n        return annotations.filter((annotation) => {\n            if (!annotation.isVisible) {\n                return false;\n            }\n            const imageId = annotation.metadata.referencedImageId;\n            if (imageId === undefined) {\n                return false;\n            }\n            const colonIndex = imageId.indexOf(':');\n            const referenceImageURI = imageId.substring(colonIndex + 1);\n            return referenceImageURI === imageURI;\n        });\n    }\n    else if (viewport instanceof VolumeViewport) {\n        const camera = viewport.getCamera();\n        const { spacingInNormalDirection } = csUtils.getTargetVolumeAndSpacingInNormalDir(viewport, camera);\n        return filterAnnotationsWithinSlice(annotations, camera, spacingInNormalDirection);\n    }\n    else {\n        throw new Error(`Viewport Type ${viewport.type} not supported`);\n    }\n}\n//# sourceMappingURL=filterAnnotationsForDisplay.js.map","class ToolStyle {\n    constructor() {\n        const defaultConfig = {\n            color: 'rgb(255, 255, 0)',\n            colorHighlighted: 'rgb(0, 255, 0)',\n            colorSelected: 'rgb(0, 220, 0)',\n            colorLocked: 'rgb(255, 255, 0)',\n            lineWidth: '1',\n            lineDash: '',\n            shadow: true,\n            textBoxFontFamily: 'Helvetica Neue, Helvetica, Arial, sans-serif',\n            textBoxFontSize: '14px',\n            textBoxColor: 'rgb(255, 255, 0)',\n            textBoxColorHighlighted: 'rgb(0, 255, 0)',\n            textBoxColorSelected: 'rgb(0, 255, 0)',\n            textBoxColorLocked: 'rgb(255, 255, 0)',\n            textBoxBackground: '',\n            textBoxLinkLineWidth: '1',\n            textBoxLinkLineDash: '2,3',\n            textBoxShadow: true,\n        };\n        this._initializeConfig(defaultConfig);\n    }\n    getAnnotationToolStyles(annotationUID) {\n        return this.config.annotations && this.config.annotations[annotationUID];\n    }\n    getViewportToolStyles(viewportId) {\n        return this.config.viewports && this.config.viewports[viewportId];\n    }\n    getToolGroupToolStyles(toolGroupId) {\n        return this.config.toolGroups && this.config.toolGroups[toolGroupId];\n    }\n    getDefaultToolStyles() {\n        return this.config.default;\n    }\n    setAnnotationStyles(annotationUID, styles) {\n        let annotationSpecificStyles = this.config.annotations;\n        if (!annotationSpecificStyles) {\n            this.config = {\n                ...this.config,\n                annotations: {},\n            };\n            annotationSpecificStyles = this.config.annotations;\n        }\n        annotationSpecificStyles[annotationUID] = styles;\n    }\n    setViewportToolStyles(viewportId, styles) {\n        let viewportSpecificStyles = this.config.viewports;\n        if (!viewportSpecificStyles) {\n            this.config = {\n                ...this.config,\n                viewports: {},\n            };\n            viewportSpecificStyles = this.config.viewports;\n        }\n        viewportSpecificStyles[viewportId] = styles;\n    }\n    setToolGroupToolStyles(toolGroupId, styles) {\n        let toolGroupSpecificStyles = this.config.toolGroups;\n        if (!toolGroupSpecificStyles) {\n            this.config = {\n                ...this.config,\n                toolGroups: {},\n            };\n            toolGroupSpecificStyles = this.config.toolGroups;\n        }\n        toolGroupSpecificStyles[toolGroupId] = styles;\n    }\n    setDefaultToolStyles(styles) {\n        this.config.default = styles;\n    }\n    getStyleProperty(toolStyle, specifications) {\n        const { annotationUID, viewportId, toolGroupId, toolName } = specifications;\n        return this._getToolStyle(toolStyle, annotationUID, viewportId, toolGroupId, toolName);\n    }\n    _getToolStyle(property, annotationUID, viewportId, toolGroupId, toolName) {\n        if (annotationUID) {\n            const styles = this.getAnnotationToolStyles(annotationUID);\n            if (styles) {\n                if (styles[property]) {\n                    return styles[property];\n                }\n            }\n        }\n        if (viewportId) {\n            const styles = this.getViewportToolStyles(viewportId);\n            if (styles) {\n                if (styles[toolName] && styles[toolName][property]) {\n                    return styles[toolName][property];\n                }\n                if (styles.global && styles.global[property]) {\n                    return styles.global[property];\n                }\n            }\n        }\n        if (toolGroupId) {\n            const styles = this.getToolGroupToolStyles(toolGroupId);\n            if (styles) {\n                if (styles[toolName] && styles[toolName][property]) {\n                    return styles[toolName][property];\n                }\n                if (styles.global && styles.global[property]) {\n                    return styles.global[property];\n                }\n            }\n        }\n        const globalStyles = this.getDefaultToolStyles();\n        if (globalStyles[toolName] && globalStyles[toolName][property]) {\n            return globalStyles[toolName][property];\n        }\n        if (globalStyles.global && globalStyles.global[property]) {\n            return globalStyles.global[property];\n        }\n    }\n    _initializeConfig(config) {\n        const toolStyles = {};\n        for (const name in config) {\n            toolStyles[name] = config[name];\n        }\n        this.config = {\n            default: {\n                global: toolStyles,\n            },\n        };\n    }\n}\nconst toolStyle = new ToolStyle();\nexport default toolStyle;\n//# sourceMappingURL=ToolStyle.js.map","import toolStyle from './ToolStyle';\nfunction getHierarchalPropertyStyles(property, state, mode) {\n    const list = [`${property}`];\n    if (state)\n        list.push(`${list[0]}${state}`);\n    if (mode)\n        list.push(`${list[list.length - 1]}${mode}`);\n    return list;\n}\nfunction getStyleProperty(property, styleSpecifier, state, mode) {\n    const alternatives = getHierarchalPropertyStyles(property, state, mode);\n    for (let i = alternatives.length - 1; i >= 0; --i) {\n        const style = toolStyle.getStyleProperty(alternatives[i], styleSpecifier);\n        if (style !== undefined) {\n            return style;\n        }\n    }\n}\nexport { getStyleProperty };\n//# sourceMappingURL=helpers.js.map","import { isAnnotationLocked } from '../annotationLocking';\nimport { isAnnotationSelected } from '../annotationSelection';\nimport { AnnotationStyleStates } from '../../../enums';\nfunction getState(annotation) {\n    if (annotation) {\n        if (annotation.data && annotation.highlighted)\n            return AnnotationStyleStates.Highlighted;\n        if (isAnnotationSelected(annotation.annotationUID))\n            return AnnotationStyleStates.Selected;\n        if (isAnnotationLocked(annotation))\n            return AnnotationStyleStates.Locked;\n    }\n    return AnnotationStyleStates.Default;\n}\nexport default getState;\n//# sourceMappingURL=getState.js.map","import { getStyleProperty } from './helpers';\nfunction getFont(styleSpecifier, state, mode) {\n    const fontSize = getStyleProperty('textBoxFontSize', styleSpecifier, state, mode);\n    const fontFamily = getStyleProperty('textBoxFontFamily', styleSpecifier, state, mode);\n    return `${fontSize}px ${fontFamily}`;\n}\nexport default getFont;\n//# sourceMappingURL=getFont.js.map","import { utilities, getEnabledElement, VolumeViewport, StackViewport, cache, } from '@cornerstonejs/core';\nimport { vec4 } from 'gl-matrix';\nimport BaseTool from './BaseTool';\nimport { getAnnotationManager } from '../../stateManagement/annotation/annotationState';\nimport triggerAnnotationRender from '../../utilities/triggerAnnotationRender';\nimport filterAnnotationsForDisplay from '../../utilities/planar/filterAnnotationsForDisplay';\nimport { getStyleProperty } from '../../stateManagement/annotation/config/helpers';\nimport { getState } from '../../stateManagement/annotation/config';\nclass AnnotationDisplayTool extends BaseTool {\n    constructor() {\n        super(...arguments);\n        this.onImageSpacingCalibrated = (evt) => {\n            const { element, rowScale, columnScale, imageId, imageData: calibratedImageData, worldToIndex: nonCalibratedWorldToIndex, } = evt.detail;\n            const { viewport } = getEnabledElement(element);\n            if (viewport instanceof VolumeViewport) {\n                throw new Error('Cannot calibrate a volume viewport');\n            }\n            const calibratedIndexToWorld = calibratedImageData.getIndexToWorld();\n            const imageURI = utilities.imageIdToURI(imageId);\n            const stateManager = getAnnotationManager();\n            const framesOfReference = stateManager.getFramesOfReference();\n            framesOfReference.forEach((frameOfReference) => {\n                const frameOfReferenceSpecificAnnotations = stateManager.getAnnotations(frameOfReference);\n                const toolSpecificAnnotations = frameOfReferenceSpecificAnnotations[this.getToolName()];\n                if (!toolSpecificAnnotations || !toolSpecificAnnotations.length) {\n                    return;\n                }\n                toolSpecificAnnotations.forEach((annotation) => {\n                    const referencedImageURI = utilities.imageIdToURI(annotation.metadata.referencedImageId);\n                    if (referencedImageURI === imageURI) {\n                        annotation.invalidated = true;\n                        annotation.data.cachedStats = {};\n                        annotation.data.handles.points = annotation.data.handles.points.map((point) => {\n                            const p = vec4.fromValues(...point, 1);\n                            const pCalibrated = vec4.fromValues(0, 0, 0, 1);\n                            const nonCalibratedIndexVec4 = vec4.create();\n                            vec4.transformMat4(nonCalibratedIndexVec4, p, nonCalibratedWorldToIndex);\n                            const calibratedIndex = [\n                                columnScale * nonCalibratedIndexVec4[0],\n                                rowScale * nonCalibratedIndexVec4[1],\n                                nonCalibratedIndexVec4[2],\n                            ];\n                            vec4.transformMat4(pCalibrated, vec4.fromValues(calibratedIndex[0], calibratedIndex[1], calibratedIndex[2], 1), calibratedIndexToWorld);\n                            return pCalibrated.slice(0, 3);\n                        });\n                    }\n                });\n                triggerAnnotationRender(element);\n            });\n        };\n    }\n    filterInteractableAnnotationsForElement(element, annotations) {\n        if (!annotations || !annotations.length) {\n            return;\n        }\n        const enabledElement = getEnabledElement(element);\n        const { viewport } = enabledElement;\n        return filterAnnotationsForDisplay(viewport, annotations);\n    }\n    getReferencedImageId(viewport, worldPos, viewPlaneNormal, viewUp) {\n        const targetId = this.getTargetId(viewport);\n        let referencedImageId;\n        if (viewport instanceof StackViewport) {\n            referencedImageId = targetId.split('imageId:')[1];\n        }\n        else {\n            const volumeId = targetId.split('volumeId:')[1];\n            const imageVolume = cache.getVolume(volumeId);\n            referencedImageId = utilities.getClosestImageId(imageVolume, worldPos, viewPlaneNormal);\n        }\n        return referencedImageId;\n    }\n    getStyle(property, specifications, annotation) {\n        return getStyleProperty(property, specifications, getState(annotation), this.mode);\n    }\n}\nAnnotationDisplayTool.toolName = 'AnnotationDisplayTool';\nexport default AnnotationDisplayTool;\n//# sourceMappingURL=AnnotationDisplayTool.js.map","import { BaseVolumeViewport, StackViewport, cache, getEnabledElement, metaData, } from '@cornerstonejs/core';\nimport { vec2 } from 'gl-matrix';\nimport AnnotationDisplayTool from './AnnotationDisplayTool';\nimport { isAnnotationLocked } from '../../stateManagement/annotation/annotationLocking';\nimport { isAnnotationVisible } from '../../stateManagement/annotation/annotationVisibility';\nclass AnnotationTool extends AnnotationDisplayTool {\n    constructor() {\n        super(...arguments);\n        this.mouseMoveCallback = (evt, filteredAnnotations) => {\n            if (!filteredAnnotations) {\n                return false;\n            }\n            const { element, currentPoints } = evt.detail;\n            const canvasCoords = currentPoints.canvas;\n            let annotationsNeedToBeRedrawn = false;\n            for (const annotation of filteredAnnotations) {\n                if (isAnnotationLocked(annotation) ||\n                    !isAnnotationVisible(annotation.annotationUID)) {\n                    continue;\n                }\n                const { data } = annotation;\n                const activateHandleIndex = data.handles\n                    ? data.handles.activeHandleIndex\n                    : undefined;\n                const near = this._imagePointNearToolOrHandle(element, annotation, canvasCoords, 6);\n                const nearToolAndNotMarkedActive = near && !annotation.highlighted;\n                const notNearToolAndMarkedActive = !near && annotation.highlighted;\n                if (nearToolAndNotMarkedActive || notNearToolAndMarkedActive) {\n                    annotation.highlighted = !annotation.highlighted;\n                    annotationsNeedToBeRedrawn = true;\n                }\n                else if (data.handles &&\n                    data.handles.activeHandleIndex !== activateHandleIndex) {\n                    annotationsNeedToBeRedrawn = true;\n                }\n            }\n            return annotationsNeedToBeRedrawn;\n        };\n    }\n    getHandleNearImagePoint(element, annotation, canvasCoords, proximity) {\n        const enabledElement = getEnabledElement(element);\n        const { viewport } = enabledElement;\n        const { data } = annotation;\n        const { points, textBox } = data.handles;\n        const { worldBoundingBox } = textBox;\n        if (worldBoundingBox) {\n            const canvasBoundingBox = {\n                topLeft: viewport.worldToCanvas(worldBoundingBox.topLeft),\n                topRight: viewport.worldToCanvas(worldBoundingBox.topRight),\n                bottomLeft: viewport.worldToCanvas(worldBoundingBox.bottomLeft),\n                bottomRight: viewport.worldToCanvas(worldBoundingBox.bottomRight),\n            };\n            if (canvasCoords[0] >= canvasBoundingBox.topLeft[0] &&\n                canvasCoords[0] <= canvasBoundingBox.bottomRight[0] &&\n                canvasCoords[1] >= canvasBoundingBox.topLeft[1] &&\n                canvasCoords[1] <= canvasBoundingBox.bottomRight[1]) {\n                data.handles.activeHandleIndex = null;\n                return textBox;\n            }\n        }\n        for (let i = 0; i < points.length; i++) {\n            const point = points[i];\n            const annotationCanvasCoordinate = viewport.worldToCanvas(point);\n            const near = vec2.distance(canvasCoords, annotationCanvasCoordinate) < proximity;\n            if (near === true) {\n                data.handles.activeHandleIndex = i;\n                return point;\n            }\n        }\n        data.handles.activeHandleIndex = null;\n    }\n    getLinkedTextBoxStyle(specifications, annotation) {\n        return {\n            fontFamily: this.getStyle('textBoxFontFamily', specifications, annotation),\n            fontSize: this.getStyle('textBoxFontSize', specifications, annotation),\n            color: this.getStyle('textBoxColor', specifications, annotation),\n            shadow: this.getStyle('textBoxShadow', specifications, annotation),\n            background: this.getStyle('textBoxBackground', specifications, annotation),\n            lineWidth: this.getStyle('textBoxLinkLineWidth', specifications, annotation),\n            lineDash: this.getStyle('textBoxLinkLineDash', specifications, annotation),\n        };\n    }\n    isSuvScaled(viewport, targetId, imageId) {\n        if (viewport instanceof BaseVolumeViewport) {\n            const volumeId = targetId.split('volumeId:')[1];\n            const volume = cache.getVolume(volumeId);\n            return volume.scaling?.PET !== undefined;\n        }\n        else if (viewport instanceof StackViewport) {\n            const scalingModule = imageId && metaData.get('scalingModule', imageId);\n            return typeof scalingModule?.suvbw === 'number';\n        }\n        else {\n            throw new Error('Viewport is not a valid type');\n        }\n    }\n    _imagePointNearToolOrHandle(element, annotation, canvasCoords, proximity) {\n        const handleNearImagePoint = this.getHandleNearImagePoint(element, annotation, canvasCoords, proximity);\n        if (handleNearImagePoint) {\n            return true;\n        }\n        const toolNewImagePoint = this.isPointNearTool(element, annotation, canvasCoords, proximity, 'mouse');\n        if (toolNewImagePoint) {\n            return true;\n        }\n    }\n}\nAnnotationTool.toolName = 'AnnotationTool';\nexport default AnnotationTool;\n//# sourceMappingURL=AnnotationTool.js.map","import { getEnabledElementByIds, utilities as csUtils, } from '@cornerstonejs/core';\nimport Representations from '../../enums/SegmentationRepresentations';\nimport { config as segmentationConfig } from '../../stateManagement/segmentation';\nimport { setSegmentationVisibility } from '../../stateManagement/segmentation/config/segmentationVisibility';\nimport { getSegmentationRepresentations } from '../../stateManagement/segmentation/segmentationState';\nimport { getToolGroup } from '../../store/ToolGroupManager';\nimport { BaseTool } from '../base';\nimport { contourDisplay } from './Contour';\nimport { labelmapDisplay } from './Labelmap';\nclass SegmentationDisplayTool extends BaseTool {\n    constructor(toolProps = {}, defaultToolProps = {\n        configuration: {},\n    }) {\n        super(toolProps, defaultToolProps);\n        this.renderSegmentation = (toolGroupId) => {\n            const toolGroup = getToolGroup(toolGroupId);\n            if (!toolGroup) {\n                return;\n            }\n            const toolGroupSegmentationRepresentations = getSegmentationRepresentations(toolGroupId);\n            if (!toolGroupSegmentationRepresentations ||\n                toolGroupSegmentationRepresentations.length === 0) {\n                return;\n            }\n            const toolGroupViewports = toolGroup.viewportsInfo.map(({ renderingEngineId, viewportId }) => {\n                const enabledElement = getEnabledElementByIds(viewportId, renderingEngineId);\n                if (enabledElement) {\n                    return enabledElement.viewport;\n                }\n            });\n            const segmentationRenderList = toolGroupSegmentationRepresentations.map((representation) => {\n                const config = this._getMergedRepresentationsConfig(toolGroupId);\n                const viewportsRenderList = [];\n                for (const viewport of toolGroupViewports) {\n                    if (representation.type == Representations.Labelmap) {\n                        viewportsRenderList.push(labelmapDisplay.render(viewport, representation, config));\n                    }\n                    else if (representation.type == Representations.Contour) {\n                        viewportsRenderList.push(contourDisplay.render(viewport, representation, config));\n                    }\n                }\n                return viewportsRenderList;\n            });\n            Promise.allSettled(segmentationRenderList).then(() => {\n                toolGroupViewports.forEach((viewport) => {\n                    viewport.render();\n                });\n            });\n        };\n    }\n    onSetToolEnabled() {\n        const toolGroupId = this.toolGroupId;\n        const toolGroupSegmentationRepresentations = getSegmentationRepresentations(toolGroupId);\n        if (!toolGroupSegmentationRepresentations ||\n            toolGroupSegmentationRepresentations.length === 0) {\n            return;\n        }\n        toolGroupSegmentationRepresentations.forEach((segmentationRepresentation) => {\n            setSegmentationVisibility(toolGroupId, segmentationRepresentation.segmentationRepresentationUID, true);\n        });\n    }\n    onSetToolDisabled() {\n        const toolGroupId = this.toolGroupId;\n        const toolGroupSegmentationRepresentations = getSegmentationRepresentations(toolGroupId);\n        if (!toolGroupSegmentationRepresentations ||\n            toolGroupSegmentationRepresentations.length === 0) {\n            return;\n        }\n        toolGroupSegmentationRepresentations.forEach((segmentationRepresentation) => {\n            setSegmentationVisibility(toolGroupId, segmentationRepresentation.segmentationRepresentationUID, false);\n        });\n    }\n    _getMergedRepresentationsConfig(toolGroupId) {\n        const toolGroupConfig = segmentationConfig.getToolGroupSpecificConfig(toolGroupId);\n        const globalConfig = segmentationConfig.getGlobalConfig();\n        const mergedConfig = csUtils.deepMerge(globalConfig, toolGroupConfig);\n        return mergedConfig;\n    }\n}\nSegmentationDisplayTool.toolName = 'SegmentationDisplay';\nexport default SegmentationDisplayTool;\n//# sourceMappingURL=SegmentationDisplayTool.js.map","import { triggerEvent, eventTarget, getRenderingEngine, Enums, } from '@cornerstonejs/core';\nimport { Events as csToolsEvents } from '../../enums';\nimport { getToolGroup, getToolGroupForViewport, } from '../../store/ToolGroupManager';\nimport SegmentationDisplayTool from '../../tools/displayTools/SegmentationDisplayTool';\nclass SegmentationRenderingEngine {\n    constructor() {\n        this._needsRender = new Set();\n        this._animationFrameSet = false;\n        this._animationFrameHandle = null;\n        this._renderFlaggedToolGroups = () => {\n            this._throwIfDestroyed();\n            const toolGroupIds = Array.from(this._needsRender.values());\n            for (const toolGroupId of toolGroupIds) {\n                this._triggerRender(toolGroupId);\n                this._needsRender.delete(toolGroupId);\n                if (this._needsRender.size === 0) {\n                    this._animationFrameSet = false;\n                    this._animationFrameHandle = null;\n                    return;\n                }\n            }\n        };\n    }\n    removeToolGroup(toolGroupId) {\n        this._needsRender.delete(toolGroupId);\n        if (this._needsRender.size === 0) {\n            this._reset();\n        }\n    }\n    renderToolGroupSegmentations(toolGroupId) {\n        this._setToolGroupSegmentationToBeRenderedNextFrame([toolGroupId]);\n    }\n    _throwIfDestroyed() {\n        if (this.hasBeenDestroyed) {\n            throw new Error('this.destroy() has been manually called to free up memory, can not longer use this instance. Instead make a new one.');\n        }\n    }\n    _setToolGroupSegmentationToBeRenderedNextFrame(toolGroupIds) {\n        toolGroupIds.forEach((toolGroupId) => {\n            this._needsRender.add(toolGroupId);\n        });\n        this._render();\n    }\n    _render() {\n        if (this._needsRender.size > 0 && this._animationFrameSet === false) {\n            this._animationFrameHandle = window.requestAnimationFrame(this._renderFlaggedToolGroups);\n            this._animationFrameSet = true;\n        }\n    }\n    _triggerRender(toolGroupId) {\n        const toolGroup = getToolGroup(toolGroupId);\n        if (!toolGroup) {\n            console.warn(`No tool group found with toolGroupId: ${toolGroupId}`);\n            return;\n        }\n        const { viewportsInfo } = toolGroup;\n        const viewports = [];\n        viewportsInfo.forEach(({ viewportId, renderingEngineId }) => {\n            const renderingEngine = getRenderingEngine(renderingEngineId);\n            if (!renderingEngine) {\n                console.warn('rendering Engine has been destroyed');\n                return;\n            }\n            viewports.push(renderingEngine.getViewport(viewportId));\n        });\n        const segmentationDisplayToolInstance = toolGroup.getToolInstance(SegmentationDisplayTool.toolName);\n        if (!segmentationDisplayToolInstance) {\n            console.warn('No segmentation tool found inside', toolGroupId);\n            return;\n        }\n        function onSegmentationRender(evt) {\n            const { element, viewportId, renderingEngineId } = evt.detail;\n            element.removeEventListener(Enums.Events.IMAGE_RENDERED, onSegmentationRender);\n            const toolGroup = getToolGroupForViewport(viewportId, renderingEngineId);\n            if (!toolGroup) {\n                console.warn('toolGroup has been destroyed');\n                return;\n            }\n            const eventDetail = {\n                toolGroupId: toolGroup.id,\n                viewportId,\n            };\n            triggerEvent(eventTarget, csToolsEvents.SEGMENTATION_RENDERED, {\n                ...eventDetail,\n            });\n        }\n        viewports.forEach(({ element }) => {\n            element.addEventListener(Enums.Events.IMAGE_RENDERED, onSegmentationRender);\n        });\n        segmentationDisplayToolInstance.renderSegmentation(toolGroupId);\n    }\n    _reset() {\n        window.cancelAnimationFrame(this._animationFrameHandle);\n        this._needsRender.clear();\n        this._animationFrameSet = false;\n        this._animationFrameHandle = null;\n    }\n}\nconst segmentationRenderingEngine = new SegmentationRenderingEngine();\nfunction triggerSegmentationRender(toolGroupId) {\n    segmentationRenderingEngine.renderToolGroupSegmentations(toolGroupId);\n}\nexport { segmentationRenderingEngine, triggerSegmentationRender };\nexport default triggerSegmentationRender;\n//# sourceMappingURL=triggerSegmentationRender.js.map","import triggerSegmentationRender from '../../utilities/segmentation/triggerSegmentationRender';\nconst segmentationRepresentationModifiedListener = function (evt) {\n    const { toolGroupId } = evt.detail;\n    triggerSegmentationRender(toolGroupId);\n};\nexport default segmentationRepresentationModifiedListener;\n//# sourceMappingURL=segmentationRepresentationModifiedEventListener.js.map","import { cache } from '@cornerstonejs/core';\nimport triggerSegmentationRender from '../../utilities/segmentation/triggerSegmentationRender';\nimport SegmentationRepresentations from '../../enums/SegmentationRepresentations';\nimport * as SegmentationState from '../../stateManagement/segmentation/segmentationState';\nconst onSegmentationDataModified = function (evt) {\n    const { segmentationId, modifiedSlicesToUse } = evt.detail;\n    const { representationData, type } = SegmentationState.getSegmentation(segmentationId);\n    let toolGroupIds;\n    if (type === SegmentationRepresentations.Labelmap) {\n        const segmentationVolume = cache.getVolume(representationData[type].volumeId);\n        if (!segmentationVolume) {\n            console.warn('segmentation not found in cache');\n            return;\n        }\n        const { imageData, vtkOpenGLTexture } = segmentationVolume;\n        let slicesToUpdate;\n        if (modifiedSlicesToUse && Array.isArray(modifiedSlicesToUse)) {\n            slicesToUpdate = modifiedSlicesToUse;\n        }\n        else {\n            const numSlices = imageData.getDimensions()[2];\n            slicesToUpdate = [...Array(numSlices).keys()];\n        }\n        slicesToUpdate.forEach((i) => {\n            vtkOpenGLTexture.setUpdatedFrame(i);\n        });\n        imageData.modified();\n        toolGroupIds =\n            SegmentationState.getToolGroupIdsWithSegmentation(segmentationId);\n    }\n    else {\n        throw new Error(`onSegmentationDataModified: representationType ${type} not supported yet`);\n    }\n    toolGroupIds.forEach((toolGroupId) => {\n        triggerSegmentationRender(toolGroupId);\n    });\n};\nexport default onSegmentationDataModified;\n//# sourceMappingURL=segmentationDataModifiedEventListener.js.map","import triggerSegmentationRender from '../../utilities/segmentation/triggerSegmentationRender';\nconst segmentationRepresentationRemovedEventListener = function (evt) {\n    const { toolGroupId, segmentationRepresentationUID } = evt.detail;\n    triggerSegmentationRender(toolGroupId);\n};\nexport default segmentationRepresentationRemovedEventListener;\n//# sourceMappingURL=segmentationRepresentationRemovedEventListener.js.map","import { getToolGroupIdsWithSegmentation, getSegmentationRepresentations, } from '../../stateManagement/segmentation/segmentationState';\nimport { triggerSegmentationRepresentationModified } from '../../stateManagement/segmentation/triggerSegmentationEvents';\nconst segmentationModifiedListener = function (evt) {\n    const { segmentationId } = evt.detail;\n    const toolGroupIds = getToolGroupIdsWithSegmentation(segmentationId);\n    toolGroupIds.forEach((toolGroupId) => {\n        const segRepresentations = getSegmentationRepresentations(toolGroupId);\n        segRepresentations.forEach((representation) => {\n            if (representation.segmentationId === segmentationId) {\n                triggerSegmentationRepresentationModified(toolGroupId, representation.segmentationRepresentationUID);\n            }\n        });\n    });\n};\nexport default segmentationModifiedListener;\n//# sourceMappingURL=segmentationModifiedEventListener.js.map","import { getEnabledElement } from '@cornerstonejs/core';\nimport { getAnnotations } from '../stateManagement/annotation/annotationState';\nimport * as ToolGroupManager from '../store/ToolGroupManager';\nfunction getAnnotationNearPoint(element, canvasPoint, proximity = 5) {\n    const enabledElement = getEnabledElement(element);\n    if (!enabledElement) {\n        throw new Error('getAnnotationNearPoint: enabledElement not found');\n    }\n    return getAnnotationNearPointOnEnabledElement(enabledElement, canvasPoint, proximity);\n}\nfunction getAnnotationNearPointOnEnabledElement(enabledElement, point, proximity) {\n    const { renderingEngineId, viewportId } = enabledElement;\n    const toolGroup = ToolGroupManager.getToolGroupForViewport(viewportId, renderingEngineId);\n    if (!toolGroup) {\n        return null;\n    }\n    const { _toolInstances: tools } = toolGroup;\n    for (const name in tools) {\n        const found = findAnnotationNearPointByTool(tools[name], enabledElement, point, proximity);\n        if (found) {\n            return found;\n        }\n    }\n    return null;\n}\nfunction findAnnotationNearPointByTool(tool, enabledElement, point, proximity) {\n    const { viewport } = enabledElement;\n    const annotations = getAnnotations(tool.constructor.toolName, viewport?.element);\n    const currentId = viewport?.getCurrentImageId?.();\n    if (annotations?.length) {\n        const { element } = enabledElement.viewport;\n        for (const annotation of annotations) {\n            const referencedImageId = annotation.metadata?.referencedImageId;\n            if ((currentId && referencedImageId && currentId !== referencedImageId) ||\n                !tool.isPointNearTool) {\n                continue;\n            }\n            if (tool.isPointNearTool(element, annotation, point, proximity, '') ||\n                tool.getHandleNearImagePoint(element, annotation, point, proximity)) {\n                return annotation;\n            }\n        }\n    }\n    return null;\n}\nexport { getAnnotationNearPoint, getAnnotationNearPointOnEnabledElement };\n//# sourceMappingURL=getAnnotationNearPoint.js.map","function isObject(value) {\n    const type = typeof value;\n    return value !== null && (type === 'object' || type === 'function');\n}\nexport default isObject;\n//# sourceMappingURL=isObject.js.map","import isObject from './isObject';\nfunction debounce(func, wait, options) {\n    let lastArgs, lastThis, maxWait, result, timerId, lastCallTime;\n    let lastInvokeTime = 0;\n    let leading = false;\n    let maxing = false;\n    let trailing = true;\n    const useRAF = !wait && wait !== 0 && typeof window.requestAnimationFrame === 'function';\n    if (typeof func !== 'function') {\n        throw new TypeError('Expected a function');\n    }\n    wait = Number(wait) || 0;\n    if (isObject(options)) {\n        leading = Boolean(options.leading);\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? Math.max(Number(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? Boolean(options.trailing) : trailing;\n    }\n    function invokeFunc(time) {\n        const args = lastArgs;\n        const thisArg = lastThis;\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n    }\n    function startTimer(pendingFunc, wait) {\n        if (useRAF) {\n            return window.requestAnimationFrame(pendingFunc);\n        }\n        return setTimeout(pendingFunc, wait);\n    }\n    function cancelTimer(id) {\n        if (useRAF) {\n            return window.cancelAnimationFrame(id);\n        }\n        clearTimeout(id);\n    }\n    function leadingEdge(time) {\n        lastInvokeTime = time;\n        timerId = startTimer(timerExpired, wait);\n        return leading ? invokeFunc(time) : result;\n    }\n    function remainingWait(time) {\n        const timeSinceLastCall = time - lastCallTime;\n        const timeSinceLastInvoke = time - lastInvokeTime;\n        const timeWaiting = wait - timeSinceLastCall;\n        return maxing\n            ? Math.min(timeWaiting, maxWait - timeSinceLastInvoke)\n            : timeWaiting;\n    }\n    function shouldInvoke(time) {\n        const timeSinceLastCall = time - lastCallTime;\n        const timeSinceLastInvoke = time - lastInvokeTime;\n        return (lastCallTime === undefined ||\n            timeSinceLastCall >= wait ||\n            timeSinceLastCall < 0 ||\n            (maxing && timeSinceLastInvoke >= maxWait));\n    }\n    function timerExpired() {\n        const time = Date.now();\n        if (shouldInvoke(time)) {\n            return trailingEdge(time);\n        }\n        timerId = startTimer(timerExpired, remainingWait(time));\n    }\n    function trailingEdge(time) {\n        timerId = undefined;\n        if (trailing && lastArgs) {\n            return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n    }\n    function cancel() {\n        if (timerId !== undefined) {\n            cancelTimer(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n    }\n    function flush() {\n        return timerId === undefined ? result : trailingEdge(Date.now());\n    }\n    function pending() {\n        return timerId !== undefined;\n    }\n    function debounced(...args) {\n        const time = Date.now();\n        const isInvoking = shouldInvoke(time);\n        lastArgs = args;\n        lastThis = this;\n        lastCallTime = time;\n        if (isInvoking) {\n            if (timerId === undefined) {\n                return leadingEdge(lastCallTime);\n            }\n            if (maxing) {\n                timerId = startTimer(timerExpired, wait);\n                return invokeFunc(lastCallTime);\n            }\n        }\n        if (timerId === undefined) {\n            timerId = startTimer(timerExpired, wait);\n        }\n        return result;\n    }\n    debounced.cancel = cancel;\n    debounced.flush = flush;\n    debounced.pending = pending;\n    return debounced;\n}\nexport default debounce;\n//# sourceMappingURL=debounce.js.map","import debounce from './debounce';\nimport isObject from './isObject';\nfunction throttle(func, wait, options) {\n    let leading = true;\n    let trailing = true;\n    if (typeof func !== 'function') {\n        throw new TypeError('Expected a function');\n    }\n    if (isObject(options)) {\n        leading = 'leading' in options ? Boolean(options.leading) : leading;\n        trailing = 'trailing' in options ? Boolean(options.trailing) : trailing;\n    }\n    return debounce(func, wait, {\n        leading,\n        trailing,\n        maxWait: wait,\n    });\n}\nexport default throttle;\n//# sourceMappingURL=throttle.js.map","export function clip(val, low, high) {\n    return Math.min(Math.max(low, val), high);\n}\nexport function clipToBox(point, box) {\n    point.x = clip(point.x, 0, box.width);\n    point.y = clip(point.y, 0, box.height);\n}\nexport default clip;\n//# sourceMappingURL=clip.js.map","import { utilities } from '@cornerstonejs/core';\nconst { calibratedPixelSpacingMetadataProvider } = utilities;\nexport default function calibrateImageSpacing(imageId, renderingEngine, rowPixelSpacing, columnPixelSpacing) {\n    if (!columnPixelSpacing) {\n        columnPixelSpacing = rowPixelSpacing;\n    }\n    calibratedPixelSpacingMetadataProvider.add(imageId, {\n        rowPixelSpacing,\n        columnPixelSpacing,\n    });\n    const viewports = renderingEngine.getStackViewports();\n    viewports.forEach((viewport) => {\n        const imageIds = viewport.getImageIds();\n        if (imageIds.includes(imageId)) {\n            viewport.calibrateSpacing(imageId);\n        }\n    });\n}\n//# sourceMappingURL=calibrateImageSpacing.js.map","import triggerAnnotationRender from './triggerAnnotationRender';\nexport function triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender) {\n    if (!viewportIdsToRender.length) {\n        return;\n    }\n    viewportIdsToRender.forEach((viewportId) => {\n        const { element } = renderingEngine.getViewport(viewportId);\n        triggerAnnotationRender(element);\n    });\n}\nexport default triggerAnnotationRenderForViewportIds;\n//# sourceMappingURL=triggerAnnotationRenderForViewportIds.js.map","import { StackViewport, VolumeViewport, eventTarget, EVENTS, utilities as csUtils, getEnabledElement, } from '@cornerstonejs/core';\nexport default function scroll(viewport, options) {\n    const enabledElement = getEnabledElement(viewport.element);\n    if (!enabledElement) {\n        throw new Error('Scroll::Viewport is not enabled (it might be disabled)');\n    }\n    if (viewport instanceof StackViewport &&\n        viewport.getImageIds().length === 0) {\n        throw new Error('Scroll::Stack Viewport has no images');\n    }\n    const { type: viewportType } = viewport;\n    const { volumeId, delta } = options;\n    if (viewport instanceof StackViewport) {\n        viewport.scroll(delta, options.debounceLoading, options.loop);\n    }\n    else if (viewport instanceof VolumeViewport) {\n        scrollVolume(viewport, volumeId, delta);\n    }\n    else {\n        throw new Error(`Not implemented for Viewport Type: ${viewportType}`);\n    }\n}\nexport function scrollVolume(viewport, volumeId, delta) {\n    const { numScrollSteps, currentStepIndex, sliceRangeInfo } = csUtils.getVolumeViewportScrollInfo(viewport, volumeId);\n    if (!sliceRangeInfo) {\n        return;\n    }\n    const { sliceRange, spacingInNormalDirection, camera } = sliceRangeInfo;\n    const { focalPoint, viewPlaneNormal, position } = camera;\n    const { newFocalPoint, newPosition } = csUtils.snapFocalPointToSlice(focalPoint, position, sliceRange, viewPlaneNormal, spacingInNormalDirection, delta);\n    viewport.setCamera({\n        focalPoint: newFocalPoint,\n        position: newPosition,\n    });\n    viewport.render();\n    const desiredStepIndex = currentStepIndex + delta;\n    if ((desiredStepIndex > numScrollSteps || desiredStepIndex < 0) &&\n        viewport.getCurrentImageId()) {\n        const VolumeScrollEventDetail = {\n            volumeId,\n            viewport,\n            delta,\n            desiredStepIndex,\n            currentStepIndex,\n            numScrollSteps,\n            currentImageId: viewport.getCurrentImageId(),\n        };\n        csUtils.triggerEvent(eventTarget, EVENTS.VOLUME_SCROLL_OUT_OF_BOUNDS, VolumeScrollEventDetail);\n    }\n}\n//# sourceMappingURL=scroll.js.map","import { getEnabledElement, StackViewport, VolumeViewport, utilities as csUtils, } from '@cornerstonejs/core';\nimport clip from '../clip';\nimport scroll from '../scroll';\nasync function jumpToSlice(element, options = {}) {\n    const { imageIndex, debounceLoading, volumeId } = options;\n    const enabledElement = getEnabledElement(element);\n    if (!enabledElement) {\n        throw new Error('Element has been disabled');\n    }\n    const { viewport } = enabledElement;\n    const { imageIndex: currentImageIndex, numberOfSlices } = _getImageSliceData(viewport, debounceLoading);\n    const imageIndexToJump = _getImageIndexToJump(numberOfSlices, imageIndex);\n    const delta = imageIndexToJump - currentImageIndex;\n    scroll(viewport, { delta, debounceLoading, volumeId });\n}\nfunction _getImageSliceData(viewport, debounceLoading) {\n    if (viewport instanceof StackViewport) {\n        return {\n            numberOfSlices: viewport.getImageIds().length,\n            imageIndex: debounceLoading\n                ? viewport.getTargetImageIdIndex()\n                : viewport.getCurrentImageIdIndex(),\n        };\n    }\n    else if (viewport instanceof VolumeViewport) {\n        return csUtils.getImageSliceDataForVolumeViewport(viewport);\n    }\n    else {\n        throw new Error('Unsupported viewport type');\n    }\n}\nfunction _getImageIndexToJump(numberOfSlices, imageIndex) {\n    const lastSliceIndex = numberOfSlices - 1;\n    return clip(imageIndex, 0, lastSliceIndex);\n}\nexport default jumpToSlice;\n//# sourceMappingURL=jumpToSlice.js.map","import { vec3 } from 'gl-matrix';\nexport default function pointInShapeCallback(imageData, pointInShapeFn, callback, boundsIJK) {\n    let iMin, iMax, jMin, jMax, kMin, kMax;\n    let scalarData;\n    if (imageData.getScalarData) {\n        scalarData = imageData.getScalarData();\n    }\n    else {\n        scalarData = imageData\n            .getPointData()\n            .getScalars()\n            .getData();\n    }\n    const dimensions = imageData.getDimensions();\n    if (!boundsIJK) {\n        iMin = 0;\n        iMax = dimensions[0];\n        jMin = 0;\n        jMax = dimensions[1];\n        kMin = 0;\n        kMax = dimensions[2];\n    }\n    else {\n        [[iMin, iMax], [jMin, jMax], [kMin, kMax]] = boundsIJK;\n    }\n    const start = vec3.fromValues(iMin, jMin, kMin);\n    const direction = imageData.getDirection();\n    const rowCosines = direction.slice(0, 3);\n    const columnCosines = direction.slice(3, 6);\n    const scanAxisNormal = direction.slice(6, 9);\n    const spacing = imageData.getSpacing();\n    const [rowSpacing, columnSpacing, scanAxisSpacing] = spacing;\n    const worldPosStart = imageData.indexToWorld(start);\n    const rowStep = vec3.fromValues(rowCosines[0] * rowSpacing, rowCosines[1] * rowSpacing, rowCosines[2] * rowSpacing);\n    const columnStep = vec3.fromValues(columnCosines[0] * columnSpacing, columnCosines[1] * columnSpacing, columnCosines[2] * columnSpacing);\n    const scanAxisStep = vec3.fromValues(scanAxisNormal[0] * scanAxisSpacing, scanAxisNormal[1] * scanAxisSpacing, scanAxisNormal[2] * scanAxisSpacing);\n    const yMultiple = dimensions[0];\n    const zMultiple = dimensions[0] * dimensions[1];\n    for (let k = kMin; k <= kMax; k++) {\n        for (let j = jMin; j <= jMax; j++) {\n            for (let i = iMin; i <= iMax; i++) {\n                const pointIJK = [i, j, k];\n                const dI = i - iMin;\n                const dJ = j - jMin;\n                const dK = k - kMin;\n                const startWorld = worldPosStart;\n                const pointLPS = [\n                    startWorld[0] +\n                        dI * rowStep[0] +\n                        dJ * columnStep[0] +\n                        dK * scanAxisStep[0],\n                    startWorld[1] +\n                        dI * rowStep[1] +\n                        dJ * columnStep[1] +\n                        dK * scanAxisStep[1],\n                    startWorld[2] +\n                        dI * rowStep[2] +\n                        dJ * columnStep[2] +\n                        dK * scanAxisStep[2],\n                ];\n                if (pointInShapeFn(pointLPS, pointIJK)) {\n                    const index = k * zMultiple + j * yMultiple + i;\n                    const value = scalarData[index];\n                    callback({ value, index, pointIJK, pointLPS });\n                }\n            }\n        }\n    }\n}\n//# sourceMappingURL=pointInShapeCallback.js.map","function extend2DBoundingBoxInViewAxis(boundsIJK, numSlicesToProject) {\n    const sliceNormalIndex = boundsIJK.findIndex(([min, max]) => min === max);\n    if (sliceNormalIndex === -1) {\n        throw new Error('3D bounding boxes not supported in an oblique plane');\n    }\n    boundsIJK[sliceNormalIndex][0] -= numSlicesToProject;\n    boundsIJK[sliceNormalIndex][1] += numSlicesToProject;\n    return boundsIJK;\n}\nexport default extend2DBoundingBoxInViewAxis;\n//# sourceMappingURL=extend2DBoundingBoxInViewAxis.js.map","function getBoundingBoxAroundShape(points, dimensions) {\n    let xMin = Infinity;\n    let xMax = 0;\n    let yMin = Infinity;\n    let yMax = 0;\n    let zMin = Infinity;\n    let zMax = 0;\n    points.forEach((p) => {\n        xMin = Math.min(p[0], xMin);\n        xMax = Math.max(p[0], xMax);\n        yMin = Math.min(p[1], yMin);\n        yMax = Math.max(p[1], yMax);\n        zMin = Math.min(p[2], zMin);\n        zMax = Math.max(p[2], zMax);\n    });\n    xMin = Math.floor(xMin);\n    xMax = Math.floor(xMax);\n    yMin = Math.floor(yMin);\n    yMax = Math.floor(yMax);\n    zMin = Math.floor(zMin);\n    zMax = Math.floor(zMax);\n    if (dimensions) {\n        const [width, height, depth] = dimensions;\n        xMin = Math.max(0, xMin);\n        xMax = Math.min(width - 1, xMax);\n        yMin = Math.max(0, yMin);\n        yMax = Math.min(height - 1, yMax);\n        zMin = Math.max(0, zMin);\n        zMax = Math.min(depth - 1, zMax);\n    }\n    return [\n        [xMin, xMax],\n        [yMin, yMax],\n        [zMin, zMax],\n    ];\n}\nexport default getBoundingBoxAroundShape;\n//# sourceMappingURL=getBoundingBoxAroundShape.js.map","import { utilities as csUtils } from '@cornerstonejs/core';\nimport { vec3 } from 'gl-matrix';\nimport { pointInSphere } from './math/sphere';\nimport pointInShapeCallback from './pointInShapeCallback';\nimport { getBoundingBoxAroundShape } from './boundingBox';\nconst { transformWorldToIndex } = csUtils;\nexport default function pointInSurroundingSphereCallback(imageData, circlePoints, callback, viewport) {\n    const { boundsIJK, centerWorld, radiusWorld } = _getBounds(circlePoints, imageData, viewport);\n    const sphereObj = {\n        center: centerWorld,\n        radius: radiusWorld,\n    };\n    pointInShapeCallback(imageData, (pointLPS) => pointInSphere(sphereObj, pointLPS), callback, boundsIJK);\n}\nfunction _getBounds(circlePoints, imageData, viewport) {\n    const [bottom, top] = circlePoints;\n    const centerWorld = vec3.fromValues((bottom[0] + top[0]) / 2, (bottom[1] + top[1]) / 2, (bottom[2] + top[2]) / 2);\n    const radiusWorld = vec3.distance(bottom, top) / 2;\n    let boundsIJK;\n    if (!viewport) {\n        const centerIJK = transformWorldToIndex(imageData, centerWorld);\n        const spacings = imageData.getSpacing();\n        const minSpacing = Math.min(...spacings);\n        const maxRadiusIJK = Math.ceil(radiusWorld / minSpacing);\n        boundsIJK = [\n            [centerIJK[0] - maxRadiusIJK, centerIJK[0] + maxRadiusIJK],\n            [centerIJK[1] - maxRadiusIJK, centerIJK[1] + maxRadiusIJK],\n            [centerIJK[2] - maxRadiusIJK, centerIJK[2] + maxRadiusIJK],\n        ];\n        return {\n            boundsIJK,\n            centerWorld: centerWorld,\n            radiusWorld,\n        };\n    }\n    boundsIJK = _computeBoundsIJKWithCamera(imageData, viewport, circlePoints, centerWorld, radiusWorld);\n    return {\n        boundsIJK,\n        centerWorld: centerWorld,\n        radiusWorld,\n    };\n}\nfunction _computeBoundsIJKWithCamera(imageData, viewport, circlePoints, centerWorld, radiusWorld) {\n    const [bottom, top] = circlePoints;\n    const dimensions = imageData.getDimensions();\n    const camera = viewport.getCamera();\n    const viewUp = vec3.fromValues(camera.viewUp[0], camera.viewUp[1], camera.viewUp[2]);\n    const viewPlaneNormal = vec3.fromValues(camera.viewPlaneNormal[0], camera.viewPlaneNormal[1], camera.viewPlaneNormal[2]);\n    const viewRight = vec3.create();\n    vec3.cross(viewRight, viewUp, viewPlaneNormal);\n    const topLeftWorld = vec3.create();\n    const bottomRightWorld = vec3.create();\n    vec3.scaleAndAdd(topLeftWorld, top, viewPlaneNormal, radiusWorld);\n    vec3.scaleAndAdd(bottomRightWorld, bottom, viewPlaneNormal, -radiusWorld);\n    vec3.scaleAndAdd(topLeftWorld, topLeftWorld, viewRight, -radiusWorld);\n    vec3.scaleAndAdd(bottomRightWorld, bottomRightWorld, viewRight, radiusWorld);\n    const sphereCornersIJK = [\n        transformWorldToIndex(imageData, topLeftWorld),\n        (transformWorldToIndex(imageData, bottomRightWorld)),\n    ];\n    const boundsIJK = getBoundingBoxAroundShape(sphereCornersIJK, dimensions);\n    return boundsIJK;\n}\n//# sourceMappingURL=pointInSurroundingSphereCallback.js.map","export default function pointInSphere(sphere, pointLPS) {\n    const { center, radius } = sphere;\n    return ((pointLPS[0] - center[0]) ** 2 +\n        (pointLPS[1] - center[1]) ** 2 +\n        (pointLPS[2] - center[2]) ** 2 <=\n        radius ** 2);\n}\n//# sourceMappingURL=pointInSphere.js.map","import { triggerSegmentationDataModified } from '../../../stateManagement/segmentation/triggerSegmentationEvents';\nimport { pointInSurroundingSphereCallback } from '../../../utilities';\nfunction fillSphere(enabledElement, operationData, _inside = true) {\n    const { viewport } = enabledElement;\n    const { volume: segmentation, segmentsLocked, segmentIndex, segmentationId, points, } = operationData;\n    const { imageData, dimensions } = segmentation;\n    const scalarData = segmentation.getScalarData();\n    const scalarIndex = [];\n    const callback = ({ index, value }) => {\n        if (segmentsLocked.includes(value)) {\n            return;\n        }\n        scalarData[index] = segmentIndex;\n        scalarIndex.push(index);\n    };\n    pointInSurroundingSphereCallback(imageData, [points[0], points[1]], callback, viewport);\n    const zMultiple = dimensions[0] * dimensions[1];\n    const minSlice = Math.floor(scalarIndex[0] / zMultiple);\n    const maxSlice = Math.floor(scalarIndex[scalarIndex.length - 1] / zMultiple);\n    const sliceArray = Array.from({ length: maxSlice - minSlice + 1 }, (v, k) => k + minSlice);\n    triggerSegmentationDataModified(segmentationId, sliceArray);\n}\nexport function fillInsideSphere(enabledElement, operationData) {\n    fillSphere(enabledElement, operationData, true);\n}\nexport function fillOutsideSphere(enabledElement, operationData) {\n    fillSphere(enabledElement, operationData, false);\n}\n//# sourceMappingURL=fillSphere.js.map","import { fillInsideSphere } from './fillSphere';\nexport function eraseInsideSphere(enabledElement, operationData) {\n    const eraseOperationData = Object.assign({}, operationData, {\n        segmentIndex: 0,\n    });\n    fillInsideSphere(enabledElement, eraseOperationData);\n}\n//# sourceMappingURL=eraseSphere.js.map","export default function pointInEllipse(ellipse, pointLPS) {\n    const { center: circleCenterWorld, xRadius, yRadius, zRadius } = ellipse;\n    const [x, y, z] = pointLPS;\n    const [x0, y0, z0] = circleCenterWorld;\n    let inside = 0;\n    if (xRadius !== 0) {\n        inside += ((x - x0) * (x - x0)) / (xRadius * xRadius);\n    }\n    if (yRadius !== 0) {\n        inside += ((y - y0) * (y - y0)) / (yRadius * yRadius);\n    }\n    if (zRadius !== 0) {\n        inside += ((z - z0) * (z - z0)) / (zRadius * zRadius);\n    }\n    return inside <= 1;\n}\n//# sourceMappingURL=pointInEllipse.js.map","export default function getCanvasEllipseCorners(ellipseCanvasPoints) {\n    const [bottom, top, left, right] = ellipseCanvasPoints;\n    const topLeft = [left[0], top[1]];\n    const bottomRight = [right[0], bottom[1]];\n    return [topLeft, bottomRight];\n}\n//# sourceMappingURL=getCanvasEllipseCorners.js.map","import { vec3 } from 'gl-matrix';\nimport { utilities as csUtils } from '@cornerstonejs/core';\nimport { getCanvasEllipseCorners, pointInEllipse, } from '../../../utilities/math/ellipse';\nimport { getBoundingBoxAroundShape } from '../../../utilities/boundingBox';\nimport { triggerSegmentationDataModified } from '../../../stateManagement/segmentation/triggerSegmentationEvents';\nimport { pointInShapeCallback } from '../../../utilities';\nconst { transformWorldToIndex } = csUtils;\nfunction fillCircle(enabledElement, operationData, threshold = false) {\n    const { volume: segmentationVolume, imageVolume, points, segmentsLocked, segmentIndex, segmentationId, strategySpecificConfiguration, } = operationData;\n    const { imageData, dimensions } = segmentationVolume;\n    const scalarData = segmentationVolume.getScalarData();\n    const { viewport } = enabledElement;\n    const center = vec3.fromValues(0, 0, 0);\n    points.forEach((point) => {\n        vec3.add(center, center, point);\n    });\n    vec3.scale(center, center, 1 / points.length);\n    const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n    const [topLeftCanvas, bottomRightCanvas] = getCanvasEllipseCorners(canvasCoordinates);\n    const topLeftWorld = viewport.canvasToWorld(topLeftCanvas);\n    const bottomRightWorld = viewport.canvasToWorld(bottomRightCanvas);\n    const ellipsoidCornersIJK = [\n        transformWorldToIndex(imageData, topLeftWorld),\n        transformWorldToIndex(imageData, bottomRightWorld),\n    ];\n    const boundsIJK = getBoundingBoxAroundShape(ellipsoidCornersIJK, dimensions);\n    if (boundsIJK.every(([min, max]) => min !== max)) {\n        throw new Error('Oblique segmentation tools are not supported yet');\n    }\n    const ellipseObj = {\n        center: center,\n        xRadius: Math.abs(topLeftWorld[0] - bottomRightWorld[0]) / 2,\n        yRadius: Math.abs(topLeftWorld[1] - bottomRightWorld[1]) / 2,\n        zRadius: Math.abs(topLeftWorld[2] - bottomRightWorld[2]) / 2,\n    };\n    const modifiedSlicesToUse = new Set();\n    let callback;\n    if (threshold) {\n        callback = ({ value, index, pointIJK }) => {\n            if (segmentsLocked.includes(value)) {\n                return;\n            }\n            if (isWithinThreshold(index, imageVolume, strategySpecificConfiguration)) {\n                scalarData[index] = segmentIndex;\n                modifiedSlicesToUse.add(pointIJK[2]);\n            }\n        };\n    }\n    else {\n        callback = ({ value, index, pointIJK }) => {\n            if (segmentsLocked.includes(value)) {\n                return;\n            }\n            scalarData[index] = segmentIndex;\n            modifiedSlicesToUse.add(pointIJK[2]);\n        };\n    }\n    pointInShapeCallback(imageData, (pointLPS, pointIJK) => pointInEllipse(ellipseObj, pointLPS), callback, boundsIJK);\n    const arrayOfSlices = Array.from(modifiedSlicesToUse);\n    triggerSegmentationDataModified(segmentationId, arrayOfSlices);\n}\nfunction isWithinThreshold(index, imageVolume, strategySpecificConfiguration) {\n    const { THRESHOLD_INSIDE_CIRCLE } = strategySpecificConfiguration;\n    const voxelValue = imageVolume.getScalarData()[index];\n    const { threshold } = THRESHOLD_INSIDE_CIRCLE;\n    return threshold[0] <= voxelValue && voxelValue <= threshold[1];\n}\nexport function fillInsideCircle(enabledElement, operationData) {\n    fillCircle(enabledElement, operationData, false);\n}\nexport function thresholdInsideCircle(enabledElement, operationData) {\n    const { volume, imageVolume } = operationData;\n    if (!csUtils.isEqual(volume.dimensions, imageVolume.dimensions) ||\n        !csUtils.isEqual(volume.direction, imageVolume.direction)) {\n        throw new Error('Only source data the same dimensions/size/orientation as the segmentation currently supported.');\n    }\n    fillCircle(enabledElement, operationData, true);\n}\nexport function fillOutsideCircle(enabledElement, operationData) {\n    throw new Error('Not yet implemented');\n}\n//# sourceMappingURL=fillCircle.js.map","import { fillInsideCircle } from './fillCircle';\nexport function eraseInsideCircle(enabledElement, operationData) {\n    const eraseOperationData = {\n        ...operationData,\n        segmentIndex: 0,\n    };\n    fillInsideCircle(enabledElement, eraseOperationData);\n}\n//# sourceMappingURL=eraseCircle.js.map","const DEFINED_CURSORS = Symbol('DefinedCursors');\nconst STANDARD_CURSORS = new Set([\n    'alias',\n    'all-scroll',\n    'auto',\n    'cell',\n    'col-resize',\n    'context-menu',\n    'copy',\n    'crosshair',\n    'default',\n    'e-resize',\n    'ew-resize',\n    'grab',\n    'grabbing',\n    'help',\n    'move',\n    'ne-resize',\n    'nesw-resize',\n    'no-drop',\n    'none',\n    'not-allowed',\n    'n-resize',\n    'ns-resize',\n    'nw-resize',\n    'nwse-resize',\n    'pointer',\n    'progress',\n    'row-resize',\n    'se-resize',\n    's-resize',\n    'sw-resize',\n    'text',\n    'vertical-text',\n    'wait',\n    'w-resize',\n    'zoom-in',\n    'zoom-out',\n]);\nexport default class MouseCursor {\n    constructor(name, fallback) {\n        this.name = name + '';\n        this.fallback = fallback;\n    }\n    getName() {\n        return this.name + '';\n    }\n    addFallbackStyleProperty(style) {\n        const { fallback } = this;\n        if (fallback instanceof MouseCursor) {\n            return `${style}, ${fallback.getStyleProperty()}`;\n        }\n        return style + '';\n    }\n    getStyleProperty() {\n        return this.addFallbackStyleProperty(this.name) + '';\n    }\n    static getDefinedCursor(name) {\n        const definedCursors = getDefinedCursors(MouseCursor, DEFINED_CURSORS);\n        let mouseCursor = definedCursors.get(name);\n        if (mouseCursor instanceof MouseCursor) {\n            return mouseCursor;\n        }\n        if (STANDARD_CURSORS.has(name)) {\n            mouseCursor = new MouseCursor(name);\n            definedCursors.set(name, mouseCursor);\n            return mouseCursor;\n        }\n    }\n    static setDefinedCursor(name, cursor) {\n        if (cursor instanceof MouseCursor) {\n            const definedCursors = getDefinedCursors(MouseCursor, DEFINED_CURSORS);\n            definedCursors.set(name, cursor);\n            return true;\n        }\n        return false;\n    }\n}\nfunction getDefinedCursors(context, symbol) {\n    let definedCursors = context[symbol];\n    if (!(definedCursors instanceof Map)) {\n        definedCursors = new Map();\n        Object.defineProperty(context, symbol, { value: definedCursors });\n    }\n    return definedCursors;\n}\nconst standardCursorNames = STANDARD_CURSORS.values();\nexport { standardCursorNames };\n//# sourceMappingURL=MouseCursor.js.map","import { utilities } from '@cornerstonejs/core';\nimport MouseCursor from './MouseCursor';\nconst DEFAULT_NAME = 'image-cursor';\nexport default class ImageMouseCursor extends MouseCursor {\n    constructor(url, x, y, name, fallback) {\n        super(name || ImageMouseCursor.getUniqueInstanceName(DEFAULT_NAME), fallback);\n        this.url = url;\n        this.x = Number(x) || 0;\n        this.y = Number(y) || 0;\n    }\n    getStyleProperty() {\n        const { url, x, y } = this;\n        let style = `url('${url}')`;\n        if (x >= 0 && y >= 0 && (x > 0 || y > 0)) {\n            style += ` ${x} ${y}`;\n        }\n        return this.addFallbackStyleProperty(style);\n    }\n    static getUniqueInstanceName(prefix) {\n        return `${prefix}-${utilities.getRuntimeId(ImageMouseCursor)}`;\n    }\n}\n//# sourceMappingURL=ImageMouseCursor.js.map","const BASE = {\n    iconContent: '',\n    iconSize: 16,\n    viewBox: {\n        x: 16,\n        y: 16,\n    },\n    mousePoint: {\n        x: 8,\n        y: 8,\n    },\n    mousePointerGroupString: `\n    <path stroke=\"{{color}}\" d=\"M8 16L8 0\"></path>\n    <path stroke=\"{{color}}\" d=\"M16 8L0 8\"></path>\n  `,\n};\nconst SEGMENTATION_CURSOR_BOUNDARIES = {\n    x: 127,\n    y: 60,\n};\nconst MINUS_RECT = `\n<rect fill=\"{{color}}\" x=\"80.19\" y=\"25.03\" width=\"47.14\" height=\"15.85\"/>\n`;\nconst PLUS_RECT = `\n<rect fill=\"{{color}}\" x=\"80.19\" y=\"25.03\" width=\"47.14\" height=\"15.85\"/>\n<rect fill=\"{{color}}\" x=\"95.84\" y=\"9.38\" width=\"15.85\" height=\"47.14\"/>\n`;\nconst SCISSOR_ICON = `<path fill=\"{{color}}\" d=\"M82.89,10a12.09,12.09,0,0,0-16.8-2.5l-27.5,20.4-8.5-6.3a2.93,2.93,0,0,1-1.1-3,14.66,14.66,0,0,0,.1-6.6,14.08,14.08,0,1,0-6.5,15.2,2.87,2.87,0,0,1,3.2.2l8.2,6.1-8.2,6.1a2.87,2.87,0,0,1-3.2.2,14.16,14.16,0,1,0,6.7,14.4,14,14,0,0,0-.3-5.8,2.93,2.93,0,0,1,1.1-3l8.5-6.3,27.5,20.4A11.91,11.91,0,0,0,82.89,57l-31.7-23.5ZM15.29,21a5.9,5.9,0,1,1,5.9-5.9A5.91,5.91,0,0,1,15.29,21Zm0,36.8a5.9,5.9,0,1,1,5.9-5.9A5.91,5.91,0,0,1,15.29,57.77Zm28.3-21.5a2.8,2.8,0,1,1,2.8-2.8A2.8,2.8,0,0,1,43.59,36.27Z\" transform=\"translate(-1.17 -0.96)\"/>`;\nconst RECTANGLE_ICON = `<path fill=\"{{color}}\" d=\"M8.86,2.25V66.08H72.69V2.25H8.86ZM65.28,58.67h-49v-49h49v49Z\" transform=\"translate(-8.86 -2.25)\"/>`;\nconst CIRCLE_ICON = `<path fill=\"{{color}}\" d=\"M40.77,2.25A31.92,31.92,0,1,0,72.69,34.16,31.92,31.92,0,0,0,40.77,2.25Zm0,57.63A25.71,25.71,0,1,1,66.48,34.16,25.71,25.71,0,0,1,40.77,59.87Z\" transform=\"translate(-8.86 -2.25)\"/>`;\nconst CursorSVG = {\n    Angle: extend(BASE, {\n        iconContent: `<path fill=\"{{color}}\" d=\"M1203 544q0 13-10 23l-393 393 393 393q10 10 10 23t-10 23l-50\n    50q-10 10-23 10t-23-10l-466-466q-10-10-10-23t10-23l466-466q10-10 23-10t23\n    10l50 50q10 10 10 23z\" />`,\n        viewBox: {\n            x: 1792,\n            y: 1792,\n        },\n    }),\n    ArrowAnnotate: extend(BASE, {\n        iconContent: `<g id=\"arrowAnnotate-group\" fill=\"none\" stroke-width=\"1\" stroke=\"{{color}}\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n    <path id=\"arrowAnnotate-arrow\" d=\"M23,7 l-15,15 M7,17 l0,6 6,0\" stroke-width=\"2\" />\n  </g>`,\n        viewBox: {\n            x: 24,\n            y: 24,\n        },\n    }),\n    Bidirectional: extend(BASE, {\n        iconContent: `<g fill=\"{{color}}\" stroke-width=\"3\" stroke=\"{{color}}\">\n    <path d=\"M27.63 3.21L3.12 28.81\"></path>\n    <path d=\"M27.63 15.75L15.27 4.43\"></path>\n    <path d=\"M16.5 4.28C16.5 4.96 15.95 5.51 15.27 5.51C14.59 5.51 14.03 4.96 14.03 4.28C14.03 3.59 14.59 3.04 15.27 3.04C15.95 3.04 16.5 3.59 16.5 4.28Z\" ></path>\n    <path d=\"M28.87 3.19C28.87 3.87 28.31 4.43 27.63 4.43C26.95 4.43 26.4 3.87 26.4 3.19C26.4 2.51 26.95 1.95 27.63 1.95C28.31 1.95 28.87 2.51 28.87 3.19Z\"></path>\n    <path d=\"M28.87 15.75C28.87 16.43 28.31 16.99 27.63 16.99C26.95 16.99 26.4 16.43 26.4 15.75C26.4 15.07 26.95 14.51 27.63 14.51C28.31 14.51 28.87 15.07 28.87 15.75Z\"></path>\n    <path d=\"M4.73 28.44C4.73 29.12 4.17 29.68 3.49 29.68C2.81 29.68 2.25 29.12 2.25 28.44C2.25 27.76 2.81 27.2 3.49 27.2C4.17 27.2 4.73 27.76 4.73 28.44Z\"></path>\n  </g>`,\n        viewBox: {\n            x: 48,\n            y: 48,\n        },\n    }),\n    CobbAngle: extend(BASE, {\n        iconContent: `<g stroke=\"{{color}}\" stroke-width=\"3\">\n    <path d=\"M28.59 2.34L3.82 12.32\"></path>\n    <path d=\"M28.59 29.66L3.82 19.68\"></path>\n    <path stroke-dasharray=\"2\" fill-opacity=\"0\" d=\"M12.37\n      23.06C12.67 22.36 12.85 21.93 12.92 21.76C14.6 17.8 14.68 13.35 13.15\n      9.33C13.11 9.24 13.02 9 12.88 8.63\">\n    </path>\n  </g>`,\n        viewBox: {\n            x: 32,\n            y: 32,\n        },\n    }),\n    CircleROI: extend(BASE, {\n        iconContent: `<circle stroke=\"{{color}}\" fill=\"none\" stroke-width=\"3\" cx=\"16\" cy=\"16\" r=\"14\" />`,\n        viewBox: {\n            x: 32,\n            y: 32,\n        },\n    }),\n    EllipticalROI: extend(BASE, {\n        iconContent: `<path stroke=\"{{color}}\" fill=\"none\" stroke-width=\"3\" d=\"M30.74 15.76C30.74 20.99 24.14 25.23 16\n    25.23C7.86 25.23 1.26 20.99 1.26 15.76C1.26 10.54 7.86 6.3 16 6.3C24.14\n    6.3 30.74 10.54 30.74 15.76Z\" />`,\n        viewBox: {\n            x: 32,\n            y: 32,\n        },\n    }),\n    FreehandROI: extend(BASE, {\n        iconContent: `<g fill=\"{{color}}\" stroke=\"{{color}}\" stroke-width=\"2\">\n    <ellipse ry=\"1\" rx=\"1\" id=\"svg_3\" cy=\"4.240343\" cx=\"14.306499\"/>\n    <line id=\"svg_4\" y2=\"3.58462\" x2=\"12.242186\" y1=\"3.997482\" x1=\"13.432202\"/>\n    <line id=\"svg_5\" y2=\"3.268901\" x2=\"10.857882\" y1=\"3.608906\" x1=\"12.387902\"/>\n    <line id=\"svg_6\" y2=\"3.147471\" x2=\"9.740724\" y1=\"3.293187\" x1=\"10.955026\"/>\n    <line id=\"svg_7\" y2=\"3.147471\" x2=\"8.089274\" y1=\"3.196043\" x1=\"9.983585\"/>\n    <line id=\"svg_8\" y2=\"3.268901\" x2=\"6.874972\" y1=\"3.123185\" x1=\"8.307848\"/>\n    <line id=\"svg_9\" y2=\"3.657478\" x2=\"5.587812\" y1=\"3.220329\" x1=\"7.020688\"/>\n    <line id=\"svg_10\" y2=\"4.046054\" x2=\"4.737801\" y1=\"3.560334\" x1=\"5.854959\"/>\n    <line id=\"svg_11\" y2=\"4.337487\" x2=\"4.300652\" y1=\"3.997482\" x1=\"4.834945\"/>\n    <line id=\"svg_12\" y2=\"4.726063\" x2=\"3.88779\" y1=\"4.191771\" x1=\"4.470655\"/>\n    <line id=\"svg_15\" y2=\"5.3575\" x2=\"3.377783\" y1=\"4.604633\" x1=\"3.960648\"/>\n    <line id=\"svg_16\" y2=\"6.183226\" x2=\"2.916348\" y1=\"5.138926\" x1=\"3.547785\"/>\n    <line id=\"svg_17\" y2=\"6.960379\" x2=\"2.770632\" y1=\"5.867507\" x1=\"3.037779\"/>\n    <line id=\"svg_18\" y2=\"7.713246\" x2=\"2.673488\" y1=\"6.741804\" x1=\"2.819204\"/>\n    <line id=\"svg_19\" y2=\"8.684687\" x2=\"2.697774\" y1=\"7.616102\" x1=\"2.673488\"/>\n    <line id=\"svg_20\" y2=\"9.753273\" x2=\"2.892062\" y1=\"8.611829\" x1=\"2.697774\"/>\n    <line id=\"svg_21\" y2=\"10.724714\" x2=\"3.134923\" y1=\"9.534698\" x1=\"2.84349\"/>\n    <line id=\"svg_23\" y2=\"11.647583\" x2=\"3.596357\" y1=\"10.578998\" x1=\"3.086351\"/>\n    <line id=\"svg_25\" y2=\"12.521881\" x2=\"4.276366\" y1=\"11.501867\" x1=\"3.499213\"/>\n    <line id=\"svg_26\" y2=\"13.930471\" x2=\"5.830673\" y1=\"12.376165\" x1=\"4.13065\"/>\n    <line id=\"svg_28\" y2=\"14.707624\" x2=\"7.263549\" y1=\"13.881899\" x1=\"5.733528\"/>\n    <line id=\"svg_29\" y2=\"15.339061\" x2=\"8.963571\" y1=\"14.61048\" x1=\"7.06926\"/>\n    <line id=\"svg_30\" y2=\"15.581921\" x2=\"10.882168\" y1=\"15.314775\" x1=\"8.817855\"/>\n    <line id=\"svg_31\" y2=\"15.460491\" x2=\"12.023612\" y1=\"15.581921\" x1=\"10.785024\"/>\n    <line id=\"svg_33\" y2=\"15.120487\" x2=\"13.092197\" y1=\"15.484777\" x1=\"11.877895\"/>\n    <line id=\"svg_34\" y2=\"14.586194\" x2=\"13.86935\" y1=\"15.217631\" x1=\"12.897909\"/>\n    <line id=\"svg_35\" y2=\"13.833327\" x2=\"14.597931\" y1=\"14.756196\" x1=\"13.699348\"/>\n    <line id=\"svg_37\" y2=\"12.716169\" x2=\"15.180796\" y1=\"13.881899\" x1=\"14.549359\"/>\n    <line id=\"svg_39\" y2=\"11.429009\" x2=\"15.520801\" y1=\"12.813313\" x1=\"15.15651\"/>\n    <ellipse ry=\"1\" rx=\"1\" id=\"svg_40\" cy=\"10.967574\" cx=\"15.520801\"/>\n  </g>`,\n        viewBox: {\n            x: 18,\n            y: 18,\n        },\n    }),\n    FreehandROISculptor: extend(BASE, {\n        iconContent: `<g id=\"icon-freehand-sculpt\" fill=\"none\" stroke-width=\"1.5\" stroke=\"{{color}}\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n    <line id=\"svg_1\" y2=\"2.559367\" x2=\"10.184807\" y1=\"4.467781\" x1=\"8.81711\"/>\n    <line id=\"svg_4\" y2=\"1.493836\" x2=\"11.727442\" y1=\"2.766112\" x1=\"10.089386\"/>\n    <line id=\"svg_7\" y2=\"1.080346\" x2=\"13.047428\" y1=\"1.748291\" x1=\"11.345759\"/>\n    <line id=\"svg_8\" y2=\"1.000829\" x2=\"14.351511\" y1=\"1.112153\" x1=\"12.77707\"/>\n    <line id=\"svg_9\" y2=\"1.350705\" x2=\"15.242104\" y1=\"0.905408\" x1=\"13.969828\"/>\n    <line id=\"svg_10\" y2=\"2.098167\" x2=\"15.862339\" y1=\"1.14396\" x1=\"14.955842\"/>\n    <line id=\"svg_11\" y2=\"3.195505\" x2=\"16.41896\" y1=\"1.939133\" x1=\"15.766918\"/>\n    <line id=\"svg_12\" y2=\"4.292843\" x2=\"16.530284\" y1=\"2.925147\" x1=\"16.387153\"/>\n    <line id=\"svg_16\" y2=\"5.644637\" x2=\"16.196311\" y1=\"3.831643\" x1=\"16.593898\"/>\n    <line id=\"svg_18\" y2=\"7.266789\" x2=\"15.623787\" y1=\"5.19934\" x1=\"16.275829\"/>\n    <line id=\"svg_19\" y2=\"10.813258\" x2=\"14.526449\" y1=\"6.726071\" x1=\"15.766918\"/>\n    <line id=\"svg_20\" y2=\"5.056209\" x2=\"8.085552\" y1=\"4.181519\" x1=\"8.976145\"/>\n    <line id=\"svg_23\" y2=\"5.326568\" x2=\"7.481221\" y1=\"4.78585\" x1=\"8.403621\"/>\n    <line id=\"svg_24\" y2=\"5.565119\" x2=\"6.749662\" y1=\"5.294761\" x1=\"7.624352\"/>\n    <line id=\"svg_25\" y2=\"5.994512\" x2=\"5.429675\" y1=\"5.533312\" x1=\"6.956407\"/>\n    <line id=\"svg_27\" y2=\"6.551133\" x2=\"4.284627\" y1=\"5.962706\" x1=\"5.572807\"/>\n    <line id=\"svg_28\" y2=\"7.584858\" x2=\"3.044158\" y1=\"6.392099\" x1=\"4.427758\"/>\n    <line id=\"svg_29\" y2=\"8.84123\" x2=\"2.185372\" y1=\"7.489437\" x1=\"3.219096\"/>\n    <line id=\"svg_31\" y2=\"10.606513\" x2=\"1.644654\" y1=\"8.602678\" x1=\"2.280792\"/>\n    <line id=\"svg_32\" y2=\"13.214679\" x2=\"1.48562\" y1=\"10.352058\" x1=\"1.724171\"/>\n    <line id=\"svg_33\" y2=\"14.375631\" x2=\"1.676461\" y1=\"12.992031\" x1=\"1.453813\"/>\n    <line id=\"svg_34\" y2=\"15.298031\" x2=\"2.264889\" y1=\"14.152983\" x1=\"1.517427\"/>\n    <line id=\"svg_35\" y2=\"16.172721\" x2=\"3.521261\" y1=\"14.948155\" x1=\"1.915013\"/>\n    <line id=\"svg_36\" y2=\"16.824762\" x2=\"5.207027\" y1=\"15.997783\" x1=\"3.28271\"/>\n    <line id=\"svg_38\" y2=\"17.063314\" x2=\"7.035924\" y1=\"16.745245\" x1=\"4.968475\"/>\n    <line id=\"svg_39\" y2=\"16.888376\" x2=\"9.278311\" y1=\"17.047411\" x1=\"6.733758\"/>\n    <line id=\"svg_40\" y2=\"16.284045\" x2=\"10.661911\" y1=\"16.983797\" x1=\"8.992048\"/>\n    <line id=\"svg_41\" y2=\"15.313934\" x2=\"11.647925\" y1=\"16.395369\" x1=\"10.455166\"/>\n    <line id=\"svg_44\" y2=\"13.898527\" x2=\"12.82478\" y1=\"15.425259\" x1=\"11.504794\"/>\n    <line id=\"svg_45\" y2=\"12.037824\" x2=\"14.144766\" y1=\"14.312017\" x1=\"12.522614\"/>\n    <line id=\"svg_47\" y2=\"10.59061\" x2=\"14.605966\" y1=\"12.228665\" x1=\"13.953925\"/>\n    <ellipse ry=\"1\" rx=\"1\" id=\"svg_48\" cy=\"3.982726\" cx=\"13.460918\"/>\n  </g>`,\n        viewBox: {\n            x: 18,\n            y: 18,\n        },\n    }),\n    Length: extend(BASE, {\n        iconContent: `<g id=\"length-group\" fill=\"none\" stroke-width=\"1\" stroke=\"{{color}}\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n    <path id=\"length-dashes\" d=\"m22.5,6 -16.5,16.5\" stroke-width=\"3\" stroke-dasharray=\"0.6666,5\" />\n  </g>`,\n        viewBox: {\n            x: 24,\n            y: 24,\n        },\n    }),\n    Probe: extend(BASE, {\n        iconContent: `<path fill=\"{{color}}\" d=\"M1152 896q0 106-75 181t-181 75-181-75-75-181 75-181 181-75 181 75\n    75 181zm-256-544q-148 0-273 73t-198 198-73 273 73 273 198 198 273 73 273-73\n    198-198 73-273-73-273-198-198-273-73zm768 544q0 209-103 385.5t-279.5\n    279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5\n    385.5-103 385.5 103 279.5 279.5 103 385.5z\" />`,\n        viewBox: {\n            x: 1792,\n            y: 1792,\n        },\n    }),\n    RectangleROI: extend(BASE, {\n        iconContent: `<path fill=\"{{color}}\" d=\"M1312 256h-832q-66 0-113 47t-47 113v832q0 66 47\n    113t113 47h832q66 0 113-47t47-113v-832q0-66-47-113t-113-47zm288 160v832q0\n    119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119\n    84.5-203.5t203.5-84.5h832q119 0 203.5 84.5t84.5 203.5z\" />`,\n        viewBox: {\n            x: 1792,\n            y: 1792,\n        },\n    }),\n    TextMarker: extend(BASE, {\n        iconContent: `<path fill=\"{{color}}\" d=\"M789 559l-170 450q33 0 136.5 2t160.5 2q19 0\n    57-2-87-253-184-452zm-725 1105l2-79q23-7 56-12.5t57-10.5 49.5-14.5 44.5-29\n    31-50.5l237-616 280-724h128q8 14 11 21l205 480q33 78 106 257.5t114 274.5q15\n    34 58 144.5t72 168.5q20 45 35 57 19 15 88 29.5t84 20.5q6 38 6 57 0 5-.5\n    13.5t-.5 12.5q-63 0-190-8t-191-8q-76 0-215 7t-178 8q0-43 4-78l131-28q1 0\n    12.5-2.5t15.5-3.5 14.5-4.5 15-6.5 11-8 9-11\n    2.5-14q0-16-31-96.5t-72-177.5-42-100l-450-2q-26 58-76.5 195.5t-50.5 162.5q0\n    22 14 37.5t43.5 24.5 48.5 13.5 57 8.5 41 4q1 19 1 58 0 9-2 27-58\n    0-174.5-10t-174.5-10q-8 0-26.5 4t-21.5 4q-80 14-188 14z\" />`,\n        viewBox: {\n            x: 1792,\n            y: 1792,\n        },\n    }),\n    Crosshairs: extend(BASE, {\n        iconContent: `<path fill=\"{{color}}\" d=\"M1325 1024h-109q-26 0-45-19t-19-45v-128q0-26\n    19-45t45-19h109q-32-108-112.5-188.5t-188.5-112.5v109q0 26-19 45t-45\n    19h-128q-26 0-45-19t-19-45v-109q-108 32-188.5 112.5t-112.5 188.5h109q26\n    0 45 19t19 45v128q0 26-19 45t-45 19h-109q32 108 112.5 188.5t188.5\n    112.5v-109q0-26 19-45t45-19h128q26 0 45 19t19 45v109q108-32\n    188.5-112.5t112.5-188.5zm339-192v128q0 26-19 45t-45 19h-143q-37 161-154.5\n    278.5t-278.5 154.5v143q0 26-19 45t-45 19h-128q-26\n    0-45-19t-19-45v-143q-161-37-278.5-154.5t-154.5-278.5h-143q-26\n    0-45-19t-19-45v-128q0-26 19-45t45-19h143q37-161\n    154.5-278.5t278.5-154.5v-143q0-26 19-45t45-19h128q26 0 45 19t19 45v143q161\n    37 278.5 154.5t154.5 278.5h143q26 0 45 19t19 45z\" />`,\n        viewBox: {\n            x: 1792,\n            y: 1792,\n        },\n    }),\n    Eraser: extend(BASE, {\n        iconContent: `<path transform=\"translate(0,1792) scale(1,-1)\" fill=\"{{color}}\" d=\"M960 1408l336-384h-768l-336 384h768zm1013-1077q15\n    34 9.5 71.5t-30.5 65.5l-896 1024q-38 44-96 44h-768q-38\n    0-69.5-20.5t-47.5-54.5q-15-34-9.5-71.5t30.5-65.5l896-1024q38-44 96-44h768q38\n    0 69.5 20.5t47.5 54.5z\" />`,\n        viewBox: {\n            x: 2048,\n            y: 1792,\n        },\n    }),\n    Magnify: extend(BASE, {\n        iconContent: `<path fill=\"{{color}}\" d=\"M508.5 481.6l-129-129c-2.3-2.3-5.3-3.5-8.5-3.5h-10.3C395\n    312 416 262.5 416 208 416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c54.5\n    0 104-21 141.1-55.2V371c0 3.2 1.3 6.2 3.5 8.5l129 129c4.7 4.7 12.3 4.7 17\n    0l9.9-9.9c4.7-4.7 4.7-12.3 0-17zM208 384c-97.3 0-176-78.7-176-176S110.7 32 208\n    32s176 78.7 176 176-78.7 176-176 176z\" />`,\n        viewBox: {\n            x: 512,\n            y: 512,\n        },\n    }),\n    Pan: extend(BASE, {\n        iconContent: `<path fill=\"{{color}}\" d=\"M1411 541l-355 355 355 355 144-144q29-31 70-14 39 17\n    39 59v448q0 26-19 45t-45 19h-448q-42 0-59-40-17-39 14-69l144-144-355-355-355\n    355 144 144q31 30 14 69-17 40-59 40h-448q-26 0-45-19t-19-45v-448q0-42 40-59\n    39-17 69 14l144 144 355-355-355-355-144 144q-19 19-45 19-12\n    0-24-5-40-17-40-59v-448q0-26 19-45t45-19h448q42 0 59 40 17 39-14 69l-144\n    144 355 355 355-355-144-144q-31-30-14-69 17-40 59-40h448q26 0 45 19t19\n    45v448q0 42-39 59-13 5-25 5-26 0-45-19z\" />`,\n        viewBox: {\n            x: 1792,\n            y: 1792,\n        },\n    }),\n    Rotate: extend(BASE, {\n        iconContent: `<path fill=\"{{color}}\" d=\"M1664 256v448q0 26-19 45t-45 19h-448q-42 0-59-40-17-39\n    14-69l138-138q-148-137-349-137-104 0-198.5 40.5t-163.5 109.5-109.5\n    163.5-40.5 198.5 40.5 198.5 109.5 163.5 163.5 109.5 198.5 40.5q119 0\n    225-52t179-147q7-10 23-12 15 0 25 9l137 138q9 8 9.5 20.5t-7.5 22.5q-109\n    132-264 204.5t-327 72.5q-156 0-298-61t-245-164-164-245-61-298 61-298\n    164-245 245-164 298-61q147 0 284.5 55.5t244.5 156.5l130-129q29-31 70-14\n    39 17 39 59z\" />`,\n        viewBox: {\n            x: 1792,\n            y: 1792,\n        },\n    }),\n    StackScroll: extend(BASE, {\n        iconContent: `<path fill=\"{{color}}\" d=\"M24 21v2c0 0.547-0.453 1-1 1h-22c-0.547\n    0-1-0.453-1-1v-2c0-0.547 0.453-1 1-1h22c0.547 0 1 0.453 1 1zM24 13v2c0\n    0.547-0.453 1-1 1h-22c-0.547 0-1-0.453-1-1v-2c0-0.547 0.453-1 1-1h22c0.547\n    0 1 0.453 1 1zM24 5v2c0 0.547-0.453 1-1 1h-22c-0.547\n    0-1-0.453-1-1v-2c0-0.547 0.453-1 1-1h22c0.547 0 1 0.453 1 1z\" />`,\n        viewBox: {\n            x: 24,\n            y: 28,\n        },\n    }),\n    WindowLevelRegion: extend(BASE, {\n        iconContent: `<path fill=\"{{color}}\" d=\"M1664 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119\n    0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5\n    84.5t84.5 203.5z\" />`,\n        viewBox: {\n            x: 1792,\n            y: 1792,\n        },\n    }),\n    WindowLevel: extend(BASE, {\n        iconContent: `\n    <path fill=\"{{color}}\" d=\"M14.5,3.5 a1 1 0 0 1 -11,11 Z\" stroke=\"none\" opacity=\"0.8\" />\n    <circle cx=\"9\" cy=\"9\" r=\"8\" fill=\"none\" stroke-width=\"2\" stroke=\"{{color}}\" />`,\n        viewBox: {\n            x: 18,\n            y: 18,\n        },\n    }),\n    Zoom: extend(BASE, {\n        iconContent: `\n  <path fill=\"{{color}}\" d=\"M508.5 481.6l-129-129c-2.3-2.3-5.3-3.5-8.5-3.5h-10.3C395\n    312 416 262.5 416 208 416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c54.5\n    0 104-21 141.1-55.2V371c0 3.2 1.3 6.2 3.5 8.5l129 129c4.7 4.7 12.3 4.7 17\n    0l9.9-9.9c4.7-4.7 4.7-12.3 0-17zM208 384c-97.3 0-176-78.7-176-176S110.7 32 208\n    32s176 78.7 176 176-78.7 176-176 176z\" />\n  <path fill=\"{{color}}\" transform=\"scale(0.22,0.22) translate(1400,0)\" d=\"M1216\n    320q0 26-19 45t-45 19h-128v1024h128q26 0 45 19t19 45-19 45l-256 256q-19\n    19-45 19t-45-19l-256-256q-19-19-19-45t19-45 45-19h128v-1024h-128q-26\n    0-45-19t-19-45 19-45l256-256q19-19 45-19t45 19l256 256q19 19 19 45z\" />`,\n        viewBox: {\n            x: 640,\n            y: 512,\n        },\n    }),\n    SegmentationFreeHandEraseInside: extend(BASE, {\n        iconContent: `${SCISSOR_ICON} ${MINUS_RECT}`,\n        viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n    }),\n    SegmentationFreeHandFillInside: extend(BASE, {\n        iconContent: `${SCISSOR_ICON} ${PLUS_RECT}`,\n        viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n    }),\n    SegmentationFreeHandEraseOutside: extend(BASE, {\n        iconContent: `${SCISSOR_ICON} ${MINUS_RECT}`,\n        viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n    }),\n    SegmentationFreeHandFillOutside: extend(BASE, {\n        iconContent: `${SCISSOR_ICON} ${PLUS_RECT}`,\n        viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n    }),\n    SegmentationRectangleEraseInside: extend(BASE, {\n        iconContent: `${RECTANGLE_ICON} ${MINUS_RECT}`,\n        viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n    }),\n    RectangleScissor: extend(BASE, {\n        iconContent: `${RECTANGLE_ICON} ${PLUS_RECT}`,\n        viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n    }),\n    'RectangleScissor.FILL_INSIDE': extend(BASE, {\n        iconContent: `${RECTANGLE_ICON} ${PLUS_RECT}`,\n        viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n    }),\n    'RectangleScissor.FILL_OUTSIDE': extend(BASE, {\n        iconContent: `${RECTANGLE_ICON} ${PLUS_RECT}`,\n        viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n    }),\n    'RectangleScissor.ERASE_OUTSIDE': extend(BASE, {\n        iconContent: `${RECTANGLE_ICON} ${MINUS_RECT}`,\n        viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n    }),\n    'RectangleScissor.ERASE_INSIDE': extend(BASE, {\n        iconContent: `${RECTANGLE_ICON} ${MINUS_RECT}`,\n        viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n    }),\n    CircleScissor: extend(BASE, {\n        iconContent: `${CIRCLE_ICON} ${PLUS_RECT}`,\n        viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n    }),\n    'CircleScissor.FILL_INSIDE': extend(BASE, {\n        iconContent: `${CIRCLE_ICON} ${PLUS_RECT}`,\n        viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n    }),\n    'CircleScissor.ERASE_OUTSIDE': extend(BASE, {\n        iconContent: `${CIRCLE_ICON} ${MINUS_RECT}`,\n        viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n    }),\n    'CircleScissor.FILL_OUTSIDE': extend(BASE, {\n        iconContent: `${CIRCLE_ICON} ${PLUS_RECT}`,\n        viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n    }),\n};\nfunction extend(base, values) {\n    return Object.assign(Object.create(base), values);\n}\nfunction registerCursor(toolName, iconContent, viewBox) {\n    CursorSVG[toolName] = extend(BASE, {\n        iconContent,\n        viewBox,\n    });\n}\nfunction getDefinedSVGCursorDescriptor(name) {\n    if (Object.prototype.hasOwnProperty.call(CursorSVG, name)) {\n        return CursorSVG[name];\n    }\n}\nconst svgCursorNames = Object.keys(CursorSVG);\nexport { getDefinedSVGCursorDescriptor, registerCursor, svgCursorNames, CursorSVG, };\n//# sourceMappingURL=SVGCursorDescriptor.js.map","import { ToolModes, AnnotationStyleStates } from '../enums';\nimport ImageMouseCursor from './ImageMouseCursor';\nimport { getDefinedSVGCursorDescriptor } from './SVGCursorDescriptor';\nimport { getStyleProperty } from '../stateManagement/annotation/config/helpers';\nconst PROPERTY = 'color';\nconst STATE = AnnotationStyleStates.Highlighted;\nconst MODE = ToolModes.Active;\nexport default class SVGMouseCursor extends ImageMouseCursor {\n    constructor(url, x, y, name, fallback) {\n        super(url, x, y, name, fallback);\n    }\n    static getDefinedCursor(name, pointer = false, color) {\n        if (!color) {\n            color = getStyleProperty(PROPERTY, {}, STATE, MODE);\n        }\n        const urn = getCursorURN(name, pointer, color);\n        let cursor = super.getDefinedCursor(urn);\n        if (!cursor) {\n            const descriptor = getDefinedSVGCursorDescriptor(name);\n            if (descriptor) {\n                cursor = createSVGMouseCursor(descriptor, urn, pointer, color, super.getDefinedCursor('default'));\n                super.setDefinedCursor(urn, cursor);\n            }\n        }\n        return cursor;\n    }\n}\nfunction format(template, dictionary) {\n    const dict = Object(dictionary);\n    const defined = Object.prototype.hasOwnProperty.bind(dict);\n    return (template + '').replace(/\\{\\{(\\w+)\\}\\}/g, (match, key) => {\n        return defined(key) ? dict[key] + '' : '';\n    });\n}\nfunction getCursorURN(name, pointer, color) {\n    const type = pointer ? 'pointer' : 'cursor';\n    return `${type}:${name}/${color}`;\n}\nfunction createSVGMouseCursor(descriptor, name, pointer, color, fallback) {\n    const { x, y } = descriptor.mousePoint;\n    return new SVGMouseCursor(createSVGIconUrl(descriptor, pointer, { color }), x, y, name, fallback);\n}\nfunction createSVGIconUrl(descriptor, pointer, options) {\n    return URL.createObjectURL(createSVGIconBlob(descriptor, pointer, options));\n}\nfunction createSVGIconBlob(descriptor, pointer, options) {\n    const svgString = (pointer ? createSVGIconWithPointer : createSVGIcon)(descriptor, options);\n    return new Blob([svgString], { type: 'image/svg+xml' });\n}\nfunction createSVGIcon(descriptor, options) {\n    const { iconContent, iconSize, viewBox } = descriptor;\n    const svgString = `\n    <svg data-icon=\"cursor\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"${iconSize}\" height=\"${iconSize}\" viewBox=\"0 0\n      ${viewBox.x} ${viewBox.y}\">\n      ${iconContent}\n    </svg>`;\n    return format(svgString, options);\n}\nfunction createSVGIconWithPointer(descriptor, options) {\n    const { iconContent, iconSize, viewBox, mousePointerGroupString } = descriptor;\n    const scale = iconSize / Math.max(viewBox.x, viewBox.y, 1);\n    const svgSize = 16 + iconSize;\n    const svgString = `\n    <svg data-icon=\"cursor\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"${svgSize}\" height=\"${svgSize}\" viewBox=\"0 0 ${svgSize} ${svgSize}\">\n      <g>${mousePointerGroupString}</g>\n      <g transform=\"translate(16, 16) scale(${scale})\">${iconContent}</g>\n    </svg>`;\n    return format(svgString, options);\n}\n//# sourceMappingURL=SVGMouseCursor.js.map","import { setElementCursor } from './elementCursor';\nimport MouseCursor from './MouseCursor';\nimport SVGMouseCursor from './SVGMouseCursor';\nfunction setCursorForElement(element, cursorName) {\n    let cursor = SVGMouseCursor.getDefinedCursor(cursorName, true);\n    if (!cursor) {\n        cursor = MouseCursor.getDefinedCursor(cursorName);\n    }\n    if (!cursor) {\n        console.log(`Cursor ${cursorName} is not defined either as SVG or as a standard cursor.`);\n        cursor = MouseCursor.getDefinedCursor(cursorName);\n    }\n    setElementCursor(element, cursor);\n}\nexport default setCursorForElement;\n//# sourceMappingURL=setCursorForElement.js.map","import MouseCursor, { standardCursorNames } from './MouseCursor';\nimport ImageMouseCursor from './ImageMouseCursor';\nimport SVGMouseCursor from './SVGMouseCursor';\nimport * as elementCursor from './elementCursor';\nimport setCursorForElement from './setCursorForElement';\nimport { registerCursor, svgCursorNames, CursorSVG, } from './SVGCursorDescriptor';\nconst CursorNames = [...svgCursorNames, ...standardCursorNames];\nexport { MouseCursor, ImageMouseCursor, SVGMouseCursor, elementCursor, registerCursor, CursorNames, CursorSVG, setCursorForElement, };\n//# sourceMappingURL=index.js.map","import { MouseCursor } from '.';\nconst ELEMENT_CURSORS_MAP = Symbol('ElementCursorsMap');\nfunction initElementCursor(element, cursor) {\n    _getElementCursors(element)[0] = cursor;\n    _setElementCursor(element, cursor);\n}\nfunction _setElementCursor(element, cursor) {\n    const cursors = _getElementCursors(element);\n    cursors[1] = cursors[0];\n    cursors[0] = cursor;\n    element.style.cursor = (cursor instanceof MouseCursor\n        ? cursor\n        : MouseCursor.getDefinedCursor('auto')).getStyleProperty();\n}\nfunction resetElementCursor(element) {\n    _setElementCursor(element, _getElementCursors(element)[1]);\n}\nfunction hideElementCursor(element) {\n    _setElementCursor(element, MouseCursor.getDefinedCursor('none'));\n}\nfunction _getElementCursors(element) {\n    let map = _getElementCursors[ELEMENT_CURSORS_MAP];\n    if (!(map instanceof WeakMap)) {\n        map = new WeakMap();\n        Object.defineProperty(_getElementCursors, ELEMENT_CURSORS_MAP, {\n            value: map,\n        });\n    }\n    let cursors = map.get(element);\n    if (!cursors) {\n        cursors = [null, null];\n        map.set(element, cursors);\n    }\n    return cursors;\n}\nexport { initElementCursor, resetElementCursor, hideElementCursor, _setElementCursor as setElementCursor, };\n//# sourceMappingURL=elementCursor.js.map","import { cache, getEnabledElement, StackViewport } from '@cornerstonejs/core';\nimport { BaseTool } from '../base';\nimport { fillInsideSphere } from './strategies/fillSphere';\nimport { eraseInsideSphere } from './strategies/eraseSphere';\nimport { thresholdInsideCircle, fillInsideCircle, } from './strategies/fillCircle';\nimport { eraseInsideCircle } from './strategies/eraseCircle';\nimport { Events, ToolModes } from '../../enums';\nimport { drawCircle as drawCircleSvg } from '../../drawingSvg';\nimport { resetElementCursor, hideElementCursor, } from '../../cursors/elementCursor';\nimport triggerAnnotationRenderForViewportUIDs from '../../utilities/triggerAnnotationRenderForViewportIds';\nimport { config as segmentationConfig, segmentLocking, segmentIndex as segmentIndexController, state as segmentationState, activeSegmentation, } from '../../stateManagement/segmentation';\nclass BrushTool extends BaseTool {\n    constructor(toolProps = {}, defaultToolProps = {\n        supportedInteractionTypes: ['Mouse', 'Touch'],\n        configuration: {\n            strategies: {\n                FILL_INSIDE_CIRCLE: fillInsideCircle,\n                THRESHOLD_INSIDE_CIRCLE: thresholdInsideCircle,\n                ERASE_INSIDE_CIRCLE: eraseInsideCircle,\n                FILL_INSIDE_SPHERE: fillInsideSphere,\n                ERASE_INSIDE_SPHERE: eraseInsideSphere,\n            },\n            strategySpecificConfiguration: {\n                THRESHOLD_INSIDE_CIRCLE: {\n                    threshold: [-150, -70],\n                },\n            },\n            defaultStrategy: 'FILL_INSIDE_CIRCLE',\n            activeStrategy: 'FILL_INSIDE_CIRCLE',\n            brushSize: 25,\n        },\n    }) {\n        super(toolProps, defaultToolProps);\n        this.onSetToolPassive = () => {\n            this.disableCursor();\n        };\n        this.onSetToolEnabled = () => {\n            this.disableCursor();\n        };\n        this.onSetToolDisabled = () => {\n            this.disableCursor();\n        };\n        this.preMouseDownCallback = (evt) => {\n            const eventData = evt.detail;\n            const { element } = eventData;\n            const enabledElement = getEnabledElement(element);\n            const { viewport, renderingEngine } = enabledElement;\n            if (viewport instanceof StackViewport) {\n                throw new Error('Not implemented yet');\n            }\n            const toolGroupId = this.toolGroupId;\n            const activeSegmentationRepresentation = activeSegmentation.getActiveSegmentationRepresentation(toolGroupId);\n            if (!activeSegmentationRepresentation) {\n                throw new Error('No active segmentation detected, create one before using the brush tool');\n            }\n            const { segmentationId, type } = activeSegmentationRepresentation;\n            const segmentsLocked = segmentLocking.getLockedSegments(segmentationId);\n            const { representationData } = segmentationState.getSegmentation(segmentationId);\n            const { volumeId } = representationData[type];\n            const segmentation = cache.getVolume(volumeId);\n            const actors = viewport.getActors();\n            const firstVolumeActorUID = actors[0].uid;\n            const imageVolume = cache.getVolume(firstVolumeActorUID);\n            const viewportIdsToRender = [viewport.id];\n            this._editData = {\n                segmentation,\n                imageVolume,\n                segmentsLocked,\n            };\n            this._activateDraw(element);\n            hideElementCursor(element);\n            evt.preventDefault();\n            triggerAnnotationRenderForViewportUIDs(renderingEngine, viewportIdsToRender);\n            return true;\n        };\n        this.mouseMoveCallback = (evt) => {\n            if (this.mode === ToolModes.Active) {\n                this.updateCursor(evt);\n            }\n        };\n        this._dragCallback = (evt) => {\n            const eventData = evt.detail;\n            const { element } = eventData;\n            const enabledElement = getEnabledElement(element);\n            const { renderingEngine } = enabledElement;\n            const { imageVolume, segmentation, segmentsLocked } = this._editData;\n            this.updateCursor(evt);\n            const { segmentIndex, segmentationId, segmentationRepresentationUID, brushCursor, viewportIdsToRender, } = this._hoverData;\n            const { data } = brushCursor;\n            const { viewPlaneNormal, viewUp } = brushCursor.metadata;\n            triggerAnnotationRenderForViewportUIDs(renderingEngine, viewportIdsToRender);\n            const operationData = {\n                points: data.handles.points,\n                volume: segmentation,\n                imageVolume,\n                segmentIndex,\n                segmentsLocked,\n                viewPlaneNormal,\n                toolGroupId: this.toolGroupId,\n                segmentationId,\n                segmentationRepresentationUID,\n                viewUp,\n                strategySpecificConfiguration: this.configuration.strategySpecificConfiguration,\n            };\n            this.applyActiveStrategy(enabledElement, operationData);\n        };\n        this._endCallback = (evt) => {\n            const eventData = evt.detail;\n            const { element } = eventData;\n            const { imageVolume, segmentation, segmentsLocked } = this._editData;\n            const { segmentIndex, segmentationId, segmentationRepresentationUID, brushCursor, } = this._hoverData;\n            const { data } = brushCursor;\n            const { viewPlaneNormal, viewUp } = brushCursor.metadata;\n            this._deactivateDraw(element);\n            resetElementCursor(element);\n            const enabledElement = getEnabledElement(element);\n            const { viewport } = enabledElement;\n            this._editData = null;\n            this.updateCursor(evt);\n            if (viewport instanceof StackViewport) {\n                throw new Error('Not implemented yet');\n            }\n            const operationData = {\n                points: data.handles.points,\n                volume: segmentation,\n                imageVolume,\n                segmentIndex,\n                segmentsLocked,\n                viewPlaneNormal,\n                toolGroupId: this.toolGroupId,\n                segmentationId,\n                segmentationRepresentationUID,\n                viewUp,\n                strategySpecificConfiguration: this.configuration.strategySpecificConfiguration,\n            };\n            this.applyActiveStrategy(enabledElement, operationData);\n        };\n        this._activateDraw = (element) => {\n            element.addEventListener(Events.MOUSE_UP, this._endCallback);\n            element.addEventListener(Events.MOUSE_DRAG, this._dragCallback);\n            element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n        };\n        this._deactivateDraw = (element) => {\n            element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n            element.removeEventListener(Events.MOUSE_DRAG, this._dragCallback);\n            element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n        };\n    }\n    disableCursor() {\n        this._hoverData = undefined;\n    }\n    updateCursor(evt) {\n        const eventData = evt.detail;\n        const { element } = eventData;\n        const { currentPoints } = eventData;\n        const centerCanvas = currentPoints.canvas;\n        const enabledElement = getEnabledElement(element);\n        const { renderingEngine, viewport } = enabledElement;\n        const camera = viewport.getCamera();\n        const { viewPlaneNormal, viewUp } = camera;\n        const toolGroupId = this.toolGroupId;\n        const activeSegmentationRepresentation = activeSegmentation.getActiveSegmentationRepresentation(toolGroupId);\n        if (!activeSegmentationRepresentation) {\n            console.warn('No active segmentation detected, create one before using the brush tool');\n            return;\n        }\n        const { segmentationRepresentationUID, segmentationId } = activeSegmentationRepresentation;\n        const segmentIndex = segmentIndexController.getActiveSegmentIndex(segmentationId);\n        const segmentColor = segmentationConfig.color.getColorForSegmentIndex(toolGroupId, segmentationRepresentationUID, segmentIndex);\n        const viewportIdsToRender = [viewport.id];\n        const brushCursor = {\n            metadata: {\n                viewPlaneNormal: [...viewPlaneNormal],\n                viewUp: [...viewUp],\n                FrameOfReferenceUID: viewport.getFrameOfReferenceUID(),\n                referencedImageId: '',\n                toolName: this.getToolName(),\n                segmentColor,\n            },\n            data: {},\n        };\n        this._hoverData = {\n            brushCursor,\n            centerCanvas,\n            segmentIndex,\n            segmentationId,\n            segmentationRepresentationUID,\n            segmentColor,\n            viewportIdsToRender,\n        };\n        this._calculateCursor(element, centerCanvas);\n        triggerAnnotationRenderForViewportUIDs(renderingEngine, viewportIdsToRender);\n    }\n    _calculateCursor(element, centerCanvas) {\n        const enabledElement = getEnabledElement(element);\n        const { viewport } = enabledElement;\n        const { canvasToWorld } = viewport;\n        const { brushSize } = this.configuration;\n        const radius = brushSize;\n        const bottomCanvas = [\n            centerCanvas[0],\n            centerCanvas[1] + radius,\n        ];\n        const topCanvas = [centerCanvas[0], centerCanvas[1] - radius];\n        const leftCanvas = [\n            centerCanvas[0] - radius,\n            centerCanvas[1],\n        ];\n        const rightCanvas = [\n            centerCanvas[0] + radius,\n            centerCanvas[1],\n        ];\n        const { brushCursor } = this._hoverData;\n        const { data } = brushCursor;\n        if (data.handles === undefined) {\n            data.handles = {};\n        }\n        data.handles.points = [\n            canvasToWorld(bottomCanvas),\n            canvasToWorld(topCanvas),\n            canvasToWorld(leftCanvas),\n            canvasToWorld(rightCanvas),\n        ];\n        data.invalidated = false;\n    }\n    invalidateBrushCursor() {\n        if (this._hoverData !== undefined) {\n            const { data } = this._hoverData.brushCursor;\n            data.invalidated = true;\n        }\n    }\n    renderAnnotation(enabledElement, svgDrawingHelper) {\n        if (!this._hoverData) {\n            return;\n        }\n        const { viewport } = enabledElement;\n        const viewportIdsToRender = this._hoverData.viewportIdsToRender;\n        if (!viewportIdsToRender.includes(viewport.id)) {\n            return;\n        }\n        const brushCursor = this._hoverData.brushCursor;\n        if (brushCursor.data.invalidated === true) {\n            const { centerCanvas } = this._hoverData;\n            const { element } = viewport;\n            this._calculateCursor(element, centerCanvas);\n        }\n        const toolMetadata = brushCursor.metadata;\n        const annotationUID = toolMetadata.brushCursorUID;\n        const data = brushCursor.data;\n        const { points } = data.handles;\n        const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n        const bottom = canvasCoordinates[0];\n        const top = canvasCoordinates[1];\n        const center = [\n            Math.floor((bottom[0] + top[0]) / 2),\n            Math.floor((bottom[1] + top[1]) / 2),\n        ];\n        const radius = Math.abs(bottom[1] - Math.floor((bottom[1] + top[1]) / 2));\n        const color = `rgb(${toolMetadata.segmentColor.slice(0, 3)})`;\n        if (!viewport.getRenderingEngine()) {\n            console.warn('Rendering Engine has been destroyed');\n            return;\n        }\n        const circleUID = '0';\n        drawCircleSvg(svgDrawingHelper, annotationUID, circleUID, center, radius, {\n            color,\n        });\n    }\n}\nBrushTool.toolName = 'Brush';\nexport default BrushTool;\n//# sourceMappingURL=BrushTool.js.map","import { utilities as csUtils } from '@cornerstonejs/core';\nimport { getToolGroup } from '../../store/ToolGroupManager';\nimport BrushTool from '../../tools/segmentation/BrushTool';\nimport getBoundingBoxAroundShape from '../boundingBox/getBoundingBoxAroundShape';\nexport default function getBrushToolInstances(toolGroupId) {\n    const toolGroup = getToolGroup(toolGroupId);\n    if (toolGroup === undefined) {\n        return;\n    }\n    const toolInstances = toolGroup._toolInstances;\n    if (!Object.keys(toolInstances).length) {\n        return;\n    }\n    const brushBasedToolInstances = Object.values(toolInstances).filter((toolInstance) => toolInstance instanceof BrushTool);\n    return brushBasedToolInstances;\n}\nconst equalsCheck = (a, b) => {\n    return JSON.stringify(a) === JSON.stringify(b);\n};\nexport function getVoxelOverlap(imageData, dimensions, voxelSpacing, voxelCenter) {\n    const voxelCornersWorld = [];\n    for (let i = 0; i < 2; i++) {\n        for (let j = 0; j < 2; j++) {\n            for (let k = 0; k < 2; k++) {\n                const point = voxelCenter;\n                point[0] = point[0] + ((i * 2 - 1) * voxelSpacing[0]) / 2;\n                point[1] = point[1] + ((j * 2 - 1) * voxelSpacing[1]) / 2;\n                point[2] = point[2] + ((k * 2 - 1) * voxelSpacing[2]) / 2;\n                voxelCornersWorld.push(point);\n            }\n        }\n    }\n    const voxelCornersIJK = voxelCornersWorld.map((world) => csUtils.transformWorldToIndex(imageData, world));\n    const overlapBounds = getBoundingBoxAroundShape(voxelCornersIJK, dimensions);\n    return overlapBounds;\n}\nexport function processVolumes(segmentationVolume, thresholdVolumeInformation) {\n    const { spacing: segmentationSpacing, imageData: segmentationImageData } = segmentationVolume;\n    const scalarData = segmentationVolume.getScalarData();\n    const volumeInfoList = [];\n    let baseVolumeIdx = 0;\n    for (let i = 0; i < thresholdVolumeInformation.length; i++) {\n        const { imageData, spacing, dimensions } = thresholdVolumeInformation[i].volume;\n        const volumeSize = thresholdVolumeInformation[i].volume.getScalarData().length;\n        if (volumeSize === scalarData.length &&\n            equalsCheck(spacing, segmentationSpacing)) {\n            baseVolumeIdx = i;\n        }\n        const referenceValues = imageData.getPointData().getScalars().getData();\n        const lower = thresholdVolumeInformation[i].lower;\n        const upper = thresholdVolumeInformation[i].upper;\n        volumeInfoList.push({\n            imageData,\n            referenceValues,\n            lower,\n            upper,\n            spacing,\n            dimensions,\n            volumeSize,\n        });\n    }\n    return {\n        volumeInfoList,\n        baseVolumeIdx,\n    };\n}\n//# sourceMappingURL=utilities.js.map","import { pointInShapeCallback } from '../../utilities';\nimport { triggerSegmentationDataModified } from '../../stateManagement/segmentation/triggerSegmentationEvents';\nimport { getVoxelOverlap, processVolumes, } from './utilities';\nfunction thresholdVolumeByRange(segmentationVolume, thresholdVolumeInformation, options) {\n    const { imageData: segmentationImageData } = segmentationVolume;\n    const scalarData = segmentationVolume.getScalarData();\n    const { overwrite, boundsIJK } = options;\n    const overlapType = options?.overlapType || 0;\n    if (overwrite) {\n        for (let i = 0; i < scalarData.length; i++) {\n            scalarData[i] = 0;\n        }\n    }\n    const { baseVolumeIdx, volumeInfoList } = processVolumes(segmentationVolume, thresholdVolumeInformation);\n    let overlaps, total, range;\n    const testOverlapRange = (volumeInfo, voxelSpacing, voxelCenter) => {\n        const callbackOverlap = ({ value }) => {\n            total = total + 1;\n            if (value >= range.lower && value <= range.upper) {\n                overlaps = overlaps + 1;\n            }\n        };\n        const { imageData, dimensions, lower, upper } = volumeInfo;\n        const overlapBounds = getVoxelOverlap(imageData, dimensions, voxelSpacing, voxelCenter);\n        total = 0;\n        overlaps = 0;\n        range = { lower, upper };\n        let overlapTest = false;\n        pointInShapeCallback(imageData, () => true, callbackOverlap, overlapBounds);\n        if (overlapType === 0) {\n            overlapTest = overlaps > 0;\n        }\n        else if (overlapType == 1) {\n            overlapTest = overlaps === total;\n        }\n        return overlapTest;\n    };\n    const testRange = (volumeInfo, pointIJK) => {\n        const { imageData, referenceValues, lower, upper } = volumeInfo;\n        const offset = imageData.computeOffsetIndex(pointIJK);\n        const value = referenceValues[offset];\n        if (value <= lower || value >= upper) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    const callback = ({ index, pointIJK, pointLPS }) => {\n        let insert = volumeInfoList.length > 0;\n        for (let i = 0; i < volumeInfoList.length; i++) {\n            if (volumeInfoList[i].volumeSize === scalarData.length) {\n                insert = testRange(volumeInfoList[i], pointIJK);\n            }\n            else {\n                insert = testOverlapRange(volumeInfoList[i], volumeInfoList[baseVolumeIdx].spacing, pointLPS);\n            }\n            if (!insert) {\n                break;\n            }\n        }\n        if (insert)\n            scalarData[index] = 1;\n    };\n    pointInShapeCallback(segmentationImageData, () => true, callback, boundsIJK);\n    triggerSegmentationDataModified(segmentationVolume.volumeId);\n    return segmentationVolume;\n}\nexport default thresholdVolumeByRange;\n//# sourceMappingURL=thresholdVolumeByRange.js.map","import { BaseTool } from './base';\nimport { getEnabledElement } from '@cornerstonejs/core';\nclass PanTool extends BaseTool {\n    constructor(toolProps = {}, defaultToolProps = {\n        supportedInteractionTypes: ['Mouse', 'Touch'],\n    }) {\n        super(toolProps, defaultToolProps);\n    }\n    touchDragCallback(evt) {\n        this._dragCallback(evt);\n    }\n    mouseDragCallback(evt) {\n        this._dragCallback(evt);\n    }\n    _dragCallback(evt) {\n        const { element, deltaPoints } = evt.detail;\n        const enabledElement = getEnabledElement(element);\n        const deltaPointsWorld = deltaPoints.world;\n        const camera = enabledElement.viewport.getCamera();\n        const { focalPoint, position } = camera;\n        const updatedPosition = [\n            position[0] - deltaPointsWorld[0],\n            position[1] - deltaPointsWorld[1],\n            position[2] - deltaPointsWorld[2],\n        ];\n        const updatedFocalPoint = [\n            focalPoint[0] - deltaPointsWorld[0],\n            focalPoint[1] - deltaPointsWorld[1],\n            focalPoint[2] - deltaPointsWorld[2],\n        ];\n        enabledElement.viewport.setCamera({\n            focalPoint: updatedFocalPoint,\n            position: updatedPosition,\n        });\n        enabledElement.viewport.render();\n    }\n}\nPanTool.toolName = 'Pan';\nexport default PanTool;\n//# sourceMappingURL=PanTool.js.map","import vtkMath from '@kitware/vtk.js/Common/Core/Math';\nimport { getEnabledElement } from '@cornerstonejs/core';\nimport { mat4, vec3 } from 'gl-matrix';\nimport { BaseTool } from './base';\nclass TrackballRotateTool extends BaseTool {\n    constructor(toolProps = {}, defaultToolProps = {\n        supportedInteractionTypes: ['Mouse', 'Touch'],\n        configuration: {\n            rotateIncrementDegrees: 2,\n        },\n    }) {\n        super(toolProps, defaultToolProps);\n        this.rotateCamera = (viewport, centerWorld, axis, angle) => {\n            const vtkCamera = viewport.getVtkActiveCamera();\n            const viewUp = vtkCamera.getViewUp();\n            const focalPoint = vtkCamera.getFocalPoint();\n            const position = vtkCamera.getPosition();\n            const newPosition = [0, 0, 0];\n            const newFocalPoint = [0, 0, 0];\n            const newViewUp = [0, 0, 0];\n            const transform = mat4.identity(new Float32Array(16));\n            mat4.translate(transform, transform, centerWorld);\n            mat4.rotate(transform, transform, angle, axis);\n            mat4.translate(transform, transform, [\n                -centerWorld[0],\n                -centerWorld[1],\n                -centerWorld[2],\n            ]);\n            vec3.transformMat4(newPosition, position, transform);\n            vec3.transformMat4(newFocalPoint, focalPoint, transform);\n            mat4.identity(transform);\n            mat4.rotate(transform, transform, angle, axis);\n            vec3.transformMat4(newViewUp, viewUp, transform);\n            viewport.setCamera({\n                position: newPosition,\n                viewUp: newViewUp,\n                focalPoint: newFocalPoint,\n            });\n        };\n        this.touchDragCallback = this._dragCallback.bind(this);\n        this.mouseDragCallback = this._dragCallback.bind(this);\n    }\n    _dragCallback(evt) {\n        const { element, currentPoints, lastPoints } = evt.detail;\n        const currentPointsCanvas = currentPoints.canvas;\n        const lastPointsCanvas = lastPoints.canvas;\n        const { rotateIncrementDegrees } = this.configuration;\n        const enabledElement = getEnabledElement(element);\n        const { viewport } = enabledElement;\n        const camera = viewport.getCamera();\n        const width = element.clientWidth;\n        const height = element.clientHeight;\n        const normalizedPosition = [\n            currentPointsCanvas[0] / width,\n            currentPointsCanvas[1] / height,\n        ];\n        const normalizedPreviousPosition = [\n            lastPointsCanvas[0] / width,\n            lastPointsCanvas[1] / height,\n        ];\n        const center = [width * 0.5, height * 0.5];\n        const centerWorld = viewport.canvasToWorld(center);\n        const normalizedCenter = [0.5, 0.5];\n        const radsq = (1.0 + Math.abs(normalizedCenter[0])) ** 2.0;\n        const op = [normalizedPreviousPosition[0], 0, 0];\n        const oe = [normalizedPosition[0], 0, 0];\n        const opsq = op[0] ** 2;\n        const oesq = oe[0] ** 2;\n        const lop = opsq > radsq ? 0 : Math.sqrt(radsq - opsq);\n        const loe = oesq > radsq ? 0 : Math.sqrt(radsq - oesq);\n        const nop = [op[0], 0, lop];\n        vtkMath.normalize(nop);\n        const noe = [oe[0], 0, loe];\n        vtkMath.normalize(noe);\n        const dot = vtkMath.dot(nop, noe);\n        if (Math.abs(dot) > 0.0001) {\n            const angleX = -2 *\n                Math.acos(vtkMath.clampValue(dot, -1.0, 1.0)) *\n                Math.sign(normalizedPosition[0] - normalizedPreviousPosition[0]) *\n                rotateIncrementDegrees;\n            const upVec = camera.viewUp;\n            const atV = camera.viewPlaneNormal;\n            const rightV = [0, 0, 0];\n            const forwardV = [0, 0, 0];\n            vtkMath.cross(upVec, atV, rightV);\n            vtkMath.normalize(rightV);\n            vtkMath.cross(atV, rightV, forwardV);\n            vtkMath.normalize(forwardV);\n            vtkMath.normalize(upVec);\n            this.rotateCamera(viewport, centerWorld, forwardV, angleX);\n            const angleY = (normalizedPreviousPosition[1] - normalizedPosition[1]) *\n                rotateIncrementDegrees;\n            this.rotateCamera(viewport, centerWorld, rightV, angleY);\n            viewport.render();\n        }\n    }\n}\nTrackballRotateTool.toolName = 'TrackballRotate';\nexport default TrackballRotateTool;\n//# sourceMappingURL=TrackballRotateTool.js.map","import { BaseTool } from './base';\nimport { getEnabledElement, VolumeViewport, StackViewport, utilities, cache, } from '@cornerstonejs/core';\nconst DEFAULT_MULTIPLIER = 4;\nconst DEFAULT_IMAGE_DYNAMIC_RANGE = 1024;\nconst PT = 'PT';\nclass WindowLevelTool extends BaseTool {\n    constructor(toolProps = {}, defaultToolProps = {\n        supportedInteractionTypes: ['Mouse', 'Touch'],\n    }) {\n        super(toolProps, defaultToolProps);\n        this._getImageDynamicRangeFromMiddleSlice = (scalarData, dimensions) => {\n            const middleSliceIndex = Math.floor(dimensions[2] / 2);\n            const frameLength = dimensions[0] * dimensions[1];\n            let bytesPerVoxel;\n            let TypedArrayConstructor;\n            if (scalarData instanceof Float32Array) {\n                bytesPerVoxel = 4;\n                TypedArrayConstructor = Float32Array;\n            }\n            else if (scalarData instanceof Uint8Array) {\n                bytesPerVoxel = 1;\n                TypedArrayConstructor = Uint8Array;\n            }\n            else if (scalarData instanceof Uint16Array) {\n                bytesPerVoxel = 2;\n                TypedArrayConstructor = Uint16Array;\n            }\n            else if (scalarData instanceof Int16Array) {\n                bytesPerVoxel = 2;\n                TypedArrayConstructor = Int16Array;\n            }\n            const buffer = scalarData.buffer;\n            const byteOffset = middleSliceIndex * frameLength * bytesPerVoxel;\n            const frame = new TypedArrayConstructor(buffer, byteOffset, frameLength);\n            const { max, min } = this._getMinMax(frame, frameLength);\n            return max - min;\n        };\n    }\n    touchDragCallback(evt) {\n        this.mouseDragCallback(evt);\n    }\n    mouseDragCallback(evt) {\n        const { element, deltaPoints } = evt.detail;\n        const enabledElement = getEnabledElement(element);\n        const { renderingEngine, viewport } = enabledElement;\n        let volumeId, lower, upper, modality, newRange, viewportsContainingVolumeUID;\n        let isPreScaled = false;\n        if (viewport instanceof VolumeViewport) {\n            const targetId = this.getTargetId(viewport);\n            volumeId = targetId.split('volumeId:')[1];\n            viewportsContainingVolumeUID = utilities.getViewportsWithVolumeId(volumeId, renderingEngine.id);\n            const properties = viewport.getProperties();\n            ({ lower, upper } = properties.voiRange);\n            const volume = cache.getVolume(volumeId);\n            modality = volume.metadata.Modality;\n            isPreScaled = volume.scaling && Object.keys(volume.scaling).length > 0;\n        }\n        else if (viewport instanceof StackViewport) {\n            const properties = viewport.getProperties();\n            modality = viewport.modality;\n            ({ lower, upper } = properties.voiRange);\n            const { preScale } = viewport.getImageData();\n            isPreScaled =\n                preScale.scaled && preScale.scalingParameters?.suvbw !== undefined;\n        }\n        else {\n            throw new Error('Viewport is not a valid type');\n        }\n        if (modality === PT) {\n            newRange = this.getPTScaledNewRange({\n                deltaPointsCanvas: deltaPoints.canvas,\n                lower,\n                upper,\n                clientHeight: element.clientHeight,\n                isPreScaled,\n                viewport,\n                volumeId,\n            });\n        }\n        else {\n            newRange = this.getNewRange({\n                viewport,\n                deltaPointsCanvas: deltaPoints.canvas,\n                volumeId,\n                lower,\n                upper,\n            });\n        }\n        if (viewport instanceof StackViewport) {\n            viewport.setProperties({\n                voiRange: newRange,\n            });\n            viewport.render();\n            return;\n        }\n        if (viewport instanceof VolumeViewport) {\n            viewport.setProperties({\n                voiRange: newRange,\n            });\n            viewportsContainingVolumeUID.forEach((vp) => {\n                vp.render();\n            });\n            return;\n        }\n    }\n    getPTScaledNewRange({ deltaPointsCanvas, lower, upper, clientHeight, viewport, volumeId, isPreScaled, }) {\n        let multiplier = DEFAULT_MULTIPLIER;\n        if (isPreScaled) {\n            multiplier = 5 / clientHeight;\n        }\n        else {\n            multiplier =\n                this._getMultiplierFromDynamicRange(viewport, volumeId) ||\n                    DEFAULT_MULTIPLIER;\n        }\n        const deltaY = deltaPointsCanvas[1];\n        const wcDelta = deltaY * multiplier;\n        upper -= wcDelta;\n        upper = isPreScaled ? Math.max(upper, 0.1) : upper;\n        return { lower, upper };\n    }\n    getNewRange({ viewport, deltaPointsCanvas, volumeId, lower, upper }) {\n        const multiplier = this._getMultiplierFromDynamicRange(viewport, volumeId) ||\n            DEFAULT_MULTIPLIER;\n        const wwDelta = deltaPointsCanvas[0] * multiplier;\n        const wcDelta = deltaPointsCanvas[1] * multiplier;\n        let { windowWidth, windowCenter } = utilities.windowLevel.toWindowLevel(lower, upper);\n        windowWidth += wwDelta;\n        windowCenter += wcDelta;\n        windowWidth = Math.max(windowWidth, 1);\n        return utilities.windowLevel.toLowHighRange(windowWidth, windowCenter);\n    }\n    _getMultiplierFromDynamicRange(viewport, volumeId) {\n        let imageDynamicRange;\n        if (volumeId) {\n            const imageVolume = cache.getVolume(volumeId);\n            const { dimensions } = imageVolume;\n            const scalarData = imageVolume.getScalarData();\n            const calculatedDynamicRange = this._getImageDynamicRangeFromMiddleSlice(scalarData, dimensions);\n            const BitsStored = imageVolume?.metadata?.BitsStored;\n            const metadataDynamicRange = BitsStored ? 2 ** BitsStored : Infinity;\n            imageDynamicRange = Math.min(calculatedDynamicRange, metadataDynamicRange);\n        }\n        else {\n            imageDynamicRange = this._getImageDynamicRangeFromViewport(viewport);\n        }\n        const ratio = imageDynamicRange / DEFAULT_IMAGE_DYNAMIC_RANGE;\n        let multiplier = DEFAULT_MULTIPLIER;\n        if (ratio > 1) {\n            multiplier = Math.round(ratio);\n        }\n        return multiplier;\n    }\n    _getImageDynamicRangeFromViewport(viewport) {\n        const { imageData } = viewport.getImageData();\n        const dimensions = imageData.getDimensions();\n        let scalarData;\n        if (imageData.getScalarData) {\n            scalarData = imageData.getScalarData();\n        }\n        else {\n            scalarData = imageData.getPointData().getScalars();\n        }\n        if (dimensions[2] !== 1) {\n            return this._getImageDynamicRangeFromMiddleSlice(scalarData, dimensions);\n        }\n        let range;\n        if (scalarData.getRange) {\n            range = scalarData.getRange();\n        }\n        else {\n            const { min, max } = this._getMinMax(scalarData, scalarData.length);\n            range = [min, max];\n        }\n        return range[1] - range[0];\n    }\n    _getMinMax(frame, frameLength) {\n        let min = Infinity;\n        let max = -Infinity;\n        for (let i = 0; i < frameLength; i++) {\n            const voxel = frame[i];\n            if (voxel < min) {\n                min = voxel;\n            }\n            if (voxel > max) {\n                max = voxel;\n            }\n        }\n        return { max, min };\n    }\n}\nWindowLevelTool.toolName = 'WindowLevel';\nexport default WindowLevelTool;\n//# sourceMappingURL=WindowLevelTool.js.map","import { getEnabledElementByIds, VolumeViewport, StackViewport, utilities as csUtils, } from '@cornerstonejs/core';\nimport { BaseTool } from './base';\nimport { scroll } from '../utilities';\nclass StackScrollTool extends BaseTool {\n    constructor(toolProps = {}, defaultToolProps = {\n        supportedInteractionTypes: ['Mouse', 'Touch'],\n        configuration: {\n            invert: false,\n            debounceIfNotLoaded: true,\n            loop: false,\n        },\n    }) {\n        super(toolProps, defaultToolProps);\n        this.deltaY = 1;\n    }\n    mouseDragCallback(evt) {\n        this._dragCallback(evt);\n    }\n    touchDragCallback(evt) {\n        this._dragCallback(evt);\n    }\n    _dragCallback(evt) {\n        const { deltaPoints, viewportId, renderingEngineId } = evt.detail;\n        const { viewport } = getEnabledElementByIds(viewportId, renderingEngineId);\n        const targetId = this.getTargetId(viewport);\n        const { debounceIfNotLoaded, invert, loop } = this.configuration;\n        const deltaPointY = deltaPoints.canvas[1];\n        let volumeId;\n        if (viewport instanceof VolumeViewport) {\n            volumeId = targetId.split('volumeId:')[1];\n        }\n        const pixelsPerImage = this._getPixelPerImage(viewport);\n        const deltaY = deltaPointY + this.deltaY;\n        if (!pixelsPerImage) {\n            return;\n        }\n        if (Math.abs(deltaY) >= pixelsPerImage) {\n            const imageIdIndexOffset = Math.round(deltaY / pixelsPerImage);\n            scroll(viewport, {\n                delta: invert ? -imageIdIndexOffset : imageIdIndexOffset,\n                volumeId,\n                debounceLoading: debounceIfNotLoaded,\n                loop: loop,\n            });\n            this.deltaY = deltaY % pixelsPerImage;\n        }\n        else {\n            this.deltaY = deltaY;\n        }\n    }\n    _getPixelPerImage(viewport) {\n        const { element } = viewport;\n        const numberOfSlices = this._getNumberOfSlices(viewport);\n        return Math.max(2, element.offsetHeight / Math.max(numberOfSlices, 8));\n    }\n    _getNumberOfSlices(viewport) {\n        if (viewport instanceof VolumeViewport) {\n            const { numberOfSlices } = csUtils.getImageSliceDataForVolumeViewport(viewport);\n            return numberOfSlices;\n        }\n        else if (viewport instanceof StackViewport) {\n            return viewport.getImageIds().length;\n        }\n    }\n}\nStackScrollTool.toolName = 'StackScroll';\nexport default StackScrollTool;\n//# sourceMappingURL=StackScrollTool.js.map","import { vec3 } from 'gl-matrix';\nexport default function angleBetweenLines(line1, line2) {\n    const [p1, p2] = line1;\n    const [p3, p4] = line2;\n    const v1 = vec3.sub(vec3.create(), p2, p1);\n    const v2 = vec3.sub(vec3.create(), p3, p4);\n    const dot = vec3.dot(v1, v2);\n    const v1Length = vec3.length(v1);\n    const v2Length = vec3.length(v2);\n    const cos = dot / (v1Length * v2Length);\n    const radian = Math.acos(cos);\n    return (radian * 180) / Math.PI;\n}\n//# sourceMappingURL=angleBetweenLines.js.map","import { BaseVolumeViewport, getEnabledElement, } from '@cornerstonejs/core';\nimport { mat4, vec3 } from 'gl-matrix';\nimport { BaseTool } from './base';\nimport angleBetweenLines from '../utilities/math/angle/angleBetweenLines';\nclass PlanarRotateTool extends BaseTool {\n    constructor(toolProps = {}, defaultToolProps = {\n        supportedInteractionTypes: ['Mouse', 'Touch'],\n    }) {\n        super(toolProps, defaultToolProps);\n        this.touchDragCallback = this._dragCallback.bind(this);\n        this.mouseDragCallback = this._dragCallback.bind(this);\n    }\n    _dragCallback(evt) {\n        const { element, currentPoints, startPoints } = evt.detail;\n        const currentPointWorld = currentPoints.world;\n        const startPointWorld = startPoints.world;\n        const enabledElement = getEnabledElement(element);\n        const { viewport } = enabledElement;\n        const camera = viewport.getCamera();\n        const width = element.clientWidth;\n        const height = element.clientHeight;\n        const centerCanvas = [width * 0.5, height * 0.5];\n        const centerWorld = viewport.canvasToWorld(centerCanvas);\n        let angle = angleBetweenLines([startPointWorld, centerWorld], [centerWorld, currentPointWorld]);\n        const { viewPlaneNormal, viewUp } = camera;\n        const v1 = vec3.sub(vec3.create(), centerWorld, startPointWorld);\n        const v2 = vec3.sub(vec3.create(), centerWorld, currentPointWorld);\n        const cross = vec3.cross(vec3.create(), v1, v2);\n        if (vec3.dot(viewPlaneNormal, cross) > 0) {\n            angle = -angle;\n        }\n        if (Number.isNaN(angle))\n            return;\n        if (viewport instanceof BaseVolumeViewport) {\n            const rotAngle = (angle * Math.PI) / 180;\n            const rotMat = mat4.identity(new Float32Array(16));\n            mat4.rotate(rotMat, rotMat, rotAngle, viewPlaneNormal);\n            const rotatedViewUp = vec3.transformMat4(vec3.create(), viewUp, rotMat);\n            viewport.setCamera({ viewUp: rotatedViewUp });\n        }\n        else {\n            const { rotation } = viewport.getProperties();\n            viewport.setProperties({ rotation: rotation + angle });\n        }\n        viewport.render();\n    }\n}\nPlanarRotateTool.toolName = 'PlanarRotate';\nexport default PlanarRotateTool;\n//# sourceMappingURL=PlanarRotateTool.js.map","import { getEnabledElement } from '@cornerstonejs/core';\nimport { BaseTool } from './base';\nimport scroll from '../utilities/scroll';\nclass StackScrollMouseWheelTool extends BaseTool {\n    constructor(toolProps = {}, defaultToolProps = {\n        supportedInteractionTypes: ['Mouse', 'Touch'],\n        configuration: {\n            invert: false,\n            debounceIfNotLoaded: true,\n            loop: false,\n        },\n    }) {\n        super(toolProps, defaultToolProps);\n    }\n    mouseWheelCallback(evt) {\n        const { wheel, element } = evt.detail;\n        const { direction } = wheel;\n        const { invert } = this.configuration;\n        const { viewport } = getEnabledElement(element);\n        const delta = direction * (invert ? -1 : 1);\n        const targetId = this.getTargetId(viewport);\n        const volumeId = targetId.split('volumeId:')[1];\n        scroll(viewport, {\n            delta,\n            debounceLoading: this.configuration.debounceIfNotLoaded,\n            loop: this.configuration.loop,\n            volumeId,\n        });\n    }\n}\nStackScrollMouseWheelTool.toolName = 'StackScrollMouseWheel';\nexport default StackScrollMouseWheelTool;\n//# sourceMappingURL=StackScrollToolMouseWheelTool.js.map","import { vec3 } from 'gl-matrix';\nimport vtkMath from '@kitware/vtk.js/Common/Core/Math';\nimport { getEnabledElement } from '@cornerstonejs/core';\nimport { BaseTool } from './base';\nclass ZoomTool extends BaseTool {\n    constructor(toolProps = {}, defaultToolProps = {\n        supportedInteractionTypes: ['Mouse', 'Touch'],\n        configuration: {\n            zoomToCenter: false,\n            minZoomScale: 0.1,\n            maxZoomScale: 30,\n            pinchToZoom: true,\n            pan: true,\n            invert: false,\n        },\n    }) {\n        super(toolProps, defaultToolProps);\n        this.preMouseDownCallback = (evt) => {\n            const eventData = evt.detail;\n            const { element, currentPoints } = eventData;\n            const worldPos = currentPoints.world;\n            const enabledElement = getEnabledElement(element);\n            const camera = enabledElement.viewport.getCamera();\n            const { focalPoint } = camera;\n            this.initialMousePosWorld = worldPos;\n            let dirVec = vec3.fromValues(focalPoint[0] - worldPos[0], focalPoint[1] - worldPos[1], focalPoint[2] - worldPos[2]);\n            dirVec = vec3.normalize(vec3.create(), dirVec);\n            this.dirVec = dirVec;\n            return false;\n        };\n        this.preTouchStartCallback = (evt) => {\n            if (!this.configuration.pinchToZoom) {\n                return this.preMouseDownCallback(evt);\n            }\n        };\n        this._dragParallelProjection = (evt, viewport, camera, pinch = false) => {\n            const { element, deltaPoints } = evt.detail;\n            const deltaY = pinch\n                ? evt.detail.deltaDistance.canvas\n                : deltaPoints.canvas[1];\n            const size = [element.clientWidth, element.clientHeight];\n            const { parallelScale, focalPoint, position } = camera;\n            const zoomScale = 1.5 / size[1];\n            const k = deltaY * zoomScale * (this.configuration.invert ? -1 : 1);\n            let parallelScaleToSet = (1.0 - k) * parallelScale;\n            let focalPointToSet = focalPoint;\n            let positionToSet = position;\n            if (!this.configuration.zoomToCenter) {\n                const distanceToCanvasCenter = vec3.distance(focalPoint, this.initialMousePosWorld);\n                const zoomScale = 5 / size[1];\n                const k = deltaY * zoomScale * (this.configuration.invert ? -1 : 1);\n                parallelScaleToSet = (1.0 - k) * parallelScale;\n                positionToSet = vec3.scaleAndAdd(vec3.create(), position, this.dirVec, -distanceToCanvasCenter * k);\n                focalPointToSet = vec3.scaleAndAdd(vec3.create(), focalPoint, this.dirVec, -distanceToCanvasCenter * k);\n            }\n            const imageData = viewport.getImageData();\n            let spacing = [1, 1, 1];\n            if (imageData) {\n                spacing = imageData.spacing;\n            }\n            const { minZoomScale, maxZoomScale } = this.configuration;\n            const t = element.clientHeight * spacing[1] * 0.5;\n            const scale = t / parallelScaleToSet;\n            let cappedParallelScale = parallelScaleToSet;\n            let thresholdExceeded = false;\n            if (imageData) {\n                if (scale < minZoomScale) {\n                    cappedParallelScale = t / minZoomScale;\n                    thresholdExceeded = true;\n                }\n                else if (scale >= maxZoomScale) {\n                    cappedParallelScale = t / maxZoomScale;\n                    thresholdExceeded = true;\n                }\n            }\n            viewport.setCamera({\n                parallelScale: cappedParallelScale,\n                focalPoint: thresholdExceeded ? focalPoint : focalPointToSet,\n                position: thresholdExceeded ? position : positionToSet,\n            });\n        };\n        this._dragPerspectiveProjection = (evt, viewport, camera, pinch = false) => {\n            const { element, deltaPoints } = evt.detail;\n            const deltaY = pinch\n                ? evt.detail.deltaDistance.canvas\n                : deltaPoints.canvas[1];\n            const size = [element.clientWidth, element.clientHeight];\n            const { position, focalPoint, viewPlaneNormal } = camera;\n            const distance = vtkMath.distance2BetweenPoints(position, focalPoint);\n            const zoomScale = Math.sqrt(distance) / size[1];\n            const directionOfProjection = [\n                -viewPlaneNormal[0],\n                -viewPlaneNormal[1],\n                -viewPlaneNormal[2],\n            ];\n            const k = this.configuration.invert\n                ? deltaY / zoomScale\n                : deltaY * zoomScale;\n            let tmp = k * directionOfProjection[0];\n            position[0] += tmp;\n            focalPoint[0] += tmp;\n            tmp = k * directionOfProjection[1];\n            position[1] += tmp;\n            focalPoint[1] += tmp;\n            tmp = k * directionOfProjection[2];\n            position[2] += tmp;\n            focalPoint[2] += tmp;\n            viewport.setCamera({ position, focalPoint });\n        };\n        this.initialMousePosWorld = [0, 0, 0];\n        this.dirVec = [0, 0, 0];\n        if (this.configuration.pinchToZoom) {\n            this.touchDragCallback = this._pinchCallback.bind(this);\n        }\n        else {\n            this.touchDragCallback = this._dragCallback.bind(this);\n        }\n        this.mouseDragCallback = this._dragCallback.bind(this);\n    }\n    _pinchCallback(evt) {\n        const pointsList = evt.detail\n            .currentPointsList;\n        if (pointsList.length > 1) {\n            const { element, currentPoints } = evt.detail;\n            const enabledElement = getEnabledElement(element);\n            const { viewport } = enabledElement;\n            const camera = viewport.getCamera();\n            const worldPos = currentPoints.world;\n            const { focalPoint } = camera;\n            this.initialMousePosWorld = worldPos;\n            let dirVec = vec3.fromValues(focalPoint[0] - worldPos[0], focalPoint[1] - worldPos[1], focalPoint[2] - worldPos[2]);\n            dirVec = vec3.normalize(vec3.create(), dirVec);\n            this.dirVec = dirVec;\n            if (camera.parallelProjection) {\n                this._dragParallelProjection(evt, viewport, camera, true);\n            }\n            else {\n                this._dragPerspectiveProjection(evt, viewport, camera, true);\n            }\n            viewport.render();\n        }\n        if (this.configuration.pan) {\n            this._panCallback(evt);\n        }\n    }\n    _dragCallback(evt) {\n        const { element } = evt.detail;\n        const enabledElement = getEnabledElement(element);\n        const { viewport } = enabledElement;\n        const camera = viewport.getCamera();\n        if (camera.parallelProjection) {\n            this._dragParallelProjection(evt, viewport, camera);\n        }\n        else {\n            this._dragPerspectiveProjection(evt, viewport, camera);\n        }\n        viewport.render();\n    }\n    _panCallback(evt) {\n        const { element, deltaPoints } = evt.detail;\n        const enabledElement = getEnabledElement(element);\n        const deltaPointsWorld = deltaPoints.world;\n        const camera = enabledElement.viewport.getCamera();\n        const { focalPoint, position } = camera;\n        const updatedPosition = [\n            position[0] - deltaPointsWorld[0],\n            position[1] - deltaPointsWorld[1],\n            position[2] - deltaPointsWorld[2],\n        ];\n        const updatedFocalPoint = [\n            focalPoint[0] - deltaPointsWorld[0],\n            focalPoint[1] - deltaPointsWorld[1],\n            focalPoint[2] - deltaPointsWorld[2],\n        ];\n        enabledElement.viewport.setCamera({\n            focalPoint: updatedFocalPoint,\n            position: updatedPosition,\n        });\n        enabledElement.viewport.render();\n    }\n}\nZoomTool.toolName = 'Zoom';\nexport default ZoomTool;\n//# sourceMappingURL=ZoomTool.js.map","import { BaseTool } from './base';\nimport { getEnabledElement } from '@cornerstonejs/core';\nimport { mat4, vec3 } from 'gl-matrix';\nconst DIRECTIONS = {\n    X: [1, 0, 0],\n    Y: [0, 1, 0],\n    Z: [0, 0, 1],\n    CUSTOM: [],\n};\nclass VolumeRotateMouseWheelTool extends BaseTool {\n    constructor(toolProps = {}, defaultToolProps = {\n        supportedInteractionTypes: ['Mouse', 'Touch'],\n        configuration: {\n            direction: DIRECTIONS.Z,\n            rotateIncrementDegrees: 0.5,\n        },\n    }) {\n        super(toolProps, defaultToolProps);\n    }\n    mouseWheelCallback(evt) {\n        const { element, wheel } = evt.detail;\n        const enabledElement = getEnabledElement(element);\n        const { viewport } = enabledElement;\n        const { direction, rotateIncrementDegrees } = this.configuration;\n        const camera = viewport.getCamera();\n        const { viewUp, position, focalPoint } = camera;\n        const { direction: deltaY } = wheel;\n        const [cx, cy, cz] = focalPoint;\n        const [ax, ay, az] = direction;\n        const angle = deltaY * rotateIncrementDegrees;\n        const newPosition = [0, 0, 0];\n        const newFocalPoint = [0, 0, 0];\n        const newViewUp = [0, 0, 0];\n        const transform = mat4.identity(new Float32Array(16));\n        mat4.translate(transform, transform, [cx, cy, cz]);\n        mat4.rotate(transform, transform, angle, [ax, ay, az]);\n        mat4.translate(transform, transform, [-cx, -cy, -cz]);\n        vec3.transformMat4(newPosition, position, transform);\n        vec3.transformMat4(newFocalPoint, focalPoint, transform);\n        mat4.identity(transform);\n        mat4.rotate(transform, transform, angle, [ax, ay, az]);\n        vec3.transformMat4(newViewUp, viewUp, transform);\n        viewport.setCamera({\n            position: newPosition,\n            viewUp: newViewUp,\n            focalPoint: newFocalPoint,\n        });\n        viewport.render();\n    }\n}\nVolumeRotateMouseWheelTool.toolName = 'VolumeRotateMouseWheel';\nexport default VolumeRotateMouseWheelTool;\n//# sourceMappingURL=VolumeRotateMouseWheelTool.js.map","import { vec3 } from 'gl-matrix';\nexport default function getWorldWidthAndHeightFromCorners(viewPlaneNormal, viewUp, topLeftWorld, bottomRightWorld) {\n    const viewRight = vec3.create();\n    vec3.cross(viewRight, viewUp, viewPlaneNormal);\n    const pos1 = vec3.fromValues(...topLeftWorld);\n    const pos2 = vec3.fromValues(...bottomRightWorld);\n    const diagonal = vec3.create();\n    vec3.subtract(diagonal, pos1, pos2);\n    const diagonalLength = vec3.length(diagonal);\n    if (diagonalLength < 0.0001) {\n        return { worldWidth: 0, worldHeight: 0 };\n    }\n    const cosTheta = vec3.dot(diagonal, viewRight) / (diagonalLength * vec3.length(viewRight));\n    const sinTheta = Math.sqrt(1 - cosTheta * cosTheta);\n    const worldWidth = sinTheta * diagonalLength;\n    const worldHeight = cosTheta * diagonalLength;\n    return { worldWidth, worldHeight };\n}\n//# sourceMappingURL=getWorldWidthAndHeightFromCorners.js.map","import vtkMath from '@kitware/vtk.js/Common/Core/Math';\nimport { utilities as csUtils } from '@cornerstonejs/core';\nexport default function getPointInLineOfSightWithCriteria(viewport, worldPos, targetVolumeId, criteriaFunction, stepSize = 0.25) {\n    const camera = viewport.getCamera();\n    const { position: cameraPosition } = camera;\n    const { spacingInNormalDirection } = csUtils.getTargetVolumeAndSpacingInNormalDir(viewport, camera, targetVolumeId);\n    const step = spacingInNormalDirection * stepSize;\n    const bounds = viewport.getBounds();\n    const xMin = bounds[0];\n    const xMax = bounds[1];\n    const vector = [0, 0, 0];\n    let point = [0, 0, 0];\n    vtkMath.subtract(worldPos, cameraPosition, vector);\n    let pickedPoint;\n    for (let pointT = xMin; pointT <= xMax; pointT = pointT + step) {\n        point = [pointT, 0, 0];\n        const t = (pointT - cameraPosition[0]) / vector[0];\n        point[1] = t * vector[1] + cameraPosition[1];\n        point[2] = t * vector[2] + cameraPosition[2];\n        if (_inBounds(point, bounds)) {\n            const intensity = viewport.getIntensityFromWorld(point);\n            const pointToPick = criteriaFunction(intensity, point);\n            if (pointToPick) {\n                pickedPoint = pointToPick;\n            }\n        }\n    }\n    return pickedPoint;\n}\nconst _inBounds = function (point, bounds) {\n    const [xMin, xMax, yMin, yMax, zMin, zMax] = bounds;\n    return (point[0] > xMin &&\n        point[0] < xMax &&\n        point[1] > yMin &&\n        point[1] < yMax &&\n        point[2] > zMin &&\n        point[2] < zMax);\n};\n//# sourceMappingURL=getPointInLineOfSightWithCriteria.js.map","import filterAnnotationsWithinSlice from './filterAnnotationsWithinSlice';\nimport getWorldWidthAndHeightFromCorners from './getWorldWidthAndHeightFromCorners';\nimport filterAnnotationsForDisplay from './filterAnnotationsForDisplay';\nimport getPointInLineOfSightWithCriteria from './getPointInLineOfSightWithCriteria';\nexport default {\n    filterAnnotationsWithinSlice,\n    getWorldWidthAndHeightFromCorners,\n    filterAnnotationsForDisplay,\n    getPointInLineOfSightWithCriteria,\n};\nexport { filterAnnotationsWithinSlice, getWorldWidthAndHeightFromCorners, filterAnnotationsForDisplay, getPointInLineOfSightWithCriteria, };\n//# sourceMappingURL=index.js.map","import { VolumeViewport } from '@cornerstonejs/core';\nimport { vec3 } from 'gl-matrix';\nexport default function jumpToWorld(viewport, jumpWorld) {\n    if (!(viewport instanceof VolumeViewport)) {\n        return;\n    }\n    const { focalPoint } = viewport.getCamera();\n    const delta = [0, 0, 0];\n    vec3.sub(delta, jumpWorld, focalPoint);\n    _applyShift(viewport, delta);\n    return true;\n}\nfunction _applyShift(viewport, delta) {\n    const camera = viewport.getCamera();\n    const normal = camera.viewPlaneNormal;\n    const dotProd = vec3.dot(delta, normal);\n    const projectedDelta = vec3.fromValues(normal[0], normal[1], normal[2]);\n    vec3.scale(projectedDelta, projectedDelta, dotProd);\n    if (Math.abs(projectedDelta[0]) > 1e-3 ||\n        Math.abs(projectedDelta[1]) > 1e-3 ||\n        Math.abs(projectedDelta[2]) > 1e-3) {\n        const newFocalPoint = [0, 0, 0];\n        const newPosition = [0, 0, 0];\n        vec3.add(newFocalPoint, camera.focalPoint, projectedDelta);\n        vec3.add(newPosition, camera.position, projectedDelta);\n        viewport.setCamera({\n            focalPoint: newFocalPoint,\n            position: newPosition,\n        });\n        viewport.render();\n    }\n}\n//# sourceMappingURL=jumpToWorld.js.map","import { BaseTool } from './base';\nimport { getEnabledElement, VolumeViewport } from '@cornerstonejs/core';\nimport { getPointInLineOfSightWithCriteria } from '../utilities/planar';\nimport jumpToWorld from '../utilities/viewport/jumpToWorld';\nimport { getToolGroupForViewport } from '../store/ToolGroupManager';\nclass MIPJumpToClickTool extends BaseTool {\n    constructor(toolProps = {}, defaultToolProps = {\n        supportedInteractionTypes: ['Mouse', 'Touch'],\n        configuration: {\n            targetViewportIds: [],\n        },\n    }) {\n        super(toolProps, defaultToolProps);\n    }\n    mouseClickCallback(evt) {\n        const { element, currentPoints } = evt.detail;\n        const enabledElement = getEnabledElement(element);\n        const { viewport, renderingEngine } = enabledElement;\n        const targetId = this.getTargetId(viewport);\n        if (!targetId.startsWith('volumeId')) {\n            throw new Error(`MIPJumpToClickTool: targetId is not a volumeId, you should only use MIPJumpToClickTool with a volumeId as the targetId`);\n        }\n        const volumeId = targetId.split('volumeId:')[1];\n        let maxIntensity = -Infinity;\n        const maxFn = (intensity, point) => {\n            if (intensity > maxIntensity) {\n                maxIntensity = intensity;\n                return point;\n            }\n        };\n        const brightestPoint = getPointInLineOfSightWithCriteria(viewport, currentPoints.world, volumeId, maxFn);\n        if (!brightestPoint || !brightestPoint.length) {\n            return;\n        }\n        const { targetViewportIds, toolGroupId } = this.configuration;\n        const viewports = renderingEngine.getViewports().filter((vp) => {\n            if (targetViewportIds?.indexOf(vp.id) >= 0)\n                return true;\n            const foundToolGroup = getToolGroupForViewport(vp.id, renderingEngine.id);\n            if (toolGroupId && toolGroupId === foundToolGroup?.id)\n                return true;\n            return false;\n        });\n        viewports.forEach((viewport) => {\n            if (viewport instanceof VolumeViewport) {\n                jumpToWorld(viewport, brightestPoint);\n            }\n            else {\n                console.warn('Cannot jump to specified world coordinates for a viewport that is not a VolumeViewport');\n            }\n        });\n    }\n}\nMIPJumpToClickTool.toolName = 'MIPJumpToClickTool';\nexport default MIPJumpToClickTool;\n//# sourceMappingURL=MIPJumpToClickTool.js.map","export default function filterViewportsWithFrameOfReferenceUID(viewports, FrameOfReferenceUID) {\n    const numViewports = viewports.length;\n    const viewportsWithFrameOfReferenceUID = [];\n    for (let vp = 0; vp < numViewports; vp++) {\n        const viewport = viewports[vp];\n        if (viewport.getFrameOfReferenceUID() === FrameOfReferenceUID) {\n            viewportsWithFrameOfReferenceUID.push(viewport);\n        }\n    }\n    return viewportsWithFrameOfReferenceUID;\n}\n//# sourceMappingURL=filterViewportsWithFrameOfReferenceUID.js.map","import { ToolGroupManager } from '../../store';\nimport { ToolModes } from '../../enums';\nconst { Active, Passive, Enabled } = ToolModes;\nexport default function filterViewportsWithToolEnabled(viewports, toolName) {\n    const numViewports = viewports.length;\n    const viewportsWithToolEnabled = [];\n    for (let vp = 0; vp < numViewports; vp++) {\n        const viewport = viewports[vp];\n        const toolGroup = ToolGroupManager.getToolGroupForViewport(viewport.id, viewport.renderingEngineId);\n        if (!toolGroup) {\n            continue;\n        }\n        const hasTool = _toolGroupHasActiveEnabledOrPassiveTool(toolGroup, toolName);\n        if (hasTool) {\n            viewportsWithToolEnabled.push(viewport);\n        }\n    }\n    return viewportsWithToolEnabled;\n}\nfunction _toolGroupHasActiveEnabledOrPassiveTool(toolGroup, toolName) {\n    const { toolOptions } = toolGroup;\n    const tool = toolOptions[toolName];\n    if (!tool) {\n        return false;\n    }\n    const toolMode = tool.mode;\n    return toolMode === Active || toolMode === Passive || toolMode === Enabled;\n}\n//# sourceMappingURL=filterViewportsWithToolEnabled.js.map","import { vec3 } from 'gl-matrix';\nexport function filterViewportsWithParallelNormals(viewports, camera, EPS = 0.999) {\n    return viewports.filter((viewport) => {\n        const vpCamera = viewport.getCamera();\n        const isParallel = Math.abs(vec3.dot(vpCamera.viewPlaneNormal, camera.viewPlaneNormal)) >\n            EPS;\n        return isParallel;\n    });\n}\nexport default filterViewportsWithParallelNormals;\n//# sourceMappingURL=filterViewportsWithParallelNormals.js.map","import { getEnabledElement } from '@cornerstonejs/core';\nimport filterViewportsWithFrameOfReferenceUID from './filterViewportsWithFrameOfReferenceUID';\nimport filterViewportsWithToolEnabled from './filterViewportsWithToolEnabled';\nimport filterViewportsWithParallelNormals from './filterViewportsWithParallelNormals';\nexport default function getViewportIdsWithToolToRender(element, toolName, requireParallelNormals = true) {\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine, FrameOfReferenceUID } = enabledElement;\n    let viewports = renderingEngine.getViewports();\n    viewports = filterViewportsWithFrameOfReferenceUID(viewports, FrameOfReferenceUID);\n    viewports = filterViewportsWithToolEnabled(viewports, toolName);\n    const viewport = renderingEngine.getViewport(enabledElement.viewportId);\n    if (requireParallelNormals) {\n        viewports = filterViewportsWithParallelNormals(viewports, viewport.getCamera());\n    }\n    const viewportIds = viewports.map((vp) => vp.id);\n    return viewportIds;\n}\n//# sourceMappingURL=getViewportIdsWithToolToRender.js.map","const EPSILON = 1e-6;\nconst INSIDE = 1;\nconst OUTSIDE = 0;\nfunction clipT(num, denom, c) {\n    const [tE, tL] = c;\n    if (Math.abs(denom) < EPSILON)\n        return num < 0;\n    const t = num / denom;\n    if (denom > 0) {\n        if (t > tL)\n            return 0;\n        if (t > tE)\n            c[0] = t;\n    }\n    else {\n        if (t < tE)\n            return 0;\n        if (t < tL)\n            c[1] = t;\n    }\n    return 1;\n}\nexport default function clip(a, b, box, da, db) {\n    const [x1, y1] = a;\n    const [x2, y2] = b;\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    if (da === undefined || db === undefined) {\n        da = a;\n        db = b;\n    }\n    else {\n        da[0] = a[0];\n        da[1] = a[1];\n        db[0] = b[0];\n        db[1] = b[1];\n    }\n    if (Math.abs(dx) < EPSILON &&\n        Math.abs(dy) < EPSILON &&\n        x1 >= box[0] &&\n        x1 <= box[2] &&\n        y1 >= box[1] &&\n        y1 <= box[3]) {\n        return INSIDE;\n    }\n    const c = [0, 1];\n    if (clipT(box[0] - x1, dx, c) &&\n        clipT(x1 - box[2], -dx, c) &&\n        clipT(box[1] - y1, dy, c) &&\n        clipT(y1 - box[3], -dy, c)) {\n        const [tE, tL] = c;\n        if (tL < 1) {\n            db[0] = x1 + tL * dx;\n            db[1] = y1 + tL * dy;\n        }\n        if (tE > 0) {\n            da[0] += tE * dx;\n            da[1] += tE * dy;\n        }\n        return INSIDE;\n    }\n    return OUTSIDE;\n}\n//# sourceMappingURL=liangBarksyClip.js.map","function dist2(p1, p2) {\n    return (p1[0] - p2[0]) * (p1[0] - p2[0]) + (p1[1] - p2[1]) * (p1[1] - p2[1]);\n}\nexport default function distanceToPointSquared(lineStart, lineEnd, point) {\n    const d2 = dist2(lineStart, lineEnd);\n    if (d2 === 0) {\n        return dist2(point, lineStart);\n    }\n    const t = ((point[0] - lineStart[0]) * (lineEnd[0] - lineStart[0]) +\n        (point[1] - lineStart[1]) * (lineEnd[1] - lineStart[1])) /\n        d2;\n    if (t < 0) {\n        return dist2(point, lineStart);\n    }\n    if (t > 1) {\n        return dist2(point, lineEnd);\n    }\n    const pt = [\n        lineStart[0] + t * (lineEnd[0] - lineStart[0]),\n        lineStart[1] + t * (lineEnd[1] - lineStart[1]),\n    ];\n    return dist2(point, pt);\n}\n//# sourceMappingURL=distanceToPointSquared.js.map","import distanceToPointSquared from './distanceToPointSquared';\nexport default function distanceToPoint(lineStart, lineEnd, point) {\n    if (lineStart.length !== 2 || lineEnd.length !== 2 || point.length !== 2) {\n        throw Error('lineStart, lineEnd, and point should have 2 elements of [x, y]');\n    }\n    return Math.sqrt(distanceToPointSquared(lineStart, lineEnd, point));\n}\n//# sourceMappingURL=distanceToPoint.js.map","function sign(x) {\n    return typeof x === 'number'\n        ? x\n            ? x < 0\n                ? -1\n                : 1\n            : x === x\n                ? 0\n                : NaN\n        : NaN;\n}\nexport default function intersectLine(line1Start, line1End, line2Start, line2End) {\n    const [x1, y1] = line1Start;\n    const [x2, y2] = line1End;\n    const [x3, y3] = line2Start;\n    const [x4, y4] = line2End;\n    const a1 = y2 - y1;\n    const b1 = x1 - x2;\n    const c1 = x2 * y1 - x1 * y2;\n    const r3 = a1 * x3 + b1 * y3 + c1;\n    const r4 = a1 * x4 + b1 * y4 + c1;\n    if (r3 !== 0 && r4 !== 0 && sign(r3) === sign(r4)) {\n        return;\n    }\n    const a2 = y4 - y3;\n    const b2 = x3 - x4;\n    const c2 = x4 * y3 - x3 * y4;\n    const r1 = a2 * x1 + b2 * y1 + c2;\n    const r2 = a2 * x2 + b2 * y2 + c2;\n    if (r1 !== 0 && r2 !== 0 && sign(r1) === sign(r2)) {\n        return;\n    }\n    const denom = a1 * b2 - a2 * b1;\n    let num;\n    num = b1 * c2 - b2 * c1;\n    const x = num / denom;\n    num = a2 * c1 - a1 * c2;\n    const y = num / denom;\n    const intersectionPoint = [x, y];\n    return intersectionPoint;\n}\n//# sourceMappingURL=intersectLine.js.map","import { vec2, vec3 } from 'gl-matrix';\nimport vtkMath from '@kitware/vtk.js/Common/Core/Math';\nimport vtkMatrixBuilder from '@kitware/vtk.js/Common/Core/MatrixBuilder';\nimport { AnnotationTool } from './base';\nimport { getEnabledElementByIds, getEnabledElement, utilities as csUtils, Enums, } from '@cornerstonejs/core';\nimport { getToolGroup, getToolGroupForViewport, } from '../store/ToolGroupManager';\nimport { addAnnotation, getAnnotations, removeAnnotation, } from '../stateManagement/annotation/annotationState';\nimport { drawCircle as drawCircleSvg, drawHandles as drawHandlesSvg, drawLine as drawLineSvg, } from '../drawingSvg';\nimport { state } from '../store';\nimport { Events } from '../enums';\nimport { getViewportIdsWithToolToRender } from '../utilities/viewportFilters';\nimport { resetElementCursor, hideElementCursor, } from '../cursors/elementCursor';\nimport liangBarksyClip from '../utilities/math/vec2/liangBarksyClip';\nimport * as lineSegment from '../utilities/math/line';\nimport { isAnnotationLocked } from '../stateManagement/annotation/annotationLocking';\nimport triggerAnnotationRenderForViewportIds from '../utilities/triggerAnnotationRenderForViewportIds';\nimport { CONSTANTS } from '@cornerstonejs/core';\nconst { RENDERING_DEFAULTS } = CONSTANTS;\nfunction defaultReferenceLineColor() {\n    return 'rgb(0, 200, 0)';\n}\nfunction defaultReferenceLineControllable() {\n    return true;\n}\nfunction defaultReferenceLineDraggableRotatable() {\n    return true;\n}\nfunction defaultReferenceLineSlabThicknessControlsOn() {\n    return true;\n}\nconst OPERATION = {\n    DRAG: 1,\n    ROTATE: 2,\n    SLAB: 3,\n};\nconst EPSILON = 1e-3;\nclass CrosshairsTool extends AnnotationTool {\n    constructor(toolProps = {}, defaultToolProps = {\n        supportedInteractionTypes: ['Mouse'],\n        configuration: {\n            shadow: true,\n            viewportIndicators: true,\n            autoPan: {\n                enabled: false,\n                panSize: 10,\n            },\n            referenceLinesCenterGapRadius: 20,\n            filterActorUIDsToSetSlabThickness: [],\n            slabThicknessBlendMode: Enums.BlendModes.MAXIMUM_INTENSITY_BLEND,\n            mobile: {\n                enabled: false,\n                opacity: 0.8,\n                handleRadius: 9,\n            },\n        },\n    }) {\n        super(toolProps, defaultToolProps);\n        this.toolCenter = [0, 0, 0];\n        this.initializeViewport = ({ renderingEngineId, viewportId, }) => {\n            const enabledElement = getEnabledElementByIds(viewportId, renderingEngineId);\n            const { FrameOfReferenceUID, viewport } = enabledElement;\n            const { element } = viewport;\n            const { position, focalPoint, viewPlaneNormal } = viewport.getCamera();\n            let annotations = this._getAnnotations(enabledElement);\n            annotations = this.filterInteractableAnnotationsForElement(element, annotations);\n            if (annotations.length) {\n                removeAnnotation(annotations[0].annotationUID);\n            }\n            const annotation = {\n                highlighted: false,\n                metadata: {\n                    cameraPosition: [...position],\n                    cameraFocalPoint: [...focalPoint],\n                    FrameOfReferenceUID,\n                    toolName: this.getToolName(),\n                },\n                data: {\n                    handles: {\n                        rotationPoints: [],\n                        slabThicknessPoints: [],\n                        toolCenter: this.toolCenter,\n                    },\n                    activeOperation: null,\n                    activeViewportIds: [],\n                    viewportId,\n                },\n            };\n            addAnnotation(annotation, element);\n            return {\n                normal: viewPlaneNormal,\n                point: viewport.canvasToWorld([\n                    viewport.canvas.clientWidth / 2,\n                    viewport.canvas.clientHeight / 2,\n                ]),\n            };\n        };\n        this._getViewportsInfo = () => {\n            const viewports = getToolGroup(this.toolGroupId).viewportsInfo;\n            return viewports;\n        };\n        this.computeToolCenter = (viewportsInfo) => {\n            if (!viewportsInfo.length || viewportsInfo.length === 1) {\n                throw new Error('For crosshairs to operate, at least two viewports must be given.');\n            }\n            const [firstViewport, secondViewport, thirdViewport] = viewportsInfo;\n            const { normal: normal1, point: point1 } = this.initializeViewport(firstViewport);\n            const { normal: normal2, point: point2 } = this.initializeViewport(secondViewport);\n            let normal3 = [0, 0, 0];\n            let point3 = vec3.create();\n            if (thirdViewport) {\n                ({ normal: normal3, point: point3 } =\n                    this.initializeViewport(thirdViewport));\n            }\n            else {\n                vec3.add(point3, point1, point2);\n                vec3.scale(point3, point3, 0.5);\n                vec3.cross(normal3, normal1, normal2);\n            }\n            const firstPlane = csUtils.planar.planeEquation(normal1, point1);\n            const secondPlane = csUtils.planar.planeEquation(normal2, point2);\n            const thirdPlane = csUtils.planar.planeEquation(normal3, point3);\n            this.toolCenter = csUtils.planar.threePlaneIntersection(firstPlane, secondPlane, thirdPlane);\n            const { renderingEngine } = getEnabledElementByIds(viewportsInfo[0].viewportId, viewportsInfo[0].renderingEngineId);\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportsInfo.map(({ viewportId }) => viewportId));\n        };\n        this.addNewAnnotation = (evt) => {\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            const { currentPoints } = eventDetail;\n            const jumpWorld = currentPoints.world;\n            const enabledElement = getEnabledElement(element);\n            const { viewport } = enabledElement;\n            this._jump(enabledElement, jumpWorld);\n            const annotations = this._getAnnotations(enabledElement);\n            const filteredAnnotations = this.filterInteractableAnnotationsForElement(viewport.element, annotations);\n            const { data } = filteredAnnotations[0];\n            const { rotationPoints } = data.handles;\n            const viewportIdArray = [];\n            for (let i = 0; i < rotationPoints.length - 1; ++i) {\n                const otherViewport = rotationPoints[i][1];\n                const viewportControllable = this._getReferenceLineControllable(otherViewport.id);\n                const viewportDraggableRotatable = this._getReferenceLineDraggableRotatable(otherViewport.id);\n                if (!viewportControllable || !viewportDraggableRotatable) {\n                    continue;\n                }\n                viewportIdArray.push(otherViewport.id);\n                i++;\n            }\n            data.activeViewportIds = [...viewportIdArray];\n            data.handles.activeOperation = OPERATION.DRAG;\n            evt.preventDefault();\n            hideElementCursor(element);\n            this._activateModify(element);\n            return filteredAnnotations[0];\n        };\n        this.cancel = () => {\n            console.log('Not implemented yet');\n        };\n        this.handleSelectedCallback = (evt, annotation) => {\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            annotation.highlighted = true;\n            this._activateModify(element);\n            hideElementCursor(element);\n            evt.preventDefault();\n        };\n        this.isPointNearTool = (element, annotation, canvasCoords, proximity) => {\n            if (this._pointNearTool(element, annotation, canvasCoords, 6)) {\n                return true;\n            }\n            return false;\n        };\n        this.toolSelectedCallback = (evt, annotation, interactionType) => {\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            annotation.highlighted = true;\n            this._activateModify(element);\n            hideElementCursor(element);\n            evt.preventDefault();\n        };\n        this.onCameraModified = (evt) => {\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            const enabledElement = getEnabledElement(element);\n            const { renderingEngine } = enabledElement;\n            const viewport = enabledElement.viewport;\n            const annotations = this._getAnnotations(enabledElement);\n            const filteredToolAnnotations = this.filterInteractableAnnotationsForElement(element, annotations);\n            const viewportAnnotation = filteredToolAnnotations[0];\n            if (!viewportAnnotation) {\n                return;\n            }\n            const currentCamera = viewport.getCamera();\n            const oldCameraPosition = viewportAnnotation.metadata.cameraPosition;\n            const deltaCameraPosition = [0, 0, 0];\n            vtkMath.subtract(currentCamera.position, oldCameraPosition, deltaCameraPosition);\n            const oldCameraFocalPoint = viewportAnnotation.metadata.cameraFocalPoint;\n            const deltaCameraFocalPoint = [0, 0, 0];\n            vtkMath.subtract(currentCamera.focalPoint, oldCameraFocalPoint, deltaCameraFocalPoint);\n            viewportAnnotation.metadata.cameraPosition = [...currentCamera.position];\n            viewportAnnotation.metadata.cameraFocalPoint = [\n                ...currentCamera.focalPoint,\n            ];\n            const viewportControllable = this._getReferenceLineControllable(viewport.id);\n            const viewportDraggableRotatable = this._getReferenceLineDraggableRotatable(viewport.id);\n            if (!csUtils.isEqual(currentCamera.position, oldCameraPosition, 1e-3) &&\n                viewportControllable &&\n                viewportDraggableRotatable) {\n                let isRotation = false;\n                const cameraModifiedSameForPosAndFocalPoint = csUtils.isEqual(deltaCameraPosition, deltaCameraFocalPoint, 1e-3);\n                if (!cameraModifiedSameForPosAndFocalPoint) {\n                    isRotation = true;\n                }\n                const cameraModifiedInPlane = Math.abs(vtkMath.dot(deltaCameraPosition, currentCamera.viewPlaneNormal)) < 1e-2;\n                if (!isRotation && !cameraModifiedInPlane) {\n                    this.toolCenter[0] += deltaCameraPosition[0];\n                    this.toolCenter[1] += deltaCameraPosition[1];\n                    this.toolCenter[2] += deltaCameraPosition[2];\n                }\n            }\n            if (this.configuration.autoPan?.enabled) {\n                const toolGroup = getToolGroupForViewport(viewport.id, renderingEngine.id);\n                const otherViewportIds = toolGroup\n                    .getViewportIds()\n                    .filter((id) => id !== viewport.id);\n                otherViewportIds.forEach((viewportId) => {\n                    this._autoPanViewportIfNecessary(viewportId, renderingEngine);\n                });\n            }\n            const requireSameOrientation = false;\n            const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName(), requireSameOrientation);\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n        };\n        this.mouseMoveCallback = (evt, filteredToolAnnotations) => {\n            const { element, currentPoints } = evt.detail;\n            const canvasCoords = currentPoints.canvas;\n            let imageNeedsUpdate = false;\n            for (let i = 0; i < filteredToolAnnotations.length; i++) {\n                const annotation = filteredToolAnnotations[i];\n                if (isAnnotationLocked(annotation)) {\n                    continue;\n                }\n                const { data, highlighted } = annotation;\n                if (!data.handles) {\n                    continue;\n                }\n                const previousActiveOperation = data.handles.activeOperation;\n                const previousActiveViewportIds = data.activeViewportIds && data.activeViewportIds.length > 0\n                    ? [...data.activeViewportIds]\n                    : [];\n                data.activeViewportIds = [];\n                data.handles.activeOperation = null;\n                const handleNearImagePoint = this.getHandleNearImagePoint(element, annotation, canvasCoords, 6);\n                let near = false;\n                if (handleNearImagePoint) {\n                    near = true;\n                }\n                else {\n                    near = this._pointNearTool(element, annotation, canvasCoords, 6);\n                }\n                const nearToolAndNotMarkedActive = near && !highlighted;\n                const notNearToolAndMarkedActive = !near && highlighted;\n                if (nearToolAndNotMarkedActive || notNearToolAndMarkedActive) {\n                    annotation.highlighted = !highlighted;\n                    imageNeedsUpdate = true;\n                }\n                else if (data.handles.activeOperation !== previousActiveOperation ||\n                    !this._areViewportIdArraysEqual(data.activeViewportIds, previousActiveViewportIds)) {\n                    imageNeedsUpdate = true;\n                }\n            }\n            return imageNeedsUpdate;\n        };\n        this.filterInteractableAnnotationsForElement = (element, annotations) => {\n            if (!annotations || !annotations.length) {\n                return [];\n            }\n            const enabledElement = getEnabledElement(element);\n            const { viewportId } = enabledElement;\n            const viewportUIDSpecificCrosshairs = annotations.filter((annotation) => annotation.data.viewportId === viewportId);\n            return viewportUIDSpecificCrosshairs;\n        };\n        this.renderAnnotation = (enabledElement, svgDrawingHelper) => {\n            let renderStatus = false;\n            const { viewport, renderingEngine } = enabledElement;\n            const { element } = viewport;\n            const annotations = this._getAnnotations(enabledElement);\n            const camera = viewport.getCamera();\n            const filteredToolAnnotations = this.filterInteractableAnnotationsForElement(element, annotations);\n            const viewportAnnotation = filteredToolAnnotations[0];\n            if (!annotations?.length || !viewportAnnotation?.data) {\n                return renderStatus;\n            }\n            const annotationUID = viewportAnnotation.annotationUID;\n            const { clientWidth, clientHeight } = viewport.canvas;\n            const canvasDiagonalLength = Math.sqrt(clientWidth * clientWidth + clientHeight * clientHeight);\n            const canvasMinDimensionLength = Math.min(clientWidth, clientHeight);\n            const data = viewportAnnotation.data;\n            const crosshairCenterCanvas = viewport.worldToCanvas(this.toolCenter);\n            const otherViewportAnnotations = this._filterAnnotationsByUniqueViewportOrientations(enabledElement, annotations);\n            const referenceLines = [];\n            const canvasBox = [0, 0, clientWidth, clientHeight];\n            otherViewportAnnotations.forEach((annotation) => {\n                const { data } = annotation;\n                data.handles.toolCenter = this.toolCenter;\n                const otherViewport = renderingEngine.getViewport(data.viewportId);\n                const otherCamera = otherViewport.getCamera();\n                const otherViewportControllable = this._getReferenceLineControllable(otherViewport.id);\n                const otherViewportDraggableRotatable = this._getReferenceLineDraggableRotatable(otherViewport.id);\n                const otherViewportSlabThicknessControlsOn = this._getReferenceLineSlabThicknessControlsOn(otherViewport.id);\n                const { clientWidth, clientHeight } = otherViewport.canvas;\n                const otherCanvasDiagonalLength = Math.sqrt(clientWidth * clientWidth + clientHeight * clientHeight);\n                const otherCanvasCenter = [\n                    clientWidth * 0.5,\n                    clientHeight * 0.5,\n                ];\n                const otherViewportCenterWorld = otherViewport.canvasToWorld(otherCanvasCenter);\n                const direction = [0, 0, 0];\n                vtkMath.cross(camera.viewPlaneNormal, otherCamera.viewPlaneNormal, direction);\n                vtkMath.normalize(direction);\n                vtkMath.multiplyScalar(direction, otherCanvasDiagonalLength);\n                const pointWorld0 = [0, 0, 0];\n                vtkMath.add(otherViewportCenterWorld, direction, pointWorld0);\n                const pointWorld1 = [0, 0, 0];\n                vtkMath.subtract(otherViewportCenterWorld, direction, pointWorld1);\n                const pointCanvas0 = viewport.worldToCanvas(pointWorld0);\n                const otherViewportCenterCanvas = viewport.worldToCanvas(otherViewportCenterWorld);\n                const canvasUnitVectorFromCenter = vec2.create();\n                vec2.subtract(canvasUnitVectorFromCenter, pointCanvas0, otherViewportCenterCanvas);\n                vec2.normalize(canvasUnitVectorFromCenter, canvasUnitVectorFromCenter);\n                const canvasVectorFromCenterLong = vec2.create();\n                vec2.scale(canvasVectorFromCenterLong, canvasUnitVectorFromCenter, canvasDiagonalLength * 100);\n                const canvasVectorFromCenterMid = vec2.create();\n                vec2.scale(canvasVectorFromCenterMid, canvasUnitVectorFromCenter, canvasMinDimensionLength * 0.4);\n                const canvasVectorFromCenterShort = vec2.create();\n                vec2.scale(canvasVectorFromCenterShort, canvasUnitVectorFromCenter, canvasMinDimensionLength * 0.2);\n                const canvasVectorFromCenterStart = vec2.create();\n                const centerGap = this.configuration.referenceLinesCenterGapRadius;\n                vec2.scale(canvasVectorFromCenterStart, canvasUnitVectorFromCenter, otherViewportAnnotations.length === 2 ? centerGap : 0);\n                const refLinePointOne = vec2.create();\n                const refLinePointTwo = vec2.create();\n                const refLinePointThree = vec2.create();\n                const refLinePointFour = vec2.create();\n                let refLinesCenter = vec2.clone(crosshairCenterCanvas);\n                if (!otherViewportDraggableRotatable || !otherViewportControllable) {\n                    refLinesCenter = vec2.clone(otherViewportCenterCanvas);\n                }\n                vec2.add(refLinePointOne, refLinesCenter, canvasVectorFromCenterStart);\n                vec2.add(refLinePointTwo, refLinesCenter, canvasVectorFromCenterLong);\n                vec2.subtract(refLinePointThree, refLinesCenter, canvasVectorFromCenterStart);\n                vec2.subtract(refLinePointFour, refLinesCenter, canvasVectorFromCenterLong);\n                liangBarksyClip(refLinePointOne, refLinePointTwo, canvasBox);\n                liangBarksyClip(refLinePointThree, refLinePointFour, canvasBox);\n                const rotHandleOne = vec2.create();\n                vec2.subtract(rotHandleOne, crosshairCenterCanvas, canvasVectorFromCenterMid);\n                const rotHandleTwo = vec2.create();\n                vec2.add(rotHandleTwo, crosshairCenterCanvas, canvasVectorFromCenterMid);\n                let stHandlesCenterCanvas = vec2.clone(crosshairCenterCanvas);\n                if (!otherViewportDraggableRotatable &&\n                    otherViewportSlabThicknessControlsOn) {\n                    stHandlesCenterCanvas = vec2.clone(otherViewportCenterCanvas);\n                }\n                let stHandlesCenterWorld = [...this.toolCenter];\n                if (!otherViewportDraggableRotatable &&\n                    otherViewportSlabThicknessControlsOn) {\n                    stHandlesCenterWorld = [...otherViewportCenterWorld];\n                }\n                const worldUnitVectorFromCenter = [0, 0, 0];\n                vtkMath.subtract(pointWorld0, pointWorld1, worldUnitVectorFromCenter);\n                vtkMath.normalize(worldUnitVectorFromCenter);\n                const { viewPlaneNormal } = camera;\n                const { matrix } = vtkMatrixBuilder\n                    .buildFromDegree()\n                    .rotate(90, viewPlaneNormal);\n                const worldUnitOrthoVectorFromCenter = [0, 0, 0];\n                vec3.transformMat4(worldUnitOrthoVectorFromCenter, worldUnitVectorFromCenter, matrix);\n                const slabThicknessValue = otherViewport.getSlabThickness();\n                const worldOrthoVectorFromCenter = [\n                    ...worldUnitOrthoVectorFromCenter,\n                ];\n                vtkMath.multiplyScalar(worldOrthoVectorFromCenter, slabThicknessValue);\n                const worldVerticalRefPoint = [0, 0, 0];\n                vtkMath.add(stHandlesCenterWorld, worldOrthoVectorFromCenter, worldVerticalRefPoint);\n                const canvasVerticalRefPoint = viewport.worldToCanvas(worldVerticalRefPoint);\n                const canvasOrthoVectorFromCenter = vec2.create();\n                vec2.subtract(canvasOrthoVectorFromCenter, stHandlesCenterCanvas, canvasVerticalRefPoint);\n                const stLinePointOne = vec2.create();\n                vec2.subtract(stLinePointOne, stHandlesCenterCanvas, canvasVectorFromCenterLong);\n                vec2.add(stLinePointOne, stLinePointOne, canvasOrthoVectorFromCenter);\n                const stLinePointTwo = vec2.create();\n                vec2.add(stLinePointTwo, stHandlesCenterCanvas, canvasVectorFromCenterLong);\n                vec2.add(stLinePointTwo, stLinePointTwo, canvasOrthoVectorFromCenter);\n                liangBarksyClip(stLinePointOne, stLinePointTwo, canvasBox);\n                const stLinePointThree = vec2.create();\n                vec2.add(stLinePointThree, stHandlesCenterCanvas, canvasVectorFromCenterLong);\n                vec2.subtract(stLinePointThree, stLinePointThree, canvasOrthoVectorFromCenter);\n                const stLinePointFour = vec2.create();\n                vec2.subtract(stLinePointFour, stHandlesCenterCanvas, canvasVectorFromCenterLong);\n                vec2.subtract(stLinePointFour, stLinePointFour, canvasOrthoVectorFromCenter);\n                liangBarksyClip(stLinePointThree, stLinePointFour, canvasBox);\n                const stHandleOne = vec2.create();\n                const stHandleTwo = vec2.create();\n                const stHandleThree = vec2.create();\n                const stHandleFour = vec2.create();\n                vec2.subtract(stHandleOne, stHandlesCenterCanvas, canvasVectorFromCenterShort);\n                vec2.add(stHandleOne, stHandleOne, canvasOrthoVectorFromCenter);\n                vec2.add(stHandleTwo, stHandlesCenterCanvas, canvasVectorFromCenterShort);\n                vec2.add(stHandleTwo, stHandleTwo, canvasOrthoVectorFromCenter);\n                vec2.subtract(stHandleThree, stHandlesCenterCanvas, canvasVectorFromCenterShort);\n                vec2.subtract(stHandleThree, stHandleThree, canvasOrthoVectorFromCenter);\n                vec2.add(stHandleFour, stHandlesCenterCanvas, canvasVectorFromCenterShort);\n                vec2.subtract(stHandleFour, stHandleFour, canvasOrthoVectorFromCenter);\n                referenceLines.push([\n                    otherViewport,\n                    refLinePointOne,\n                    refLinePointTwo,\n                    refLinePointThree,\n                    refLinePointFour,\n                    stLinePointOne,\n                    stLinePointTwo,\n                    stLinePointThree,\n                    stLinePointFour,\n                    rotHandleOne,\n                    rotHandleTwo,\n                    stHandleOne,\n                    stHandleTwo,\n                    stHandleThree,\n                    stHandleFour,\n                ]);\n            });\n            const newRtpoints = [];\n            const newStpoints = [];\n            const viewportColor = this._getReferenceLineColor(viewport.id);\n            const color = viewportColor !== undefined ? viewportColor : 'rgb(200, 200, 200)';\n            referenceLines.forEach((line, lineIndex) => {\n                const otherViewport = line[0];\n                const viewportColor = this._getReferenceLineColor(otherViewport.id);\n                const viewportControllable = this._getReferenceLineControllable(otherViewport.id);\n                const viewportDraggableRotatable = this._getReferenceLineDraggableRotatable(otherViewport.id) ||\n                    this.configuration.mobile?.enabled;\n                const viewportSlabThicknessControlsOn = this._getReferenceLineSlabThicknessControlsOn(otherViewport.id) ||\n                    this.configuration.mobile?.enabled;\n                const selectedViewportId = data.activeViewportIds.find((id) => id === otherViewport.id);\n                let color = viewportColor !== undefined ? viewportColor : 'rgb(200, 200, 200)';\n                let lineWidth = 1;\n                const lineActive = data.handles.activeOperation !== null &&\n                    data.handles.activeOperation === OPERATION.DRAG &&\n                    selectedViewportId;\n                if (lineActive) {\n                    lineWidth = 2.5;\n                }\n                let lineUID = `${lineIndex}`;\n                if (viewportControllable && viewportDraggableRotatable) {\n                    lineUID = `${lineIndex}One`;\n                    drawLineSvg(svgDrawingHelper, annotationUID, lineUID, line[1], line[2], {\n                        color,\n                        lineWidth,\n                    });\n                    lineUID = `${lineIndex}Two`;\n                    drawLineSvg(svgDrawingHelper, annotationUID, lineUID, line[3], line[4], {\n                        color,\n                        lineWidth,\n                    });\n                }\n                else {\n                    drawLineSvg(svgDrawingHelper, annotationUID, lineUID, line[2], line[4], {\n                        color,\n                        lineWidth,\n                    });\n                }\n                if (viewportControllable) {\n                    color =\n                        viewportColor !== undefined ? viewportColor : 'rgb(200, 200, 200)';\n                    const rotHandlesActive = data.handles.activeOperation === OPERATION.ROTATE;\n                    const rotationHandles = [line[9], line[10]];\n                    const rotHandleWorldOne = [\n                        viewport.canvasToWorld(line[9]),\n                        otherViewport,\n                        line[1],\n                        line[2],\n                    ];\n                    const rotHandleWorldTwo = [\n                        viewport.canvasToWorld(line[10]),\n                        otherViewport,\n                        line[3],\n                        line[4],\n                    ];\n                    newRtpoints.push(rotHandleWorldOne, rotHandleWorldTwo);\n                    const slabThicknessHandlesActive = data.handles.activeOperation === OPERATION.SLAB;\n                    const slabThicknessHandles = [line[11], line[12], line[13], line[14]];\n                    const slabThicknessHandleWorldOne = [\n                        viewport.canvasToWorld(line[11]),\n                        otherViewport,\n                        line[5],\n                        line[6],\n                    ];\n                    const slabThicknessHandleWorldTwo = [\n                        viewport.canvasToWorld(line[12]),\n                        otherViewport,\n                        line[5],\n                        line[6],\n                    ];\n                    const slabThicknessHandleWorldThree = [\n                        viewport.canvasToWorld(line[13]),\n                        otherViewport,\n                        line[7],\n                        line[8],\n                    ];\n                    const slabThicknessHandleWorldFour = [\n                        viewport.canvasToWorld(line[14]),\n                        otherViewport,\n                        line[7],\n                        line[8],\n                    ];\n                    newStpoints.push(slabThicknessHandleWorldOne, slabThicknessHandleWorldTwo, slabThicknessHandleWorldThree, slabThicknessHandleWorldFour);\n                    if ((lineActive || this.configuration.mobile?.enabled) &&\n                        !rotHandlesActive &&\n                        !slabThicknessHandlesActive &&\n                        viewportDraggableRotatable &&\n                        viewportSlabThicknessControlsOn) {\n                        let handleUID = `${lineIndex}One`;\n                        drawHandlesSvg(svgDrawingHelper, annotationUID, handleUID, rotationHandles, {\n                            color,\n                            handleRadius: this.configuration.mobile?.enabled\n                                ? this.configuration.mobile?.handleRadius\n                                : 3,\n                            opacity: this.configuration.mobile?.enabled\n                                ? this.configuration.mobile?.opacity\n                                : 1,\n                            type: 'circle',\n                        });\n                        handleUID = `${lineIndex}Two`;\n                        drawHandlesSvg(svgDrawingHelper, annotationUID, handleUID, slabThicknessHandles, {\n                            color,\n                            handleRadius: this.configuration.mobile?.enabled\n                                ? this.configuration.mobile?.handleRadius\n                                : 3,\n                            opacity: this.configuration.mobile?.enabled\n                                ? this.configuration.mobile?.opacity\n                                : 1,\n                            type: 'rect',\n                        });\n                    }\n                    else if (lineActive &&\n                        !rotHandlesActive &&\n                        !slabThicknessHandlesActive &&\n                        viewportDraggableRotatable) {\n                        const handleUID = `${lineIndex}`;\n                        drawHandlesSvg(svgDrawingHelper, annotationUID, handleUID, rotationHandles, {\n                            color,\n                            handleRadius: this.configuration.mobile?.enabled\n                                ? this.configuration.mobile?.handleRadius\n                                : 3,\n                            opacity: this.configuration.mobile?.enabled\n                                ? this.configuration.mobile?.opacity\n                                : 1,\n                            type: 'circle',\n                        });\n                    }\n                    else if (selectedViewportId &&\n                        !rotHandlesActive &&\n                        !slabThicknessHandlesActive &&\n                        viewportSlabThicknessControlsOn) {\n                        const handleUID = `${lineIndex}`;\n                        drawHandlesSvg(svgDrawingHelper, annotationUID, handleUID, slabThicknessHandles, {\n                            color,\n                            handleRadius: this.configuration.mobile?.enabled\n                                ? this.configuration.mobile?.handleRadius\n                                : 3,\n                            opacity: this.configuration.mobile?.enabled\n                                ? this.configuration.mobile?.opacity\n                                : 1,\n                            type: 'rect',\n                        });\n                    }\n                    else if (rotHandlesActive && viewportDraggableRotatable) {\n                        const handleUID = `${lineIndex}`;\n                        drawHandlesSvg(svgDrawingHelper, annotationUID, handleUID, rotationHandles, {\n                            color,\n                            handleRadius: 2,\n                            fill: color,\n                            type: 'circle',\n                        });\n                    }\n                    else if (slabThicknessHandlesActive &&\n                        selectedViewportId &&\n                        viewportSlabThicknessControlsOn) {\n                        drawHandlesSvg(svgDrawingHelper, annotationUID, lineUID, slabThicknessHandles, {\n                            color,\n                            handleRadius: 2,\n                            fill: color,\n                            type: 'rect',\n                        });\n                    }\n                    const slabThicknessValue = otherViewport.getSlabThickness();\n                    if (slabThicknessValue > 0.5 && viewportSlabThicknessControlsOn) {\n                        lineUID = `${lineIndex}STOne`;\n                        drawLineSvg(svgDrawingHelper, annotationUID, lineUID, line[5], line[6], {\n                            color,\n                            width: 1,\n                            lineDash: [2, 3],\n                        });\n                        lineUID = `${lineIndex}STTwo`;\n                        drawLineSvg(svgDrawingHelper, annotationUID, lineUID, line[7], line[8], {\n                            color,\n                            width: line,\n                            lineDash: [2, 3],\n                        });\n                    }\n                }\n            });\n            renderStatus = true;\n            data.handles.rotationPoints = newRtpoints;\n            data.handles.slabThicknessPoints = newStpoints;\n            if (this.configuration.viewportIndicators) {\n                const referenceColorCoordinates = [\n                    clientWidth * 0.95,\n                    clientHeight * 0.05,\n                ];\n                const circleRadius = canvasDiagonalLength * 0.01;\n                const circleUID = '0';\n                drawCircleSvg(svgDrawingHelper, annotationUID, circleUID, referenceColorCoordinates, circleRadius, { color, fill: color });\n            }\n            return renderStatus;\n        };\n        this._getAnnotations = (enabledElement) => {\n            const { viewport } = enabledElement;\n            return getAnnotations(this.getToolName(), viewport.element);\n        };\n        this._onNewVolume = (e) => {\n            const viewportsInfo = this._getViewportsInfo();\n            this.computeToolCenter(viewportsInfo);\n        };\n        this._areViewportIdArraysEqual = (viewportIdArrayOne, viewportIdArrayTwo) => {\n            if (viewportIdArrayOne.length !== viewportIdArrayTwo.length) {\n                return false;\n            }\n            viewportIdArrayOne.forEach((id) => {\n                let itemFound = false;\n                for (let i = 0; i < viewportIdArrayTwo.length; ++i) {\n                    if (id === viewportIdArrayTwo[i]) {\n                        itemFound = true;\n                        break;\n                    }\n                }\n                if (itemFound === false) {\n                    return false;\n                }\n            });\n            return true;\n        };\n        this._getAnnotationsForViewportsWithDifferentCameras = (enabledElement, annotations) => {\n            const { viewportId, renderingEngine, viewport } = enabledElement;\n            const otherViewportAnnotations = annotations.filter((annotation) => annotation.data.viewportId !== viewportId);\n            if (!otherViewportAnnotations || !otherViewportAnnotations.length) {\n                return [];\n            }\n            const camera = viewport.getCamera();\n            const { viewPlaneNormal, position } = camera;\n            const viewportsWithDifferentCameras = otherViewportAnnotations.filter((annotation) => {\n                const { viewportId } = annotation.data;\n                const targetViewport = renderingEngine.getViewport(viewportId);\n                const cameraOfTarget = targetViewport.getCamera();\n                return !(csUtils.isEqual(cameraOfTarget.viewPlaneNormal, viewPlaneNormal, 1e-2) && csUtils.isEqual(cameraOfTarget.position, position, 1));\n            });\n            return viewportsWithDifferentCameras;\n        };\n        this._filterViewportWithSameOrientation = (enabledElement, referenceAnnotation, annotations) => {\n            const { renderingEngine } = enabledElement;\n            const { data } = referenceAnnotation;\n            const viewport = renderingEngine.getViewport(data.viewportId);\n            const linkedViewportAnnotations = annotations.filter((annotation) => {\n                const { data } = annotation;\n                const otherViewport = renderingEngine.getViewport(data.viewportId);\n                const otherViewportControllable = this._getReferenceLineControllable(otherViewport.id);\n                return otherViewportControllable === true;\n            });\n            if (!linkedViewportAnnotations || !linkedViewportAnnotations.length) {\n                return [];\n            }\n            const camera = viewport.getCamera();\n            const viewPlaneNormal = camera.viewPlaneNormal;\n            vtkMath.normalize(viewPlaneNormal);\n            const otherViewportsAnnotationsWithSameCameraDirection = linkedViewportAnnotations.filter((annotation) => {\n                const { viewportId } = annotation.data;\n                const otherViewport = renderingEngine.getViewport(viewportId);\n                const otherCamera = otherViewport.getCamera();\n                const otherViewPlaneNormal = otherCamera.viewPlaneNormal;\n                vtkMath.normalize(otherViewPlaneNormal);\n                return (csUtils.isEqual(viewPlaneNormal, otherViewPlaneNormal, 1e-2) &&\n                    csUtils.isEqual(camera.viewUp, otherCamera.viewUp, 1e-2));\n            });\n            return otherViewportsAnnotationsWithSameCameraDirection;\n        };\n        this._filterAnnotationsByUniqueViewportOrientations = (enabledElement, annotations) => {\n            const { renderingEngine, viewport } = enabledElement;\n            const camera = viewport.getCamera();\n            const viewPlaneNormal = camera.viewPlaneNormal;\n            vtkMath.normalize(viewPlaneNormal);\n            const otherLinkedViewportAnnotationsFromSameScene = annotations.filter((annotation) => {\n                const { data } = annotation;\n                const otherViewport = renderingEngine.getViewport(data.viewportId);\n                const otherViewportControllable = this._getReferenceLineControllable(otherViewport.id);\n                return (viewport !== otherViewport &&\n                    otherViewportControllable === true);\n            });\n            const otherViewportsAnnotationsWithUniqueCameras = [];\n            for (let i = 0; i < otherLinkedViewportAnnotationsFromSameScene.length; ++i) {\n                const annotation = otherLinkedViewportAnnotationsFromSameScene[i];\n                const { viewportId } = annotation.data;\n                const otherViewport = renderingEngine.getViewport(viewportId);\n                const otherCamera = otherViewport.getCamera();\n                const otherViewPlaneNormal = otherCamera.viewPlaneNormal;\n                vtkMath.normalize(otherViewPlaneNormal);\n                if (csUtils.isEqual(viewPlaneNormal, otherViewPlaneNormal, 1e-2) ||\n                    csUtils.isOpposite(viewPlaneNormal, otherViewPlaneNormal, 1e-2)) {\n                    continue;\n                }\n                let cameraFound = false;\n                for (let jj = 0; jj < otherViewportsAnnotationsWithUniqueCameras.length; ++jj) {\n                    const annotation = otherViewportsAnnotationsWithUniqueCameras[jj];\n                    const { viewportId } = annotation.data;\n                    const stockedViewport = renderingEngine.getViewport(viewportId);\n                    const cameraOfStocked = stockedViewport.getCamera();\n                    if (csUtils.isEqual(cameraOfStocked.viewPlaneNormal, otherCamera.viewPlaneNormal, 1e-2) &&\n                        csUtils.isEqual(cameraOfStocked.position, otherCamera.position, 1)) {\n                        cameraFound = true;\n                    }\n                }\n                if (!cameraFound) {\n                    otherViewportsAnnotationsWithUniqueCameras.push(annotation);\n                }\n            }\n            const otherNonLinkedViewportAnnotationsFromSameScene = annotations.filter((annotation) => {\n                const { data } = annotation;\n                const otherViewport = renderingEngine.getViewport(data.viewportId);\n                const otherViewportControllable = this._getReferenceLineControllable(otherViewport.id);\n                return (viewport !== otherViewport &&\n                    otherViewportControllable !== true);\n            });\n            for (let i = 0; i < otherNonLinkedViewportAnnotationsFromSameScene.length; ++i) {\n                const annotation = otherNonLinkedViewportAnnotationsFromSameScene[i];\n                const { viewportId } = annotation.data;\n                const otherViewport = renderingEngine.getViewport(viewportId);\n                const otherCamera = otherViewport.getCamera();\n                const otherViewPlaneNormal = otherCamera.viewPlaneNormal;\n                vtkMath.normalize(otherViewPlaneNormal);\n                if (csUtils.isEqual(viewPlaneNormal, otherViewPlaneNormal, 1e-2) ||\n                    csUtils.isOpposite(viewPlaneNormal, otherViewPlaneNormal, 1e-2)) {\n                    continue;\n                }\n                let cameraFound = false;\n                for (let jj = 0; jj < otherViewportsAnnotationsWithUniqueCameras.length; ++jj) {\n                    const annotation = otherViewportsAnnotationsWithUniqueCameras[jj];\n                    const { viewportId } = annotation.data;\n                    const stockedViewport = renderingEngine.getViewport(viewportId);\n                    const cameraOfStocked = stockedViewport.getCamera();\n                    if (csUtils.isEqual(cameraOfStocked.viewPlaneNormal, otherCamera.viewPlaneNormal, 1e-2) &&\n                        csUtils.isEqual(cameraOfStocked.position, otherCamera.position, 1)) {\n                        cameraFound = true;\n                    }\n                }\n                if (!cameraFound) {\n                    otherViewportsAnnotationsWithUniqueCameras.push(annotation);\n                }\n            }\n            const otherViewportAnnotations = this._getAnnotationsForViewportsWithDifferentCameras(enabledElement, annotations);\n            for (let i = 0; i < otherViewportAnnotations.length; ++i) {\n                const annotation = otherViewportAnnotations[i];\n                if (otherViewportsAnnotationsWithUniqueCameras.some((element) => element === annotation)) {\n                    continue;\n                }\n                const { viewportId } = annotation.data;\n                const otherViewport = renderingEngine.getViewport(viewportId);\n                const otherCamera = otherViewport.getCamera();\n                const otherViewPlaneNormal = otherCamera.viewPlaneNormal;\n                vtkMath.normalize(otherViewPlaneNormal);\n                if (csUtils.isEqual(viewPlaneNormal, otherViewPlaneNormal, 1e-2) ||\n                    csUtils.isOpposite(viewPlaneNormal, otherViewPlaneNormal, 1e-2)) {\n                    continue;\n                }\n                let cameraFound = false;\n                for (let jj = 0; jj < otherViewportsAnnotationsWithUniqueCameras.length; ++jj) {\n                    const annotation = otherViewportsAnnotationsWithUniqueCameras[jj];\n                    const { viewportId } = annotation.data;\n                    const stockedViewport = renderingEngine.getViewport(viewportId);\n                    const cameraOfStocked = stockedViewport.getCamera();\n                    if (csUtils.isEqual(cameraOfStocked.viewPlaneNormal, otherCamera.viewPlaneNormal, 1e-2) &&\n                        csUtils.isEqual(cameraOfStocked.position, otherCamera.position, 1)) {\n                        cameraFound = true;\n                    }\n                }\n                if (!cameraFound) {\n                    otherViewportsAnnotationsWithUniqueCameras.push(annotation);\n                }\n            }\n            return otherViewportsAnnotationsWithUniqueCameras;\n        };\n        this._checkIfViewportsRenderingSameScene = (viewport, otherViewport) => {\n            const actors = viewport.getActors();\n            const otherViewportActors = otherViewport.getActors();\n            let sameScene = true;\n            actors.forEach((actor) => {\n                if (actors.length !== otherViewportActors.length ||\n                    otherViewportActors.find(({ uid }) => uid === actor.uid) === undefined) {\n                    sameScene = false;\n                }\n            });\n            return sameScene;\n        };\n        this._jump = (enabledElement, jumpWorld) => {\n            state.isInteractingWithTool = true;\n            const { viewport, renderingEngine } = enabledElement;\n            const annotations = this._getAnnotations(enabledElement);\n            const delta = [0, 0, 0];\n            vtkMath.subtract(jumpWorld, this.toolCenter, delta);\n            const otherViewportAnnotations = this._getAnnotationsForViewportsWithDifferentCameras(enabledElement, annotations);\n            const viewportsAnnotationsToUpdate = otherViewportAnnotations.filter((annotation) => {\n                const { data } = annotation;\n                const otherViewport = renderingEngine.getViewport(data.viewportId);\n                const sameScene = this._checkIfViewportsRenderingSameScene(viewport, otherViewport);\n                return (this._getReferenceLineControllable(otherViewport.id) &&\n                    this._getReferenceLineDraggableRotatable(otherViewport.id) &&\n                    sameScene);\n            });\n            if (viewportsAnnotationsToUpdate.length === 0) {\n                state.isInteractingWithTool = false;\n                return false;\n            }\n            this._applyDeltaShiftToSelectedViewportCameras(renderingEngine, viewportsAnnotationsToUpdate, delta);\n            state.isInteractingWithTool = false;\n            return true;\n        };\n        this._activateModify = (element) => {\n            state.isInteractingWithTool = !this.configuration.mobile?.enabled;\n            element.addEventListener(Events.MOUSE_UP, this._endCallback);\n            element.addEventListener(Events.MOUSE_DRAG, this._dragCallback);\n            element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n            element.addEventListener(Events.TOUCH_END, this._endCallback);\n            element.addEventListener(Events.TOUCH_DRAG, this._dragCallback);\n            element.addEventListener(Events.TOUCH_TAP, this._endCallback);\n        };\n        this._deactivateModify = (element) => {\n            state.isInteractingWithTool = false;\n            element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n            element.removeEventListener(Events.MOUSE_DRAG, this._dragCallback);\n            element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n            element.removeEventListener(Events.TOUCH_END, this._endCallback);\n            element.removeEventListener(Events.TOUCH_DRAG, this._dragCallback);\n            element.removeEventListener(Events.TOUCH_TAP, this._endCallback);\n        };\n        this._endCallback = (evt) => {\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            this.editData.annotation.data.handles.activeOperation = null;\n            this.editData.annotation.data.activeViewportIds = [];\n            this._deactivateModify(element);\n            resetElementCursor(element);\n            this.editData = null;\n            const enabledElement = getEnabledElement(element);\n            const { renderingEngine } = enabledElement;\n            const requireSameOrientation = false;\n            const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName(), requireSameOrientation);\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n        };\n        this._dragCallback = (evt) => {\n            const eventDetail = evt.detail;\n            const delta = eventDetail.deltaPoints.world;\n            if (Math.abs(delta[0]) < 1e-3 &&\n                Math.abs(delta[1]) < 1e-3 &&\n                Math.abs(delta[2]) < 1e-3) {\n                return;\n            }\n            const { element } = eventDetail;\n            const enabledElement = getEnabledElement(element);\n            const { renderingEngine, viewport } = enabledElement;\n            const annotations = this._getAnnotations(enabledElement);\n            const filteredToolAnnotations = this.filterInteractableAnnotationsForElement(element, annotations);\n            const viewportAnnotation = filteredToolAnnotations[0];\n            if (!viewportAnnotation) {\n                return;\n            }\n            const { handles } = viewportAnnotation.data;\n            const { currentPoints } = evt.detail;\n            const canvasCoords = currentPoints.canvas;\n            if (handles.activeOperation === OPERATION.DRAG) {\n                const otherViewportAnnotations = this._getAnnotationsForViewportsWithDifferentCameras(enabledElement, annotations);\n                const viewportsAnnotationsToUpdate = otherViewportAnnotations.filter((annotation) => {\n                    const { data } = annotation;\n                    const otherViewport = renderingEngine.getViewport(data.viewportId);\n                    const otherViewportControllable = this._getReferenceLineControllable(otherViewport.id);\n                    const otherViewportDraggableRotatable = this._getReferenceLineDraggableRotatable(otherViewport.id);\n                    return (otherViewportControllable === true &&\n                        otherViewportDraggableRotatable === true &&\n                        viewportAnnotation.data.activeViewportIds.find((id) => id === otherViewport.id));\n                });\n                this._applyDeltaShiftToSelectedViewportCameras(renderingEngine, viewportsAnnotationsToUpdate, delta);\n            }\n            else if (handles.activeOperation === OPERATION.ROTATE) {\n                const otherViewportAnnotations = this._getAnnotationsForViewportsWithDifferentCameras(enabledElement, annotations);\n                const viewportsAnnotationsToUpdate = otherViewportAnnotations.filter((annotation) => {\n                    const { data } = annotation;\n                    const otherViewport = renderingEngine.getViewport(data.viewportId);\n                    const otherViewportControllable = this._getReferenceLineControllable(otherViewport.id);\n                    const otherViewportDraggableRotatable = this._getReferenceLineDraggableRotatable(otherViewport.id);\n                    return (otherViewportControllable === true &&\n                        otherViewportDraggableRotatable === true);\n                });\n                const dir1 = vec2.create();\n                const dir2 = vec2.create();\n                const center = [\n                    this.toolCenter[0],\n                    this.toolCenter[1],\n                    this.toolCenter[2],\n                ];\n                const centerCanvas = viewport.worldToCanvas(center);\n                const finalPointCanvas = eventDetail.currentPoints.canvas;\n                const originalPointCanvas = vec2.create();\n                vec2.sub(originalPointCanvas, finalPointCanvas, eventDetail.deltaPoints.canvas);\n                vec2.sub(dir1, originalPointCanvas, centerCanvas);\n                vec2.sub(dir2, finalPointCanvas, centerCanvas);\n                let angle = vec2.angle(dir1, dir2);\n                if (this._isClockWise(centerCanvas, originalPointCanvas, finalPointCanvas)) {\n                    angle *= -1;\n                }\n                angle = Math.round(angle * 100) / 100;\n                const rotationAxis = viewport.getCamera().viewPlaneNormal;\n                const { matrix } = vtkMatrixBuilder\n                    .buildFromRadian()\n                    .translate(center[0], center[1], center[2])\n                    .rotate(angle, rotationAxis)\n                    .translate(-center[0], -center[1], -center[2]);\n                const otherViewportsIds = [];\n                viewportsAnnotationsToUpdate.forEach((annotation) => {\n                    const { data } = annotation;\n                    data.handles.toolCenter = center;\n                    const otherViewport = renderingEngine.getViewport(data.viewportId);\n                    const camera = otherViewport.getCamera();\n                    const { viewUp, position, focalPoint } = camera;\n                    viewUp[0] += position[0];\n                    viewUp[1] += position[1];\n                    viewUp[2] += position[2];\n                    vec3.transformMat4(focalPoint, focalPoint, matrix);\n                    vec3.transformMat4(position, position, matrix);\n                    vec3.transformMat4(viewUp, viewUp, matrix);\n                    viewUp[0] -= position[0];\n                    viewUp[1] -= position[1];\n                    viewUp[2] -= position[2];\n                    otherViewport.setCamera({\n                        position,\n                        viewUp,\n                        focalPoint,\n                    });\n                    otherViewportsIds.push(otherViewport.id);\n                });\n                renderingEngine.renderViewports(otherViewportsIds);\n            }\n            else if (handles.activeOperation === OPERATION.SLAB) {\n                const otherViewportAnnotations = this._getAnnotationsForViewportsWithDifferentCameras(enabledElement, annotations);\n                const referenceAnnotations = otherViewportAnnotations.filter((annotation) => {\n                    const { data } = annotation;\n                    const otherViewport = renderingEngine.getViewport(data.viewportId);\n                    const otherViewportControllable = this._getReferenceLineControllable(otherViewport.id);\n                    const otherViewportSlabThicknessControlsOn = this._getReferenceLineSlabThicknessControlsOn(otherViewport.id);\n                    return (otherViewportControllable === true &&\n                        otherViewportSlabThicknessControlsOn === true &&\n                        viewportAnnotation.data.activeViewportIds.find((id) => id === otherViewport.id));\n                });\n                if (referenceAnnotations.length === 0) {\n                    return;\n                }\n                const viewportsAnnotationsToUpdate = this._filterViewportWithSameOrientation(enabledElement, referenceAnnotations[0], annotations);\n                const viewportsIds = [];\n                viewportsIds.push(viewport.id);\n                viewportsAnnotationsToUpdate.forEach((annotation) => {\n                    const { data } = annotation;\n                    const otherViewport = renderingEngine.getViewport(data.viewportId);\n                    const camera = otherViewport.getCamera();\n                    const normal = camera.viewPlaneNormal;\n                    const dotProd = vtkMath.dot(delta, normal);\n                    const projectedDelta = [...normal];\n                    vtkMath.multiplyScalar(projectedDelta, dotProd);\n                    if (Math.abs(projectedDelta[0]) > 1e-3 ||\n                        Math.abs(projectedDelta[1]) > 1e-3 ||\n                        Math.abs(projectedDelta[2]) > 1e-3) {\n                        const mod = Math.sqrt(projectedDelta[0] * projectedDelta[0] +\n                            projectedDelta[1] * projectedDelta[1] +\n                            projectedDelta[2] * projectedDelta[2]);\n                        const currentPoint = eventDetail.lastPoints.world;\n                        const direction = [0, 0, 0];\n                        const currentCenter = [\n                            this.toolCenter[0],\n                            this.toolCenter[1],\n                            this.toolCenter[2],\n                        ];\n                        const viewportDraggableRotatable = this._getReferenceLineDraggableRotatable(otherViewport.id);\n                        if (!viewportDraggableRotatable) {\n                            const { rotationPoints } = this.editData.annotation.data.handles;\n                            const otherViewportRotationPoints = rotationPoints.filter((point) => point[1].uid === otherViewport.id);\n                            if (otherViewportRotationPoints.length === 2) {\n                                const point1 = viewport.canvasToWorld(otherViewportRotationPoints[0][3]);\n                                const point2 = viewport.canvasToWorld(otherViewportRotationPoints[1][3]);\n                                vtkMath.add(point1, point2, currentCenter);\n                                vtkMath.multiplyScalar(currentCenter, 0.5);\n                            }\n                        }\n                        vtkMath.subtract(currentPoint, currentCenter, direction);\n                        const dotProdDirection = vtkMath.dot(direction, normal);\n                        const projectedDirection = [...normal];\n                        vtkMath.multiplyScalar(projectedDirection, dotProdDirection);\n                        const normalizedProjectedDirection = [\n                            projectedDirection[0],\n                            projectedDirection[1],\n                            projectedDirection[2],\n                        ];\n                        vec3.normalize(normalizedProjectedDirection, normalizedProjectedDirection);\n                        const normalizedProjectedDelta = [\n                            projectedDelta[0],\n                            projectedDelta[1],\n                            projectedDelta[2],\n                        ];\n                        vec3.normalize(normalizedProjectedDelta, normalizedProjectedDelta);\n                        let slabThicknessValue = otherViewport.getSlabThickness();\n                        if (csUtils.isOpposite(normalizedProjectedDirection, normalizedProjectedDelta, 1e-3)) {\n                            slabThicknessValue -= mod;\n                        }\n                        else {\n                            slabThicknessValue += mod;\n                        }\n                        slabThicknessValue = Math.abs(slabThicknessValue);\n                        slabThicknessValue = Math.max(RENDERING_DEFAULTS.MINIMUM_SLAB_THICKNESS, slabThicknessValue);\n                        const near = this._pointNearReferenceLine(viewportAnnotation, canvasCoords, 6, otherViewport);\n                        if (near) {\n                            slabThicknessValue = RENDERING_DEFAULTS.MINIMUM_SLAB_THICKNESS;\n                        }\n                        const toolGroup = getToolGroupForViewport(otherViewport.id, renderingEngine.id);\n                        const crosshairsInstance = toolGroup.getToolInstance(this.getToolName());\n                        crosshairsInstance.setSlabThickness(otherViewport, slabThicknessValue);\n                        viewportsIds.push(otherViewport.id);\n                    }\n                });\n                renderingEngine.renderViewports(viewportsIds);\n            }\n        };\n        this._pointNearReferenceLine = (annotation, canvasCoords, proximity, lineViewport) => {\n            const { data } = annotation;\n            const { rotationPoints } = data.handles;\n            for (let i = 0; i < rotationPoints.length - 1; ++i) {\n                const otherViewport = rotationPoints[i][1];\n                if (otherViewport.id !== lineViewport.id) {\n                    continue;\n                }\n                const viewportControllable = this._getReferenceLineControllable(otherViewport.id);\n                if (!viewportControllable) {\n                    continue;\n                }\n                const lineSegment1 = {\n                    start: {\n                        x: rotationPoints[i][2][0],\n                        y: rotationPoints[i][2][1],\n                    },\n                    end: {\n                        x: rotationPoints[i][3][0],\n                        y: rotationPoints[i][3][1],\n                    },\n                };\n                const distanceToPoint1 = lineSegment.distanceToPoint([lineSegment1.start.x, lineSegment1.start.y], [lineSegment1.end.x, lineSegment1.end.y], [canvasCoords[0], canvasCoords[1]]);\n                const lineSegment2 = {\n                    start: {\n                        x: rotationPoints[i + 1][2][0],\n                        y: rotationPoints[i + 1][2][1],\n                    },\n                    end: {\n                        x: rotationPoints[i + 1][3][0],\n                        y: rotationPoints[i + 1][3][1],\n                    },\n                };\n                const distanceToPoint2 = lineSegment.distanceToPoint([lineSegment2.start.x, lineSegment2.start.y], [lineSegment2.end.x, lineSegment2.end.y], [canvasCoords[0], canvasCoords[1]]);\n                if (distanceToPoint1 <= proximity || distanceToPoint2 <= proximity) {\n                    return true;\n                }\n                i++;\n            }\n            return false;\n        };\n        this._getReferenceLineColor =\n            toolProps.configuration?.getReferenceLineColor ||\n                defaultReferenceLineColor;\n        this._getReferenceLineControllable =\n            toolProps.configuration?.getReferenceLineControllable ||\n                defaultReferenceLineControllable;\n        this._getReferenceLineDraggableRotatable =\n            toolProps.configuration?.getReferenceLineDraggableRotatable ||\n                defaultReferenceLineDraggableRotatable;\n        this._getReferenceLineSlabThicknessControlsOn =\n            toolProps.configuration?.getReferenceLineSlabThicknessControlsOn ||\n                defaultReferenceLineSlabThicknessControlsOn;\n    }\n    onSetToolActive() {\n        const viewportsInfo = this._getViewportsInfo();\n        this._unsubscribeToViewportNewVolumeSet(viewportsInfo);\n        this._subscribeToViewportNewVolumeSet(viewportsInfo);\n        this.computeToolCenter(viewportsInfo);\n    }\n    onSetToolPassive() {\n        const viewportsInfo = this._getViewportsInfo();\n        this.computeToolCenter(viewportsInfo);\n    }\n    onSetToolEnabled() {\n        const viewportsInfo = this._getViewportsInfo();\n        this.computeToolCenter(viewportsInfo);\n    }\n    onSetToolDisabled() {\n        const viewportsInfo = this._getViewportsInfo();\n        this._unsubscribeToViewportNewVolumeSet(viewportsInfo);\n        viewportsInfo.forEach(({ renderingEngineId, viewportId }) => {\n            const enabledElement = getEnabledElementByIds(viewportId, renderingEngineId);\n            if (!enabledElement) {\n                return;\n            }\n            const annotations = this._getAnnotations(enabledElement);\n            if (annotations?.length) {\n                annotations.forEach((annotation) => {\n                    removeAnnotation(annotation.annotationUID);\n                });\n            }\n        });\n    }\n    getHandleNearImagePoint(element, annotation, canvasCoords, proximity) {\n        const enabledElement = getEnabledElement(element);\n        const { viewport } = enabledElement;\n        let point = this._getRotationHandleNearImagePoint(viewport, annotation, canvasCoords, proximity);\n        if (point !== null) {\n            return point;\n        }\n        point = this._getSlabThicknessHandleNearImagePoint(viewport, annotation, canvasCoords, proximity);\n        if (point !== null) {\n            return point;\n        }\n    }\n    _unsubscribeToViewportNewVolumeSet(viewportsInfo) {\n        viewportsInfo.forEach(({ viewportId, renderingEngineId }) => {\n            const { viewport } = getEnabledElementByIds(viewportId, renderingEngineId);\n            const { element } = viewport;\n            element.removeEventListener(Enums.Events.VOLUME_VIEWPORT_NEW_VOLUME, this._onNewVolume);\n        });\n    }\n    _subscribeToViewportNewVolumeSet(viewports) {\n        viewports.forEach(({ viewportId, renderingEngineId }) => {\n            const { viewport } = getEnabledElementByIds(viewportId, renderingEngineId);\n            const { element } = viewport;\n            element.addEventListener(Enums.Events.VOLUME_VIEWPORT_NEW_VOLUME, this._onNewVolume);\n        });\n    }\n    _autoPanViewportIfNecessary(viewportId, renderingEngine) {\n        const viewport = renderingEngine.getViewport(viewportId);\n        const { clientWidth, clientHeight } = viewport.canvas;\n        const toolCenterCanvas = viewport.worldToCanvas(this.toolCenter);\n        const pan = this.configuration.autoPan.panSize;\n        const visiblePointCanvas = [\n            toolCenterCanvas[0],\n            toolCenterCanvas[1],\n        ];\n        if (toolCenterCanvas[0] < 0) {\n            visiblePointCanvas[0] = pan;\n        }\n        else if (toolCenterCanvas[0] > clientWidth) {\n            visiblePointCanvas[0] = clientWidth - pan;\n        }\n        if (toolCenterCanvas[1] < 0) {\n            visiblePointCanvas[1] = pan;\n        }\n        else if (toolCenterCanvas[1] > clientHeight) {\n            visiblePointCanvas[1] = clientHeight - pan;\n        }\n        if (visiblePointCanvas[0] === toolCenterCanvas[0] &&\n            visiblePointCanvas[1] === toolCenterCanvas[1]) {\n            return;\n        }\n        const visiblePointWorld = viewport.canvasToWorld(visiblePointCanvas);\n        const deltaPointsWorld = [\n            visiblePointWorld[0] - this.toolCenter[0],\n            visiblePointWorld[1] - this.toolCenter[1],\n            visiblePointWorld[2] - this.toolCenter[2],\n        ];\n        const camera = viewport.getCamera();\n        const { focalPoint, position } = camera;\n        const updatedPosition = [\n            position[0] - deltaPointsWorld[0],\n            position[1] - deltaPointsWorld[1],\n            position[2] - deltaPointsWorld[2],\n        ];\n        const updatedFocalPoint = [\n            focalPoint[0] - deltaPointsWorld[0],\n            focalPoint[1] - deltaPointsWorld[1],\n            focalPoint[2] - deltaPointsWorld[2],\n        ];\n        viewport.setCamera({\n            focalPoint: updatedFocalPoint,\n            position: updatedPosition,\n        });\n        viewport.render();\n    }\n    setSlabThickness(viewport, slabThickness) {\n        let actorUIDs;\n        const { filterActorUIDsToSetSlabThickness } = this.configuration;\n        if (filterActorUIDsToSetSlabThickness &&\n            filterActorUIDsToSetSlabThickness.length > 0) {\n            actorUIDs = filterActorUIDsToSetSlabThickness;\n        }\n        let blendModeToUse = this.configuration.slabThicknessBlendMode;\n        if (slabThickness === RENDERING_DEFAULTS.MINIMUM_SLAB_THICKNESS) {\n            blendModeToUse = Enums.BlendModes.COMPOSITE;\n        }\n        const immediate = false;\n        viewport.setBlendMode(blendModeToUse, actorUIDs, immediate);\n        viewport.setSlabThickness(slabThickness, actorUIDs);\n    }\n    _isClockWise(a, b, c) {\n        return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]) > 0;\n    }\n    _applyDeltaShiftToSelectedViewportCameras(renderingEngine, viewportsAnnotationsToUpdate, delta) {\n        viewportsAnnotationsToUpdate.forEach((annotation) => {\n            this._applyDeltaShiftToViewportCamera(renderingEngine, annotation, delta);\n        });\n    }\n    _applyDeltaShiftToViewportCamera(renderingEngine, annotation, delta) {\n        const { data } = annotation;\n        const viewport = renderingEngine.getViewport(data.viewportId);\n        const camera = viewport.getCamera();\n        const normal = camera.viewPlaneNormal;\n        const dotProd = vtkMath.dot(delta, normal);\n        const projectedDelta = [...normal];\n        vtkMath.multiplyScalar(projectedDelta, dotProd);\n        if (Math.abs(projectedDelta[0]) > 1e-3 ||\n            Math.abs(projectedDelta[1]) > 1e-3 ||\n            Math.abs(projectedDelta[2]) > 1e-3) {\n            const newFocalPoint = [0, 0, 0];\n            const newPosition = [0, 0, 0];\n            vtkMath.add(camera.focalPoint, projectedDelta, newFocalPoint);\n            vtkMath.add(camera.position, projectedDelta, newPosition);\n            viewport.setCamera({\n                focalPoint: newFocalPoint,\n                position: newPosition,\n            });\n            viewport.render();\n        }\n    }\n    _getRotationHandleNearImagePoint(viewport, annotation, canvasCoords, proximity) {\n        const { data } = annotation;\n        const { rotationPoints } = data.handles;\n        for (let i = 0; i < rotationPoints.length; i++) {\n            const point = rotationPoints[i][0];\n            const otherViewport = rotationPoints[i][1];\n            const viewportControllable = this._getReferenceLineControllable(otherViewport.id);\n            if (!viewportControllable) {\n                continue;\n            }\n            const viewportDraggableRotatable = this._getReferenceLineDraggableRotatable(otherViewport.id);\n            if (!viewportDraggableRotatable) {\n                continue;\n            }\n            const annotationCanvasCoordinate = viewport.worldToCanvas(point);\n            if (vec2.distance(canvasCoords, annotationCanvasCoordinate) < proximity) {\n                data.handles.activeOperation = OPERATION.ROTATE;\n                this.editData = {\n                    annotation,\n                };\n                return point;\n            }\n        }\n        return null;\n    }\n    _getSlabThicknessHandleNearImagePoint(viewport, annotation, canvasCoords, proximity) {\n        const { data } = annotation;\n        const { slabThicknessPoints } = data.handles;\n        for (let i = 0; i < slabThicknessPoints.length; i++) {\n            const point = slabThicknessPoints[i][0];\n            const otherViewport = slabThicknessPoints[i][1];\n            const viewportControllable = this._getReferenceLineControllable(otherViewport.id);\n            if (!viewportControllable) {\n                continue;\n            }\n            const viewportSlabThicknessControlsOn = this._getReferenceLineSlabThicknessControlsOn(otherViewport.id);\n            if (!viewportSlabThicknessControlsOn) {\n                continue;\n            }\n            const annotationCanvasCoordinate = viewport.worldToCanvas(point);\n            if (vec2.distance(canvasCoords, annotationCanvasCoordinate) < proximity) {\n                data.handles.activeOperation = OPERATION.SLAB;\n                data.activeViewportIds = [otherViewport.id];\n                this.editData = {\n                    annotation,\n                };\n                return point;\n            }\n        }\n        return null;\n    }\n    _pointNearTool(element, annotation, canvasCoords, proximity) {\n        const enabledElement = getEnabledElement(element);\n        const { viewport } = enabledElement;\n        const { clientWidth, clientHeight } = viewport.canvas;\n        const canvasDiagonalLength = Math.sqrt(clientWidth * clientWidth + clientHeight * clientHeight);\n        const { data } = annotation;\n        const { rotationPoints } = data.handles;\n        const { slabThicknessPoints } = data.handles;\n        const viewportIdArray = [];\n        for (let i = 0; i < rotationPoints.length - 1; ++i) {\n            const otherViewport = rotationPoints[i][1];\n            const viewportControllable = this._getReferenceLineControllable(otherViewport.id);\n            const viewportDraggableRotatable = this._getReferenceLineDraggableRotatable(otherViewport.id);\n            if (!viewportControllable || !viewportDraggableRotatable) {\n                continue;\n            }\n            const lineSegment1 = {\n                start: {\n                    x: rotationPoints[i][2][0],\n                    y: rotationPoints[i][2][1],\n                },\n                end: {\n                    x: rotationPoints[i][3][0],\n                    y: rotationPoints[i][3][1],\n                },\n            };\n            const distanceToPoint1 = lineSegment.distanceToPoint([lineSegment1.start.x, lineSegment1.start.y], [lineSegment1.end.x, lineSegment1.end.y], [canvasCoords[0], canvasCoords[1]]);\n            const lineSegment2 = {\n                start: {\n                    x: rotationPoints[i + 1][2][0],\n                    y: rotationPoints[i + 1][2][1],\n                },\n                end: {\n                    x: rotationPoints[i + 1][3][0],\n                    y: rotationPoints[i + 1][3][1],\n                },\n            };\n            const distanceToPoint2 = lineSegment.distanceToPoint([lineSegment2.start.x, lineSegment2.start.y], [lineSegment2.end.x, lineSegment2.end.y], [canvasCoords[0], canvasCoords[1]]);\n            if (distanceToPoint1 <= proximity || distanceToPoint2 <= proximity) {\n                viewportIdArray.push(otherViewport.id);\n                data.handles.activeOperation = OPERATION.DRAG;\n            }\n            i++;\n        }\n        for (let i = 0; i < slabThicknessPoints.length - 1; ++i) {\n            const otherViewport = slabThicknessPoints[i][1];\n            if (viewportIdArray.find((id) => id === otherViewport.id)) {\n                continue;\n            }\n            const viewportControllable = this._getReferenceLineControllable(otherViewport.id);\n            const viewportSlabThicknessControlsOn = this._getReferenceLineSlabThicknessControlsOn(otherViewport.id);\n            if (!viewportControllable || !viewportSlabThicknessControlsOn) {\n                continue;\n            }\n            const stPointLineCanvas1 = slabThicknessPoints[i][2];\n            const stPointLineCanvas2 = slabThicknessPoints[i][3];\n            const centerCanvas = vec2.create();\n            vec2.add(centerCanvas, stPointLineCanvas1, stPointLineCanvas2);\n            vec2.scale(centerCanvas, centerCanvas, 0.5);\n            const canvasUnitVectorFromCenter = vec2.create();\n            vec2.subtract(canvasUnitVectorFromCenter, stPointLineCanvas1, centerCanvas);\n            vec2.normalize(canvasUnitVectorFromCenter, canvasUnitVectorFromCenter);\n            const canvasVectorFromCenterStart = vec2.create();\n            vec2.scale(canvasVectorFromCenterStart, canvasUnitVectorFromCenter, canvasDiagonalLength * 0.05);\n            const stPointLineCanvas1Start = vec2.create();\n            const stPointLineCanvas2Start = vec2.create();\n            vec2.add(stPointLineCanvas1Start, centerCanvas, canvasVectorFromCenterStart);\n            vec2.subtract(stPointLineCanvas2Start, centerCanvas, canvasVectorFromCenterStart);\n            const lineSegment1 = {\n                start: {\n                    x: stPointLineCanvas1Start[0],\n                    y: stPointLineCanvas1Start[1],\n                },\n                end: {\n                    x: stPointLineCanvas1[0],\n                    y: stPointLineCanvas1[1],\n                },\n            };\n            const distanceToPoint1 = lineSegment.distanceToPoint([lineSegment1.start.x, lineSegment1.start.y], [lineSegment1.end.x, lineSegment1.end.y], [canvasCoords[0], canvasCoords[1]]);\n            const lineSegment2 = {\n                start: {\n                    x: stPointLineCanvas2Start[0],\n                    y: stPointLineCanvas2Start[1],\n                },\n                end: {\n                    x: stPointLineCanvas2[0],\n                    y: stPointLineCanvas2[1],\n                },\n            };\n            const distanceToPoint2 = lineSegment.distanceToPoint([lineSegment2.start.x, lineSegment2.start.y], [lineSegment2.end.x, lineSegment2.end.y], [canvasCoords[0], canvasCoords[1]]);\n            if (distanceToPoint1 <= proximity || distanceToPoint2 <= proximity) {\n                viewportIdArray.push(otherViewport.id);\n                data.handles.activeOperation = null;\n            }\n            i++;\n        }\n        data.activeViewportIds = [...viewportIdArray];\n        this.editData = {\n            annotation,\n        };\n        return data.handles.activeOperation === OPERATION.DRAG ? true : false;\n    }\n}\nCrosshairsTool.toolName = 'Crosshairs';\nexport default CrosshairsTool;\n//# sourceMappingURL=CrosshairsTool.js.map","import { BaseTool } from './base';\nimport { Events } from '../enums';\nimport { getEnabledElement, StackViewport } from '@cornerstonejs/core';\nimport { getViewportIdsWithToolToRender } from '../utilities/viewportFilters';\nimport triggerAnnotationRenderForViewportIds from '../utilities/triggerAnnotationRenderForViewportIds';\nimport { state } from '../store';\nimport { Enums } from '@cornerstonejs/core';\nimport { hideElementCursor, resetElementCursor, } from '../cursors/elementCursor';\nconst MAGNIFY_VIEWPORT_ID = 'magnify-viewport';\nclass MagnifyTool extends BaseTool {\n    constructor(toolProps = {}, defaultToolProps = {\n        supportedInteractionTypes: ['Mouse', 'Touch'],\n        configuration: {\n            magnifySize: 10,\n            magnifyWidth: 250,\n            magnifyHeight: 250,\n        },\n    }) {\n        super(toolProps, defaultToolProps);\n        this.preMouseDownCallback = (evt) => {\n            const eventDetail = evt.detail;\n            const { element, currentPoints } = eventDetail;\n            const enabledElement = getEnabledElement(element);\n            const { viewport, renderingEngine } = enabledElement;\n            if (!(viewport instanceof StackViewport)) {\n                throw new Error('MagnifyTool only works on StackViewports');\n            }\n            const referencedImageId = this._getReferencedImageId(viewport);\n            if (!referencedImageId) {\n                throw new Error('MagnifyTool: No referenced image id found, reconstructed planes not supported yet');\n            }\n            const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n            this.editData = {\n                referencedImageId,\n                viewportIdsToRender,\n                enabledElement,\n                renderingEngine,\n                currentPoints,\n            };\n            this._createMagnificationViewport();\n            this._activateDraw(element);\n            hideElementCursor(element);\n            evt.preventDefault();\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n            return true;\n        };\n        this.preTouchStartCallback = (evt) => {\n            this.preMouseDownCallback(evt);\n        };\n        this._createMagnificationViewport = () => {\n            const { enabledElement, referencedImageId, viewportIdsToRender, renderingEngine, currentPoints, } = this.editData;\n            const { viewport } = enabledElement;\n            const { element } = viewport;\n            const { voiRange } = viewport.getProperties();\n            const { canvas: canvasPos, world: worldPos } = currentPoints;\n            let magnifyToolElement;\n            magnifyToolElement = element.querySelector('.magnifyTool');\n            if (magnifyToolElement === null) {\n                const magnifyElement = document.createElement('div');\n                magnifyElement.classList.add('magnifyTool');\n                magnifyElement.style.display = 'block';\n                magnifyElement.style.width = `${this.configuration.magnifyWidth}px`;\n                magnifyElement.style.height = `${this.configuration.magnifyHeight}px`;\n                magnifyElement.style.position = 'absolute';\n                magnifyToolElement = magnifyElement;\n                const viewportElement = element.querySelector('.viewport-element');\n                viewportElement.appendChild(magnifyElement);\n                const viewportInput = {\n                    viewportId: MAGNIFY_VIEWPORT_ID,\n                    type: Enums.ViewportType.STACK,\n                    element: magnifyToolElement,\n                };\n                renderingEngine.enableElement(viewportInput);\n            }\n            magnifyToolElement.style.top = `${canvasPos[1] - this.configuration.magnifyHeight / 2}px`;\n            magnifyToolElement.style.left = `${canvasPos[0] - this.configuration.magnifyWidth / 2}px`;\n            const magnifyViewport = renderingEngine.getViewport(MAGNIFY_VIEWPORT_ID);\n            magnifyViewport.setStack([referencedImageId]).then(() => {\n                magnifyViewport.setProperties({ voiRange });\n                const { parallelScale } = viewport.getCamera();\n                const { focalPoint, position, viewPlaneNormal } = magnifyViewport.getCamera();\n                const distance = Math.sqrt(Math.pow(focalPoint[0] - position[0], 2) +\n                    Math.pow(focalPoint[1] - position[1], 2) +\n                    Math.pow(focalPoint[2] - position[2], 2));\n                const updatedFocalPoint = [\n                    worldPos[0],\n                    worldPos[1],\n                    worldPos[2],\n                ];\n                const updatedPosition = [\n                    updatedFocalPoint[0] + distance * viewPlaneNormal[0],\n                    updatedFocalPoint[1] + distance * viewPlaneNormal[1],\n                    updatedFocalPoint[2] + distance * viewPlaneNormal[2],\n                ];\n                magnifyViewport.setCamera({\n                    parallelScale: parallelScale * (1 / this.configuration.magnifySize),\n                    focalPoint: updatedFocalPoint,\n                    position: updatedPosition,\n                });\n                magnifyViewport.render();\n            });\n            magnifyToolElement.style.display = 'block';\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n        };\n        this._dragCallback = (evt) => {\n            const eventDetail = evt.detail;\n            const { deltaPoints, element, currentPoints } = eventDetail;\n            const deltaPointsWorld = deltaPoints.world;\n            const canvasPos = currentPoints.canvas;\n            const enabledElement = getEnabledElement(element);\n            const { renderingEngine } = enabledElement;\n            const magnifyViewport = renderingEngine.getViewport(MAGNIFY_VIEWPORT_ID);\n            const magnifyElement = element.querySelector('.magnifyTool');\n            if (!magnifyElement) {\n                return;\n            }\n            magnifyElement.style.top = `${canvasPos[1] - this.configuration.magnifyHeight / 2}px`;\n            magnifyElement.style.left = `${canvasPos[0] - this.configuration.magnifyWidth / 2}px`;\n            const { focalPoint, position } = magnifyViewport.getCamera();\n            const updatedPosition = [\n                position[0] + deltaPointsWorld[0],\n                position[1] + deltaPointsWorld[1],\n                position[2] + deltaPointsWorld[2],\n            ];\n            const updatedFocalPoint = [\n                focalPoint[0] + deltaPointsWorld[0],\n                focalPoint[1] + deltaPointsWorld[1],\n                focalPoint[2] + deltaPointsWorld[2],\n            ];\n            magnifyViewport.setCamera({\n                focalPoint: updatedFocalPoint,\n                position: updatedPosition,\n            });\n            magnifyViewport.render();\n        };\n        this._dragEndCallback = (evt) => {\n            const { element } = evt.detail;\n            const enabledElement = getEnabledElement(element);\n            const { renderingEngine } = enabledElement;\n            renderingEngine.disableElement(MAGNIFY_VIEWPORT_ID);\n            const viewportElement = element.querySelector('.viewport-element');\n            const magnifyToolElement = viewportElement.querySelector('.magnifyTool');\n            viewportElement.removeChild(magnifyToolElement);\n            this._deactivateDraw(element);\n            resetElementCursor(element);\n        };\n        this._activateDraw = (element) => {\n            state.isInteractingWithTool = true;\n            element.addEventListener(Events.MOUSE_UP, this._dragEndCallback);\n            element.addEventListener(Events.MOUSE_DRAG, this._dragCallback);\n            element.addEventListener(Events.MOUSE_CLICK, this._dragEndCallback);\n            element.addEventListener(Events.TOUCH_END, this._dragEndCallback);\n            element.addEventListener(Events.TOUCH_DRAG, this._dragCallback);\n        };\n        this._deactivateDraw = (element) => {\n            state.isInteractingWithTool = false;\n            element.removeEventListener(Events.MOUSE_UP, this._dragEndCallback);\n            element.removeEventListener(Events.MOUSE_DRAG, this._dragCallback);\n            element.removeEventListener(Events.MOUSE_CLICK, this._dragEndCallback);\n            element.removeEventListener(Events.TOUCH_END, this._dragEndCallback);\n            element.removeEventListener(Events.TOUCH_DRAG, this._dragCallback);\n        };\n    }\n    _getReferencedImageId(viewport) {\n        const targetId = this.getTargetId(viewport);\n        let referencedImageId;\n        if (viewport instanceof StackViewport) {\n            referencedImageId = targetId.split('imageId:')[1];\n        }\n        return referencedImageId;\n    }\n}\nMagnifyTool.toolName = 'Magnify';\nexport default MagnifyTool;\n//# sourceMappingURL=MagnifyTool.js.map","import { vec3 } from 'gl-matrix';\nimport { getRenderingEngines, CONSTANTS, utilities as csUtils, } from '@cornerstonejs/core';\nimport { addAnnotation } from '../stateManagement/annotation/annotationState';\nimport { drawLine as drawLineSvg } from '../drawingSvg';\nimport { filterViewportsWithToolEnabled } from '../utilities/viewportFilters';\nimport triggerAnnotationRenderForViewportIds from '../utilities/triggerAnnotationRenderForViewportIds';\nimport AnnotationDisplayTool from './base/AnnotationDisplayTool';\nconst { EPSILON } = CONSTANTS;\nclass ReferenceLines extends AnnotationDisplayTool {\n    constructor(toolProps = {}, defaultToolProps = {\n        supportedInteractionTypes: ['Mouse', 'Touch'],\n        configuration: {\n            sourceViewportId: '',\n        },\n    }) {\n        super(toolProps, defaultToolProps);\n        this.editData = {};\n        this._init = () => {\n            const renderingEngines = getRenderingEngines();\n            const renderingEngine = renderingEngines[0];\n            if (!renderingEngine) {\n                return;\n            }\n            let viewports = renderingEngine.getViewports();\n            viewports = filterViewportsWithToolEnabled(viewports, this.getToolName());\n            const sourceViewport = renderingEngine.getViewport(this.configuration.sourceViewportId);\n            if (!sourceViewport || !sourceViewport.getImageData()) {\n                return;\n            }\n            const { element } = sourceViewport;\n            const { viewUp, viewPlaneNormal } = sourceViewport.getCamera();\n            const sourceViewportCanvasCornersInWorld = csUtils.getViewportImageCornersInWorld(sourceViewport);\n            let annotation = this.editData.annotation;\n            const FrameOfReferenceUID = sourceViewport.getFrameOfReferenceUID();\n            if (!annotation) {\n                const newAnnotation = {\n                    highlighted: true,\n                    invalidated: true,\n                    metadata: {\n                        toolName: this.getToolName(),\n                        viewPlaneNormal: [...viewPlaneNormal],\n                        viewUp: [...viewUp],\n                        FrameOfReferenceUID,\n                        referencedImageId: null,\n                    },\n                    data: {\n                        handles: {\n                            points: sourceViewportCanvasCornersInWorld,\n                        },\n                    },\n                };\n                addAnnotation(newAnnotation, element);\n                annotation = newAnnotation;\n            }\n            else {\n                this.editData.annotation.data.handles.points =\n                    sourceViewportCanvasCornersInWorld;\n            }\n            this.editData = {\n                sourceViewport,\n                renderingEngine,\n                annotation,\n            };\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewports\n                .filter((viewport) => viewport.id !== sourceViewport.id)\n                .map((viewport) => viewport.id));\n        };\n        this.onSetToolEnabled = () => {\n            this._init();\n        };\n        this.onCameraModified = (evt) => {\n            this._init();\n        };\n        this.renderAnnotation = (enabledElement, svgDrawingHelper) => {\n            const { viewport: targetViewport } = enabledElement;\n            const { annotation, sourceViewport } = this.editData;\n            let renderStatus = false;\n            if (!sourceViewport) {\n                return renderStatus;\n            }\n            if (sourceViewport.id === targetViewport.id) {\n                return renderStatus;\n            }\n            if (!annotation || !annotation?.data?.handles?.points) {\n                return renderStatus;\n            }\n            const styleSpecifier = {\n                toolGroupId: this.toolGroupId,\n                toolName: this.getToolName(),\n                viewportId: enabledElement.viewport.id,\n            };\n            const topLeft = annotation.data.handles.points[0];\n            const topRight = annotation.data.handles.points[1];\n            const bottomLeft = annotation.data.handles.points[2];\n            const bottomRight = annotation.data.handles.points[3];\n            const { focalPoint, viewPlaneNormal } = targetViewport.getCamera();\n            const { viewPlaneNormal: sourceViewPlaneNormal } = sourceViewport.getCamera();\n            if (this.isParallel(viewPlaneNormal, sourceViewPlaneNormal)) {\n                return renderStatus;\n            }\n            const targetViewportPlane = csUtils.planar.planeEquation(viewPlaneNormal, focalPoint);\n            const pointSet1 = [topLeft, bottomLeft, topRight, bottomRight];\n            const pointSet2 = [topLeft, topRight, bottomLeft, bottomRight];\n            let pointSetToUse = pointSet1;\n            let topBottomVec = vec3.subtract(vec3.create(), pointSet1[0], pointSet1[1]);\n            topBottomVec = vec3.normalize(vec3.create(), topBottomVec);\n            let topRightVec = vec3.subtract(vec3.create(), pointSet1[2], pointSet1[0]);\n            topRightVec = vec3.normalize(vec3.create(), topRightVec);\n            const newNormal = vec3.cross(vec3.create(), topBottomVec, topRightVec);\n            if (this.isParallel(newNormal, viewPlaneNormal)) {\n                return renderStatus;\n            }\n            if (this.isPerpendicular(topBottomVec, viewPlaneNormal)) {\n                pointSetToUse = pointSet2;\n            }\n            const lineStartWorld = csUtils.planar.linePlaneIntersection(pointSetToUse[0], pointSetToUse[1], targetViewportPlane);\n            const lineEndWorld = csUtils.planar.linePlaneIntersection(pointSetToUse[2], pointSetToUse[3], targetViewportPlane);\n            const { annotationUID } = annotation;\n            styleSpecifier.annotationUID = annotationUID;\n            const lineWidth = this.getStyle('lineWidth', styleSpecifier, annotation);\n            const lineDash = this.getStyle('lineDash', styleSpecifier, annotation);\n            const color = this.getStyle('color', styleSpecifier, annotation);\n            const shadow = this.getStyle('shadow', styleSpecifier, annotation);\n            const canvasCoordinates = [lineStartWorld, lineEndWorld].map((world) => targetViewport.worldToCanvas(world));\n            const dataId = `${annotationUID}-line`;\n            const lineUID = '1';\n            drawLineSvg(svgDrawingHelper, annotationUID, lineUID, canvasCoordinates[0], canvasCoordinates[1], {\n                color,\n                width: lineWidth,\n                lineDash,\n                shadow,\n            }, dataId);\n            renderStatus = true;\n            return renderStatus;\n        };\n        this.isPerpendicular = (vec1, vec2) => {\n            const dot = vec3.dot(vec1, vec2);\n            return Math.abs(dot) < EPSILON;\n        };\n    }\n    isParallel(vec1, vec2) {\n        return Math.abs(vec3.dot(vec1, vec2)) > 1 - EPSILON;\n    }\n}\nReferenceLines.toolName = 'ReferenceLines';\nexport default ReferenceLines;\n//# sourceMappingURL=ReferenceLinesTool.js.map","export default function getTextBoxCoordsCanvas(annotationCanvasPoints) {\n    const corners = _determineCorners(annotationCanvasPoints);\n    const centerY = (corners.top[1] + corners.bottom[1]) / 2;\n    const textBoxCanvas = [corners.right[0], centerY];\n    return textBoxCanvas;\n}\nfunction _determineCorners(canvasPoints) {\n    const handlesLeftToRight = [canvasPoints[0], canvasPoints[1]].sort(_compareX);\n    const handlesTopToBottom = [canvasPoints[0], canvasPoints[1]].sort(_compareY);\n    const right = handlesLeftToRight[handlesLeftToRight.length - 1];\n    const top = handlesTopToBottom[0];\n    const bottom = handlesTopToBottom[handlesTopToBottom.length - 1];\n    return {\n        top,\n        bottom,\n        right,\n    };\n    function _compareX(a, b) {\n        return a[0] < b[0] ? -1 : 1;\n    }\n    function _compareY(a, b) {\n        return a[1] < b[1] ? -1 : 1;\n    }\n}\n//# sourceMappingURL=getTextBoxCoordsCanvas.js.map","import { vec2, vec3 } from 'gl-matrix';\nimport { getEnabledElement, triggerEvent, eventTarget, utilities as csUtils, } from '@cornerstonejs/core';\nimport { AnnotationTool } from '../base';\nimport throttle from '../../utilities/throttle';\nimport { addAnnotation, getAnnotations, removeAnnotation, } from '../../stateManagement/annotation/annotationState';\nimport { isAnnotationLocked } from '../../stateManagement/annotation/annotationLocking';\nimport { isAnnotationVisible } from '../../stateManagement/annotation/annotationVisibility';\nimport { drawLine as drawLineSvg, drawHandles as drawHandlesSvg, drawLinkedTextBox as drawLinkedTextBoxSvg, } from '../../drawingSvg';\nimport { state } from '../../store';\nimport { Events } from '../../enums';\nimport { getViewportIdsWithToolToRender } from '../../utilities/viewportFilters';\nimport * as lineSegment from '../../utilities/math/line';\nimport { getTextBoxCoordsCanvas } from '../../utilities/drawing';\nimport { resetElementCursor, hideElementCursor, } from '../../cursors/elementCursor';\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\nconst { transformWorldToIndex } = csUtils;\nclass BidirectionalTool extends AnnotationTool {\n    constructor(toolProps = {}, defaultToolProps = {\n        supportedInteractionTypes: ['Mouse', 'Touch'],\n        configuration: {\n            preventHandleOutsideImage: false,\n        },\n    }) {\n        super(toolProps, defaultToolProps);\n        this.isPointNearTool = (element, annotation, canvasCoords, proximity) => {\n            const enabledElement = getEnabledElement(element);\n            const { viewport } = enabledElement;\n            const { data } = annotation;\n            const { points } = data.handles;\n            let canvasPoint1 = viewport.worldToCanvas(points[0]);\n            let canvasPoint2 = viewport.worldToCanvas(points[1]);\n            let line = {\n                start: {\n                    x: canvasPoint1[0],\n                    y: canvasPoint1[1],\n                },\n                end: {\n                    x: canvasPoint2[0],\n                    y: canvasPoint2[1],\n                },\n            };\n            let distanceToPoint = lineSegment.distanceToPoint([line.start.x, line.start.y], [line.end.x, line.end.y], [canvasCoords[0], canvasCoords[1]]);\n            if (distanceToPoint <= proximity) {\n                return true;\n            }\n            canvasPoint1 = viewport.worldToCanvas(points[2]);\n            canvasPoint2 = viewport.worldToCanvas(points[3]);\n            line = {\n                start: {\n                    x: canvasPoint1[0],\n                    y: canvasPoint1[1],\n                },\n                end: {\n                    x: canvasPoint2[0],\n                    y: canvasPoint2[1],\n                },\n            };\n            distanceToPoint = lineSegment.distanceToPoint([line.start.x, line.start.y], [line.end.x, line.end.y], [canvasCoords[0], canvasCoords[1]]);\n            if (distanceToPoint <= proximity) {\n                return true;\n            }\n            return false;\n        };\n        this.toolSelectedCallback = (evt, annotation) => {\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            annotation.highlighted = true;\n            const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n            this.editData = {\n                annotation,\n                viewportIdsToRender,\n                movingTextBox: false,\n            };\n            this._activateModify(element);\n            const enabledElement = getEnabledElement(element);\n            const { renderingEngine } = enabledElement;\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n            hideElementCursor(element);\n            evt.preventDefault();\n        };\n        this.handleSelectedCallback = (evt, annotation, handle) => {\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            const data = annotation.data;\n            annotation.highlighted = true;\n            let movingTextBox = false;\n            let handleIndex;\n            if (handle.worldPosition) {\n                movingTextBox = true;\n            }\n            else {\n                handleIndex = data.handles.points.findIndex((p) => p === handle);\n            }\n            const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n            hideElementCursor(element);\n            this.editData = {\n                annotation,\n                viewportIdsToRender,\n                handleIndex,\n                movingTextBox,\n            };\n            this._activateModify(element);\n            const enabledElement = getEnabledElement(element);\n            const { renderingEngine } = enabledElement;\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n            evt.preventDefault();\n        };\n        this._endCallback = (evt) => {\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            const { annotation, viewportIdsToRender, newAnnotation, hasMoved } = this.editData;\n            const { data } = annotation;\n            if (newAnnotation && !hasMoved) {\n                return;\n            }\n            data.handles.activeHandleIndex = null;\n            this._deactivateModify(element);\n            this._deactivateDraw(element);\n            resetElementCursor(element);\n            const enabledElement = getEnabledElement(element);\n            const { renderingEngine } = enabledElement;\n            if (this.editData.handleIndex !== undefined) {\n                const { points } = data.handles;\n                const firstLineSegmentLength = vec3.distance(points[0], points[1]);\n                const secondLineSegmentLength = vec3.distance(points[2], points[3]);\n                if (secondLineSegmentLength > firstLineSegmentLength) {\n                    const longAxis = [[...points[2]], [...points[3]]];\n                    const shortAxisPoint0 = [...points[0]];\n                    const shortAxisPoint1 = [...points[1]];\n                    const longAxisVector = vec2.create();\n                    vec2.set(longAxisVector, longAxis[1][0] - longAxis[0][0], longAxis[1][1] - longAxis[1][0]);\n                    const counterClockWisePerpendicularToLongAxis = vec2.create();\n                    vec2.set(counterClockWisePerpendicularToLongAxis, -longAxisVector[1], longAxisVector[0]);\n                    const currentShortAxisVector = vec2.create();\n                    vec2.set(currentShortAxisVector, shortAxisPoint1[0] - shortAxisPoint0[0], shortAxisPoint1[1] - shortAxisPoint0[0]);\n                    let shortAxis;\n                    if (vec2.dot(currentShortAxisVector, counterClockWisePerpendicularToLongAxis) > 0) {\n                        shortAxis = [shortAxisPoint0, shortAxisPoint1];\n                    }\n                    else {\n                        shortAxis = [shortAxisPoint1, shortAxisPoint0];\n                    }\n                    data.handles.points = [\n                        longAxis[0],\n                        longAxis[1],\n                        shortAxis[0],\n                        shortAxis[1],\n                    ];\n                }\n            }\n            if (this.isHandleOutsideImage &&\n                this.configuration.preventHandleOutsideImage) {\n                removeAnnotation(annotation.annotationUID);\n            }\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n            if (newAnnotation) {\n                const eventType = Events.ANNOTATION_COMPLETED;\n                const eventDetail = {\n                    annotation,\n                };\n                triggerEvent(eventTarget, eventType, eventDetail);\n            }\n            this.editData = null;\n            this.isDrawing = false;\n        };\n        this._dragDrawCallback = (evt) => {\n            this.isDrawing = true;\n            const eventDetail = evt.detail;\n            const { currentPoints, element } = eventDetail;\n            const enabledElement = getEnabledElement(element);\n            const { renderingEngine, viewport } = enabledElement;\n            const { worldToCanvas } = viewport;\n            const { annotation, viewportIdsToRender, handleIndex } = this.editData;\n            const { data } = annotation;\n            const worldPos = currentPoints.world;\n            data.handles.points[handleIndex] = [...worldPos];\n            const canvasCoordPoints = data.handles.points.map(worldToCanvas);\n            const canvasCoords = {\n                longLineSegment: {\n                    start: {\n                        x: canvasCoordPoints[0][0],\n                        y: canvasCoordPoints[0][1],\n                    },\n                    end: {\n                        x: canvasCoordPoints[1][0],\n                        y: canvasCoordPoints[1][1],\n                    },\n                },\n                shortLineSegment: {\n                    start: {\n                        x: canvasCoordPoints[2][0],\n                        y: canvasCoordPoints[2][1],\n                    },\n                    end: {\n                        x: canvasCoordPoints[3][0],\n                        y: canvasCoordPoints[3][1],\n                    },\n                },\n            };\n            const dist = vec2.distance(canvasCoordPoints[0], canvasCoordPoints[1]);\n            const shortAxisDistFromCenter = dist / 3;\n            const dx = canvasCoords.longLineSegment.start.x - canvasCoords.longLineSegment.end.x;\n            const dy = canvasCoords.longLineSegment.start.y - canvasCoords.longLineSegment.end.y;\n            const length = Math.sqrt(dx * dx + dy * dy);\n            const vectorX = dx / length;\n            const vectorY = dy / length;\n            const xMid = (canvasCoords.longLineSegment.start.x +\n                canvasCoords.longLineSegment.end.x) /\n                2;\n            const yMid = (canvasCoords.longLineSegment.start.y +\n                canvasCoords.longLineSegment.end.y) /\n                2;\n            const startX = xMid + shortAxisDistFromCenter * vectorY;\n            const startY = yMid - shortAxisDistFromCenter * vectorX;\n            const endX = xMid - shortAxisDistFromCenter * vectorY;\n            const endY = yMid + shortAxisDistFromCenter * vectorX;\n            data.handles.points[2] = viewport.canvasToWorld([startX, startY]);\n            data.handles.points[3] = viewport.canvasToWorld([endX, endY]);\n            annotation.invalidated = true;\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n            this.editData.hasMoved = true;\n        };\n        this._dragModifyCallback = (evt) => {\n            this.isDrawing = true;\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            const enabledElement = getEnabledElement(element);\n            const { renderingEngine } = enabledElement;\n            const { annotation, viewportIdsToRender, handleIndex, movingTextBox } = this.editData;\n            const { data } = annotation;\n            if (movingTextBox) {\n                const { deltaPoints } = eventDetail;\n                const worldPosDelta = deltaPoints.world;\n                const { textBox } = data.handles;\n                const { worldPosition } = textBox;\n                worldPosition[0] += worldPosDelta[0];\n                worldPosition[1] += worldPosDelta[1];\n                worldPosition[2] += worldPosDelta[2];\n                textBox.hasMoved = true;\n            }\n            else if (handleIndex === undefined) {\n                const { deltaPoints } = eventDetail;\n                const worldPosDelta = deltaPoints.world;\n                const points = data.handles.points;\n                points.forEach((point) => {\n                    point[0] += worldPosDelta[0];\n                    point[1] += worldPosDelta[1];\n                    point[2] += worldPosDelta[2];\n                });\n                annotation.invalidated = true;\n            }\n            else {\n                this._dragModifyHandle(evt);\n                annotation.invalidated = true;\n            }\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n        };\n        this._dragModifyHandle = (evt) => {\n            const eventDetail = evt.detail;\n            const { currentPoints, element } = eventDetail;\n            const enabledElement = getEnabledElement(element);\n            const { viewport } = enabledElement;\n            const { annotation, handleIndex: movingHandleIndex } = this.editData;\n            const { data } = annotation;\n            const worldPos = currentPoints.world;\n            const canvasCoordHandlesCurrent = [\n                viewport.worldToCanvas(data.handles.points[0]),\n                viewport.worldToCanvas(data.handles.points[1]),\n                viewport.worldToCanvas(data.handles.points[2]),\n                viewport.worldToCanvas(data.handles.points[3]),\n            ];\n            const firstLineSegment = {\n                start: {\n                    x: canvasCoordHandlesCurrent[0][0],\n                    y: canvasCoordHandlesCurrent[0][1],\n                },\n                end: {\n                    x: canvasCoordHandlesCurrent[1][0],\n                    y: canvasCoordHandlesCurrent[1][1],\n                },\n            };\n            const secondLineSegment = {\n                start: {\n                    x: canvasCoordHandlesCurrent[2][0],\n                    y: canvasCoordHandlesCurrent[2][1],\n                },\n                end: {\n                    x: canvasCoordHandlesCurrent[3][0],\n                    y: canvasCoordHandlesCurrent[3][1],\n                },\n            };\n            const proposedPoint = [...worldPos];\n            const proposedCanvasCoord = viewport.worldToCanvas(proposedPoint);\n            if (movingHandleIndex === 0 || movingHandleIndex === 1) {\n                const fixedHandleIndex = movingHandleIndex === 0 ? 1 : 0;\n                const fixedHandleCanvasCoord = canvasCoordHandlesCurrent[fixedHandleIndex];\n                const fixedHandleToProposedCoordVec = vec2.set(vec2.create(), proposedCanvasCoord[0] - fixedHandleCanvasCoord[0], proposedCanvasCoord[1] - fixedHandleCanvasCoord[1]);\n                const fixedHandleToOldCoordVec = vec2.set(vec2.create(), canvasCoordHandlesCurrent[movingHandleIndex][0] -\n                    fixedHandleCanvasCoord[0], canvasCoordHandlesCurrent[movingHandleIndex][1] -\n                    fixedHandleCanvasCoord[1]);\n                vec2.normalize(fixedHandleToProposedCoordVec, fixedHandleToProposedCoordVec);\n                vec2.normalize(fixedHandleToOldCoordVec, fixedHandleToOldCoordVec);\n                const proposedFirstLineSegment = {\n                    start: {\n                        x: fixedHandleCanvasCoord[0],\n                        y: fixedHandleCanvasCoord[1],\n                    },\n                    end: {\n                        x: proposedCanvasCoord[0],\n                        y: proposedCanvasCoord[1],\n                    },\n                };\n                if (this._movingLongAxisWouldPutItThroughShortAxis(proposedFirstLineSegment, secondLineSegment)) {\n                    return;\n                }\n                const centerOfRotation = fixedHandleCanvasCoord;\n                const angle = this._getSignedAngle(fixedHandleToOldCoordVec, fixedHandleToProposedCoordVec);\n                let firstPointX = canvasCoordHandlesCurrent[2][0];\n                let firstPointY = canvasCoordHandlesCurrent[2][1];\n                let secondPointX = canvasCoordHandlesCurrent[3][0];\n                let secondPointY = canvasCoordHandlesCurrent[3][1];\n                firstPointX -= centerOfRotation[0];\n                firstPointY -= centerOfRotation[1];\n                secondPointX -= centerOfRotation[0];\n                secondPointY -= centerOfRotation[1];\n                const rotatedFirstPoint = firstPointX * Math.cos(angle) - firstPointY * Math.sin(angle);\n                const rotatedFirstPointY = firstPointX * Math.sin(angle) + firstPointY * Math.cos(angle);\n                const rotatedSecondPoint = secondPointX * Math.cos(angle) - secondPointY * Math.sin(angle);\n                const rotatedSecondPointY = secondPointX * Math.sin(angle) + secondPointY * Math.cos(angle);\n                firstPointX = rotatedFirstPoint + centerOfRotation[0];\n                firstPointY = rotatedFirstPointY + centerOfRotation[1];\n                secondPointX = rotatedSecondPoint + centerOfRotation[0];\n                secondPointY = rotatedSecondPointY + centerOfRotation[1];\n                const newFirstPoint = viewport.canvasToWorld([firstPointX, firstPointY]);\n                const newSecondPoint = viewport.canvasToWorld([\n                    secondPointX,\n                    secondPointY,\n                ]);\n                data.handles.points[movingHandleIndex] = proposedPoint;\n                data.handles.points[2] = newFirstPoint;\n                data.handles.points[3] = newSecondPoint;\n            }\n            else {\n                const translateHandleIndex = movingHandleIndex === 2 ? 3 : 2;\n                const canvasCoordsCurrent = {\n                    longLineSegment: {\n                        start: firstLineSegment.start,\n                        end: firstLineSegment.end,\n                    },\n                    shortLineSegment: {\n                        start: secondLineSegment.start,\n                        end: secondLineSegment.end,\n                    },\n                };\n                const longLineSegmentVec = vec2.subtract(vec2.create(), [\n                    canvasCoordsCurrent.longLineSegment.end.x,\n                    canvasCoordsCurrent.longLineSegment.end.y,\n                ], [\n                    canvasCoordsCurrent.longLineSegment.start.x,\n                    canvasCoordsCurrent.longLineSegment.start.y,\n                ]);\n                const longLineSegmentVecNormalized = vec2.normalize(vec2.create(), longLineSegmentVec);\n                const proposedToCurrentVec = vec2.subtract(vec2.create(), [proposedCanvasCoord[0], proposedCanvasCoord[1]], [\n                    canvasCoordHandlesCurrent[movingHandleIndex][0],\n                    canvasCoordHandlesCurrent[movingHandleIndex][1],\n                ]);\n                const movementLength = vec2.length(proposedToCurrentVec);\n                const angle = this._getSignedAngle(longLineSegmentVecNormalized, proposedToCurrentVec);\n                const movementAlongLineSegmentLength = Math.cos(angle) * movementLength;\n                const newTranslatedPoint = vec2.scaleAndAdd(vec2.create(), [\n                    canvasCoordHandlesCurrent[translateHandleIndex][0],\n                    canvasCoordHandlesCurrent[translateHandleIndex][1],\n                ], longLineSegmentVecNormalized, movementAlongLineSegmentLength);\n                if (this._movingLongAxisWouldPutItThroughShortAxis({\n                    start: {\n                        x: proposedCanvasCoord[0],\n                        y: proposedCanvasCoord[1],\n                    },\n                    end: {\n                        x: newTranslatedPoint[0],\n                        y: newTranslatedPoint[1],\n                    },\n                }, {\n                    start: {\n                        x: canvasCoordsCurrent.longLineSegment.start.x,\n                        y: canvasCoordsCurrent.longLineSegment.start.y,\n                    },\n                    end: {\n                        x: canvasCoordsCurrent.longLineSegment.end.x,\n                        y: canvasCoordsCurrent.longLineSegment.end.y,\n                    },\n                })) {\n                    return;\n                }\n                const intersectionPoint = lineSegment.intersectLine([proposedCanvasCoord[0], proposedCanvasCoord[1]], [newTranslatedPoint[0], newTranslatedPoint[1]], [firstLineSegment.start.x, firstLineSegment.start.y], [firstLineSegment.end.x, firstLineSegment.end.y]);\n                if (!intersectionPoint) {\n                    return;\n                }\n                data.handles.points[translateHandleIndex] = viewport.canvasToWorld(newTranslatedPoint);\n                data.handles.points[movingHandleIndex] = proposedPoint;\n            }\n        };\n        this.cancel = (element) => {\n            if (this.isDrawing) {\n                this.isDrawing = false;\n                this._deactivateDraw(element);\n                this._deactivateModify(element);\n                resetElementCursor(element);\n                const { annotation, viewportIdsToRender, newAnnotation } = this.editData;\n                const { data } = annotation;\n                annotation.highlighted = false;\n                data.handles.activeHandleIndex = null;\n                const enabledElement = getEnabledElement(element);\n                const { renderingEngine } = enabledElement;\n                triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n                if (newAnnotation) {\n                    const eventType = Events.ANNOTATION_COMPLETED;\n                    const eventDetail = {\n                        annotation,\n                    };\n                    triggerEvent(eventTarget, eventType, eventDetail);\n                }\n                this.editData = null;\n                return annotation.annotationUID;\n            }\n        };\n        this._activateDraw = (element) => {\n            state.isInteractingWithTool = true;\n            element.addEventListener(Events.MOUSE_UP, this._endCallback);\n            element.addEventListener(Events.MOUSE_DRAG, this._dragDrawCallback);\n            element.addEventListener(Events.MOUSE_MOVE, this._dragDrawCallback);\n            element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n            element.addEventListener(Events.TOUCH_TAP, this._endCallback);\n            element.addEventListener(Events.TOUCH_END, this._endCallback);\n            element.addEventListener(Events.TOUCH_DRAG, this._dragDrawCallback);\n        };\n        this._deactivateDraw = (element) => {\n            state.isInteractingWithTool = false;\n            element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n            element.removeEventListener(Events.MOUSE_DRAG, this._dragDrawCallback);\n            element.removeEventListener(Events.MOUSE_MOVE, this._dragDrawCallback);\n            element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n            element.removeEventListener(Events.TOUCH_TAP, this._endCallback);\n            element.removeEventListener(Events.TOUCH_END, this._endCallback);\n            element.removeEventListener(Events.TOUCH_DRAG, this._dragDrawCallback);\n        };\n        this._activateModify = (element) => {\n            state.isInteractingWithTool = true;\n            element.addEventListener(Events.MOUSE_UP, this._endCallback);\n            element.addEventListener(Events.MOUSE_DRAG, this._dragModifyCallback);\n            element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n            element.addEventListener(Events.TOUCH_END, this._endCallback);\n            element.addEventListener(Events.TOUCH_DRAG, this._dragModifyCallback);\n            element.addEventListener(Events.TOUCH_TAP, this._endCallback);\n        };\n        this._deactivateModify = (element) => {\n            state.isInteractingWithTool = false;\n            element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n            element.removeEventListener(Events.MOUSE_DRAG, this._dragModifyCallback);\n            element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n            element.removeEventListener(Events.TOUCH_END, this._endCallback);\n            element.removeEventListener(Events.TOUCH_DRAG, this._dragModifyCallback);\n            element.removeEventListener(Events.TOUCH_TAP, this._endCallback);\n        };\n        this.renderAnnotation = (enabledElement, svgDrawingHelper) => {\n            let renderStatus = true;\n            const { viewport } = enabledElement;\n            const { element } = viewport;\n            let annotations = getAnnotations(this.getToolName(), element);\n            if (!annotations?.length) {\n                return renderStatus;\n            }\n            annotations = this.filterInteractableAnnotationsForElement(element, annotations);\n            if (!annotations?.length) {\n                return renderStatus;\n            }\n            const targetId = this.getTargetId(viewport);\n            const renderingEngine = viewport.getRenderingEngine();\n            const styleSpecifier = {\n                toolGroupId: this.toolGroupId,\n                toolName: this.getToolName(),\n                viewportId: enabledElement.viewport.id,\n            };\n            for (let i = 0; i < annotations.length; i++) {\n                const annotation = annotations[i];\n                const { annotationUID, data } = annotation;\n                const { points, activeHandleIndex } = data.handles;\n                const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n                styleSpecifier.annotationUID = annotationUID;\n                const lineWidth = this.getStyle('lineWidth', styleSpecifier, annotation);\n                const lineDash = this.getStyle('lineDash', styleSpecifier, annotation);\n                const color = this.getStyle('color', styleSpecifier, annotation);\n                const shadow = this.getStyle('shadow', styleSpecifier, annotation);\n                if (!data.cachedStats[targetId] ||\n                    data.cachedStats[targetId].unit === undefined) {\n                    data.cachedStats[targetId] = {\n                        length: null,\n                        width: null,\n                        unit: null,\n                    };\n                    this._calculateCachedStats(annotation, renderingEngine, enabledElement);\n                }\n                else if (annotation.invalidated) {\n                    this._throttledCalculateCachedStats(annotation, renderingEngine, enabledElement);\n                }\n                if (!viewport.getRenderingEngine()) {\n                    console.warn('Rendering Engine has been destroyed');\n                    return renderStatus;\n                }\n                let activeHandleCanvasCoords;\n                if (!isAnnotationVisible(annotationUID)) {\n                    continue;\n                }\n                if (!isAnnotationLocked(annotation) &&\n                    !this.editData &&\n                    activeHandleIndex !== null) {\n                    activeHandleCanvasCoords = [canvasCoordinates[activeHandleIndex]];\n                }\n                if (activeHandleCanvasCoords) {\n                    const handleGroupUID = '0';\n                    drawHandlesSvg(svgDrawingHelper, annotationUID, handleGroupUID, activeHandleCanvasCoords, {\n                        color,\n                    });\n                }\n                const dataId1 = `${annotationUID}-line-1`;\n                const dataId2 = `${annotationUID}-line-2`;\n                const lineUID = '0';\n                drawLineSvg(svgDrawingHelper, annotationUID, lineUID, canvasCoordinates[0], canvasCoordinates[1], {\n                    color,\n                    lineDash,\n                    lineWidth,\n                    shadow,\n                }, dataId1);\n                const secondLineUID = '1';\n                drawLineSvg(svgDrawingHelper, annotationUID, secondLineUID, canvasCoordinates[2], canvasCoordinates[3], {\n                    color,\n                    lineDash,\n                    lineWidth,\n                    shadow,\n                }, dataId2);\n                renderStatus = true;\n                const textLines = this._getTextLines(data, targetId);\n                if (!textLines || textLines.length === 0) {\n                    continue;\n                }\n                let canvasTextBoxCoords;\n                if (!data.handles.textBox.hasMoved) {\n                    canvasTextBoxCoords = getTextBoxCoordsCanvas(canvasCoordinates);\n                    data.handles.textBox.worldPosition =\n                        viewport.canvasToWorld(canvasTextBoxCoords);\n                }\n                const textBoxPosition = viewport.worldToCanvas(data.handles.textBox.worldPosition);\n                const textBoxUID = '1';\n                const boundingBox = drawLinkedTextBoxSvg(svgDrawingHelper, annotationUID, textBoxUID, textLines, textBoxPosition, canvasCoordinates, {}, this.getLinkedTextBoxStyle(styleSpecifier, annotation));\n                const { x: left, y: top, width, height } = boundingBox;\n                data.handles.textBox.worldBoundingBox = {\n                    topLeft: viewport.canvasToWorld([left, top]),\n                    topRight: viewport.canvasToWorld([left + width, top]),\n                    bottomLeft: viewport.canvasToWorld([left, top + height]),\n                    bottomRight: viewport.canvasToWorld([left + width, top + height]),\n                };\n            }\n            return renderStatus;\n        };\n        this._movingLongAxisWouldPutItThroughShortAxis = (firstLineSegment, secondLineSegment) => {\n            const vectorInSecondLineDirection = vec2.create();\n            vec2.set(vectorInSecondLineDirection, secondLineSegment.end.x - secondLineSegment.start.x, secondLineSegment.end.y - secondLineSegment.start.y);\n            vec2.normalize(vectorInSecondLineDirection, vectorInSecondLineDirection);\n            const extendedSecondLineSegment = {\n                start: {\n                    x: secondLineSegment.start.x - vectorInSecondLineDirection[0] * 10,\n                    y: secondLineSegment.start.y - vectorInSecondLineDirection[1] * 10,\n                },\n                end: {\n                    x: secondLineSegment.end.x + vectorInSecondLineDirection[0] * 10,\n                    y: secondLineSegment.end.y + vectorInSecondLineDirection[1] * 10,\n                },\n            };\n            const proposedIntersectionPoint = lineSegment.intersectLine([extendedSecondLineSegment.start.x, extendedSecondLineSegment.start.y], [extendedSecondLineSegment.end.x, extendedSecondLineSegment.end.y], [firstLineSegment.start.x, firstLineSegment.start.y], [firstLineSegment.end.x, firstLineSegment.end.y]);\n            const wouldPutThroughShortAxis = !proposedIntersectionPoint;\n            return wouldPutThroughShortAxis;\n        };\n        this._getTextLines = (data, targetId) => {\n            const { cachedStats } = data;\n            const { length, width, unit } = cachedStats[targetId];\n            if (length === undefined) {\n                return;\n            }\n            const textLines = [\n                `L: ${length.toFixed(2)} ${unit}`,\n                `W: ${width.toFixed(2)} ${unit}`,\n            ];\n            return textLines;\n        };\n        this._calculateCachedStats = (annotation, renderingEngine, enabledElement) => {\n            const { data } = annotation;\n            const { viewportId, renderingEngineId } = enabledElement;\n            const worldPos1 = data.handles.points[0];\n            const worldPos2 = data.handles.points[1];\n            const worldPos3 = data.handles.points[2];\n            const worldPos4 = data.handles.points[3];\n            const { cachedStats } = data;\n            const targetIds = Object.keys(cachedStats);\n            for (let i = 0; i < targetIds.length; i++) {\n                const targetId = targetIds[i];\n                const image = this.getTargetIdImage(targetId, renderingEngine);\n                if (!image) {\n                    continue;\n                }\n                const { imageData, dimensions, hasPixelSpacing } = image;\n                const dist1 = this._calculateLength(worldPos1, worldPos2);\n                const dist2 = this._calculateLength(worldPos3, worldPos4);\n                const length = dist1 > dist2 ? dist1 : dist2;\n                const width = dist1 > dist2 ? dist2 : dist1;\n                const index1 = transformWorldToIndex(imageData, worldPos1);\n                const index2 = transformWorldToIndex(imageData, worldPos2);\n                const index3 = transformWorldToIndex(imageData, worldPos3);\n                const index4 = transformWorldToIndex(imageData, worldPos4);\n                this._isInsideVolume(index1, index2, index3, index4, dimensions)\n                    ? (this.isHandleOutsideImage = false)\n                    : (this.isHandleOutsideImage = true);\n                cachedStats[targetId] = {\n                    length,\n                    width,\n                    unit: hasPixelSpacing ? 'mm' : 'px',\n                };\n            }\n            annotation.invalidated = false;\n            const eventType = Events.ANNOTATION_MODIFIED;\n            const eventDetail = {\n                annotation,\n                viewportId,\n                renderingEngineId,\n            };\n            triggerEvent(eventTarget, eventType, eventDetail);\n            return cachedStats;\n        };\n        this._isInsideVolume = (index1, index2, index3, index4, dimensions) => {\n            return (csUtils.indexWithinDimensions(index1, dimensions) &&\n                csUtils.indexWithinDimensions(index2, dimensions) &&\n                csUtils.indexWithinDimensions(index3, dimensions) &&\n                csUtils.indexWithinDimensions(index4, dimensions));\n        };\n        this._getSignedAngle = (vector1, vector2) => {\n            return Math.atan2(vector1[0] * vector2[1] - vector1[1] * vector2[0], vector1[0] * vector2[0] + vector1[1] * vector2[1]);\n        };\n        this._throttledCalculateCachedStats = throttle(this._calculateCachedStats, 100, { trailing: true });\n    }\n    addNewAnnotation(evt) {\n        const eventDetail = evt.detail;\n        const { currentPoints, element } = eventDetail;\n        const worldPos = currentPoints.world;\n        const enabledElement = getEnabledElement(element);\n        const { viewport, renderingEngine } = enabledElement;\n        this.isDrawing = true;\n        const camera = viewport.getCamera();\n        const { viewPlaneNormal, viewUp } = camera;\n        const referencedImageId = this.getReferencedImageId(viewport, worldPos, viewPlaneNormal, viewUp);\n        const FrameOfReferenceUID = viewport.getFrameOfReferenceUID();\n        const annotation = {\n            highlighted: true,\n            invalidated: true,\n            metadata: {\n                toolName: this.getToolName(),\n                viewPlaneNormal: [...viewPlaneNormal],\n                viewUp: [...viewUp],\n                FrameOfReferenceUID,\n                referencedImageId,\n            },\n            data: {\n                handles: {\n                    points: [\n                        [...worldPos],\n                        [...worldPos],\n                        [...worldPos],\n                        [...worldPos],\n                    ],\n                    textBox: {\n                        hasMoved: false,\n                        worldPosition: [0, 0, 0],\n                        worldBoundingBox: {\n                            topLeft: [0, 0, 0],\n                            topRight: [0, 0, 0],\n                            bottomLeft: [0, 0, 0],\n                            bottomRight: [0, 0, 0],\n                        },\n                    },\n                    activeHandleIndex: null,\n                },\n                label: '',\n                cachedStats: {},\n            },\n        };\n        addAnnotation(annotation, element);\n        const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n        this.editData = {\n            annotation,\n            viewportIdsToRender,\n            handleIndex: 1,\n            movingTextBox: false,\n            newAnnotation: true,\n            hasMoved: false,\n        };\n        this._activateDraw(element);\n        hideElementCursor(element);\n        evt.preventDefault();\n        triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n        return annotation;\n    }\n    _calculateLength(pos1, pos2) {\n        const dx = pos1[0] - pos2[0];\n        const dy = pos1[1] - pos2[1];\n        const dz = pos1[2] - pos2[2];\n        return Math.sqrt(dx * dx + dy * dy + dz * dz);\n    }\n}\nBidirectionalTool.toolName = 'Bidirectional';\nexport default BidirectionalTool;\n//# sourceMappingURL=BidirectionalTool.js.map","import { Events } from '../../enums';\nimport { getEnabledElement, triggerEvent, eventTarget, utilities as csUtils, } from '@cornerstonejs/core';\nimport { AnnotationTool } from '../base';\nimport throttle from '../../utilities/throttle';\nimport { addAnnotation, getAnnotations, removeAnnotation, } from '../../stateManagement/annotation/annotationState';\nimport { isAnnotationLocked } from '../../stateManagement/annotation/annotationLocking';\nimport { isAnnotationVisible } from '../../stateManagement/annotation/annotationVisibility';\nimport * as lineSegment from '../../utilities/math/line';\nimport { drawHandles as drawHandlesSvg, drawLine as drawLineSvg, drawLinkedTextBox as drawLinkedTextBoxSvg, } from '../../drawingSvg';\nimport { state } from '../../store';\nimport { getViewportIdsWithToolToRender } from '../../utilities/viewportFilters';\nimport { getTextBoxCoordsCanvas } from '../../utilities/drawing';\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\nimport { resetElementCursor, hideElementCursor, } from '../../cursors/elementCursor';\nconst { transformWorldToIndex } = csUtils;\nclass LengthTool extends AnnotationTool {\n    constructor(toolProps = {}, defaultToolProps = {\n        supportedInteractionTypes: ['Mouse', 'Touch'],\n        configuration: {\n            preventHandleOutsideImage: false,\n        },\n    }) {\n        super(toolProps, defaultToolProps);\n        this.addNewAnnotation = (evt) => {\n            const eventDetail = evt.detail;\n            const { currentPoints, element } = eventDetail;\n            const worldPos = currentPoints.world;\n            const enabledElement = getEnabledElement(element);\n            const { viewport, renderingEngine } = enabledElement;\n            hideElementCursor(element);\n            this.isDrawing = true;\n            const camera = viewport.getCamera();\n            const { viewPlaneNormal, viewUp } = camera;\n            const referencedImageId = this.getReferencedImageId(viewport, worldPos, viewPlaneNormal, viewUp);\n            const FrameOfReferenceUID = viewport.getFrameOfReferenceUID();\n            const annotation = {\n                highlighted: true,\n                invalidated: true,\n                metadata: {\n                    toolName: this.getToolName(),\n                    viewPlaneNormal: [...viewPlaneNormal],\n                    viewUp: [...viewUp],\n                    FrameOfReferenceUID,\n                    referencedImageId,\n                },\n                data: {\n                    handles: {\n                        points: [[...worldPos], [...worldPos]],\n                        activeHandleIndex: null,\n                        textBox: {\n                            hasMoved: false,\n                            worldPosition: [0, 0, 0],\n                            worldBoundingBox: {\n                                topLeft: [0, 0, 0],\n                                topRight: [0, 0, 0],\n                                bottomLeft: [0, 0, 0],\n                                bottomRight: [0, 0, 0],\n                            },\n                        },\n                    },\n                    label: '',\n                    cachedStats: {},\n                },\n            };\n            addAnnotation(annotation, element);\n            const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n            this.editData = {\n                annotation,\n                viewportIdsToRender,\n                handleIndex: 1,\n                movingTextBox: false,\n                newAnnotation: true,\n                hasMoved: false,\n            };\n            this._activateDraw(element);\n            evt.preventDefault();\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n            return annotation;\n        };\n        this.isPointNearTool = (element, annotation, canvasCoords, proximity) => {\n            const enabledElement = getEnabledElement(element);\n            const { viewport } = enabledElement;\n            const { data } = annotation;\n            const [point1, point2] = data.handles.points;\n            const canvasPoint1 = viewport.worldToCanvas(point1);\n            const canvasPoint2 = viewport.worldToCanvas(point2);\n            const line = {\n                start: {\n                    x: canvasPoint1[0],\n                    y: canvasPoint1[1],\n                },\n                end: {\n                    x: canvasPoint2[0],\n                    y: canvasPoint2[1],\n                },\n            };\n            const distanceToPoint = lineSegment.distanceToPoint([line.start.x, line.start.y], [line.end.x, line.end.y], [canvasCoords[0], canvasCoords[1]]);\n            if (distanceToPoint <= proximity) {\n                return true;\n            }\n            return false;\n        };\n        this.toolSelectedCallback = (evt, annotation) => {\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            annotation.highlighted = true;\n            const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n            this.editData = {\n                annotation,\n                viewportIdsToRender,\n                movingTextBox: false,\n            };\n            this._activateModify(element);\n            hideElementCursor(element);\n            const enabledElement = getEnabledElement(element);\n            const { renderingEngine } = enabledElement;\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n            evt.preventDefault();\n        };\n        this._endCallback = (evt) => {\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            const { annotation, viewportIdsToRender, newAnnotation, hasMoved } = this.editData;\n            const { data } = annotation;\n            if (newAnnotation && !hasMoved) {\n                return;\n            }\n            data.handles.activeHandleIndex = null;\n            this._deactivateModify(element);\n            this._deactivateDraw(element);\n            resetElementCursor(element);\n            const enabledElement = getEnabledElement(element);\n            const { renderingEngine } = enabledElement;\n            if (this.isHandleOutsideImage &&\n                this.configuration.preventHandleOutsideImage) {\n                removeAnnotation(annotation.annotationUID);\n            }\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n            if (newAnnotation) {\n                const eventType = Events.ANNOTATION_COMPLETED;\n                const eventDetail = {\n                    annotation,\n                };\n                triggerEvent(eventTarget, eventType, eventDetail);\n            }\n            this.editData = null;\n            this.isDrawing = false;\n        };\n        this._dragCallback = (evt) => {\n            this.isDrawing = true;\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            const { annotation, viewportIdsToRender, handleIndex, movingTextBox } = this.editData;\n            const { data } = annotation;\n            if (movingTextBox) {\n                const { deltaPoints } = eventDetail;\n                const worldPosDelta = deltaPoints.world;\n                const { textBox } = data.handles;\n                const { worldPosition } = textBox;\n                worldPosition[0] += worldPosDelta[0];\n                worldPosition[1] += worldPosDelta[1];\n                worldPosition[2] += worldPosDelta[2];\n                textBox.hasMoved = true;\n            }\n            else if (handleIndex === undefined) {\n                const { deltaPoints } = eventDetail;\n                const worldPosDelta = deltaPoints.world;\n                const points = data.handles.points;\n                points.forEach((point) => {\n                    point[0] += worldPosDelta[0];\n                    point[1] += worldPosDelta[1];\n                    point[2] += worldPosDelta[2];\n                });\n                annotation.invalidated = true;\n            }\n            else {\n                const { currentPoints } = eventDetail;\n                const worldPos = currentPoints.world;\n                data.handles.points[handleIndex] = [...worldPos];\n                annotation.invalidated = true;\n            }\n            this.editData.hasMoved = true;\n            const enabledElement = getEnabledElement(element);\n            const { renderingEngine } = enabledElement;\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n        };\n        this.cancel = (element) => {\n            if (this.isDrawing) {\n                this.isDrawing = false;\n                this._deactivateDraw(element);\n                this._deactivateModify(element);\n                resetElementCursor(element);\n                const { annotation, viewportIdsToRender, newAnnotation } = this.editData;\n                const { data } = annotation;\n                annotation.highlighted = false;\n                data.handles.activeHandleIndex = null;\n                const enabledElement = getEnabledElement(element);\n                const { renderingEngine } = enabledElement;\n                triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n                if (newAnnotation) {\n                    const eventType = Events.ANNOTATION_COMPLETED;\n                    const eventDetail = {\n                        annotation,\n                    };\n                    triggerEvent(eventTarget, eventType, eventDetail);\n                }\n                this.editData = null;\n                return annotation.annotationUID;\n            }\n        };\n        this._activateModify = (element) => {\n            state.isInteractingWithTool = true;\n            element.addEventListener(Events.MOUSE_UP, this._endCallback);\n            element.addEventListener(Events.MOUSE_DRAG, this._dragCallback);\n            element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n            element.addEventListener(Events.TOUCH_END, this._endCallback);\n            element.addEventListener(Events.TOUCH_DRAG, this._dragCallback);\n            element.addEventListener(Events.TOUCH_TAP, this._endCallback);\n        };\n        this._deactivateModify = (element) => {\n            state.isInteractingWithTool = false;\n            element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n            element.removeEventListener(Events.MOUSE_DRAG, this._dragCallback);\n            element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n            element.removeEventListener(Events.TOUCH_END, this._endCallback);\n            element.removeEventListener(Events.TOUCH_DRAG, this._dragCallback);\n            element.removeEventListener(Events.TOUCH_TAP, this._endCallback);\n        };\n        this._activateDraw = (element) => {\n            state.isInteractingWithTool = true;\n            element.addEventListener(Events.MOUSE_UP, this._endCallback);\n            element.addEventListener(Events.MOUSE_DRAG, this._dragCallback);\n            element.addEventListener(Events.MOUSE_MOVE, this._dragCallback);\n            element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n            element.addEventListener(Events.TOUCH_END, this._endCallback);\n            element.addEventListener(Events.TOUCH_DRAG, this._dragCallback);\n            element.addEventListener(Events.TOUCH_TAP, this._endCallback);\n        };\n        this._deactivateDraw = (element) => {\n            state.isInteractingWithTool = false;\n            element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n            element.removeEventListener(Events.MOUSE_DRAG, this._dragCallback);\n            element.removeEventListener(Events.MOUSE_MOVE, this._dragCallback);\n            element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n            element.removeEventListener(Events.TOUCH_END, this._endCallback);\n            element.removeEventListener(Events.TOUCH_DRAG, this._dragCallback);\n            element.removeEventListener(Events.TOUCH_TAP, this._endCallback);\n        };\n        this.renderAnnotation = (enabledElement, svgDrawingHelper) => {\n            let renderStatus = false;\n            const { viewport } = enabledElement;\n            const { element } = viewport;\n            let annotations = getAnnotations(this.getToolName(), element);\n            if (!annotations?.length) {\n                return renderStatus;\n            }\n            annotations = this.filterInteractableAnnotationsForElement(element, annotations);\n            if (!annotations?.length) {\n                return renderStatus;\n            }\n            const targetId = this.getTargetId(viewport);\n            const renderingEngine = viewport.getRenderingEngine();\n            const styleSpecifier = {\n                toolGroupId: this.toolGroupId,\n                toolName: this.getToolName(),\n                viewportId: enabledElement.viewport.id,\n            };\n            for (let i = 0; i < annotations.length; i++) {\n                const annotation = annotations[i];\n                const { annotationUID, data } = annotation;\n                const { points, activeHandleIndex } = data.handles;\n                styleSpecifier.annotationUID = annotationUID;\n                const lineWidth = this.getStyle('lineWidth', styleSpecifier, annotation);\n                const lineDash = this.getStyle('lineDash', styleSpecifier, annotation);\n                const color = this.getStyle('color', styleSpecifier, annotation);\n                const shadow = this.getStyle('shadow', styleSpecifier, annotation);\n                const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n                let activeHandleCanvasCoords;\n                if (!data.cachedStats[targetId] ||\n                    data.cachedStats[targetId].unit === undefined) {\n                    data.cachedStats[targetId] = {\n                        length: null,\n                        unit: null,\n                    };\n                    this._calculateCachedStats(annotation, renderingEngine, enabledElement);\n                }\n                else if (annotation.invalidated) {\n                    this._throttledCalculateCachedStats(annotation, renderingEngine, enabledElement);\n                }\n                if (!isAnnotationVisible(annotationUID)) {\n                    continue;\n                }\n                if (!isAnnotationLocked(annotation) &&\n                    !this.editData &&\n                    activeHandleIndex !== null) {\n                    activeHandleCanvasCoords = [canvasCoordinates[activeHandleIndex]];\n                }\n                if (activeHandleCanvasCoords) {\n                    const handleGroupUID = '0';\n                    drawHandlesSvg(svgDrawingHelper, annotationUID, handleGroupUID, canvasCoordinates, {\n                        color,\n                        lineDash,\n                        lineWidth,\n                    });\n                }\n                const dataId = `${annotationUID}-line`;\n                const lineUID = '1';\n                drawLineSvg(svgDrawingHelper, annotationUID, lineUID, canvasCoordinates[0], canvasCoordinates[1], {\n                    color,\n                    width: lineWidth,\n                    lineDash,\n                    shadow,\n                }, dataId);\n                renderStatus = true;\n                if (!viewport.getRenderingEngine()) {\n                    console.warn('Rendering Engine has been destroyed');\n                    return renderStatus;\n                }\n                const textLines = this._getTextLines(data, targetId);\n                if (!data.handles.textBox.hasMoved) {\n                    const canvasTextBoxCoords = getTextBoxCoordsCanvas(canvasCoordinates);\n                    data.handles.textBox.worldPosition =\n                        viewport.canvasToWorld(canvasTextBoxCoords);\n                }\n                const textBoxPosition = viewport.worldToCanvas(data.handles.textBox.worldPosition);\n                const textBoxUID = '1';\n                const boundingBox = drawLinkedTextBoxSvg(svgDrawingHelper, annotationUID, textBoxUID, textLines, textBoxPosition, canvasCoordinates, {}, this.getLinkedTextBoxStyle(styleSpecifier, annotation));\n                const { x: left, y: top, width, height } = boundingBox;\n                data.handles.textBox.worldBoundingBox = {\n                    topLeft: viewport.canvasToWorld([left, top]),\n                    topRight: viewport.canvasToWorld([left + width, top]),\n                    bottomLeft: viewport.canvasToWorld([left, top + height]),\n                    bottomRight: viewport.canvasToWorld([left + width, top + height]),\n                };\n            }\n            return renderStatus;\n        };\n        this._throttledCalculateCachedStats = throttle(this._calculateCachedStats, 100, { trailing: true });\n    }\n    handleSelectedCallback(evt, annotation, handle) {\n        const eventDetail = evt.detail;\n        const { element } = eventDetail;\n        const { data } = annotation;\n        annotation.highlighted = true;\n        let movingTextBox = false;\n        let handleIndex;\n        if (handle.worldPosition) {\n            movingTextBox = true;\n        }\n        else {\n            handleIndex = data.handles.points.findIndex((p) => p === handle);\n        }\n        const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n        this.editData = {\n            annotation,\n            viewportIdsToRender,\n            handleIndex,\n            movingTextBox,\n        };\n        this._activateModify(element);\n        hideElementCursor(element);\n        const enabledElement = getEnabledElement(element);\n        const { renderingEngine } = enabledElement;\n        triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n        evt.preventDefault();\n    }\n    _getTextLines(data, targetId) {\n        const cachedVolumeStats = data.cachedStats[targetId];\n        const { length, unit } = cachedVolumeStats;\n        if (length === undefined || length === null || isNaN(length)) {\n            return;\n        }\n        const textLines = [`${length.toFixed(2)} ${unit}`];\n        return textLines;\n    }\n    _calculateLength(pos1, pos2) {\n        const dx = pos1[0] - pos2[0];\n        const dy = pos1[1] - pos2[1];\n        const dz = pos1[2] - pos2[2];\n        return Math.sqrt(dx * dx + dy * dy + dz * dz);\n    }\n    _calculateCachedStats(annotation, renderingEngine, enabledElement) {\n        const data = annotation.data;\n        const { viewportId, renderingEngineId } = enabledElement;\n        const worldPos1 = data.handles.points[0];\n        const worldPos2 = data.handles.points[1];\n        const { cachedStats } = data;\n        const targetIds = Object.keys(cachedStats);\n        for (let i = 0; i < targetIds.length; i++) {\n            const targetId = targetIds[i];\n            const image = this.getTargetIdImage(targetId, renderingEngine);\n            if (!image) {\n                continue;\n            }\n            const { imageData, dimensions, hasPixelSpacing } = image;\n            const length = this._calculateLength(worldPos1, worldPos2);\n            const index1 = transformWorldToIndex(imageData, worldPos1);\n            const index2 = transformWorldToIndex(imageData, worldPos2);\n            this._isInsideVolume(index1, index2, dimensions)\n                ? (this.isHandleOutsideImage = false)\n                : (this.isHandleOutsideImage = true);\n            cachedStats[targetId] = {\n                length,\n                unit: hasPixelSpacing ? 'mm' : 'px',\n            };\n        }\n        annotation.invalidated = false;\n        const eventType = Events.ANNOTATION_MODIFIED;\n        const eventDetail = {\n            annotation,\n            viewportId,\n            renderingEngineId,\n        };\n        triggerEvent(eventTarget, eventType, eventDetail);\n        return cachedStats;\n    }\n    _isInsideVolume(index1, index2, dimensions) {\n        return (csUtils.indexWithinDimensions(index1, dimensions) &&\n            csUtils.indexWithinDimensions(index2, dimensions));\n    }\n}\nLengthTool.toolName = 'Length';\nexport default LengthTool;\n//# sourceMappingURL=LengthTool.js.map","function getModalityUnit(modality, isPreScaled, isSuvScaled) {\n    if (modality === 'CT') {\n        return 'HU';\n    }\n    else if (modality === 'PT' &&\n        isPreScaled === true &&\n        isSuvScaled === true) {\n        return 'SUV';\n    }\n    else {\n        return '';\n    }\n}\nexport { getModalityUnit };\n//# sourceMappingURL=getModalityUnit.js.map","import { cache, StackViewport, BaseVolumeViewport, } from '@cornerstonejs/core';\nfunction isViewportPreScaled(viewport, targetId) {\n    if (viewport instanceof BaseVolumeViewport) {\n        const volumeId = targetId.split('volumeId:')[1];\n        const volume = cache.getVolume(volumeId);\n        return !!volume?.scaling && Object.keys(volume.scaling).length > 0;\n    }\n    else if (viewport instanceof StackViewport) {\n        const { preScale } = viewport.getImageData() || {};\n        return !!preScale?.scaled;\n    }\n    else {\n        throw new Error('Viewport is not a valid type');\n    }\n}\nexport { isViewportPreScaled };\n//# sourceMappingURL=isViewportPreScaled.js.map","import { vec2 } from 'gl-matrix';\nimport { getEnabledElement, VolumeViewport, triggerEvent, eventTarget, utilities as csUtils, utilities, } from '@cornerstonejs/core';\nimport { AnnotationTool } from '../base';\nimport { addAnnotation, getAnnotations, removeAnnotation, } from '../../stateManagement/annotation/annotationState';\nimport { drawHandles as drawHandlesSvg, drawTextBox as drawTextBoxSvg, } from '../../drawingSvg';\nimport { state } from '../../store';\nimport { Events } from '../../enums';\nimport { getViewportIdsWithToolToRender } from '../../utilities/viewportFilters';\nimport { resetElementCursor, hideElementCursor, } from '../../cursors/elementCursor';\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\nimport { getModalityUnit } from '../../utilities/getModalityUnit';\nimport { isViewportPreScaled } from '../../utilities/viewport/isViewportPreScaled';\nconst { transformWorldToIndex } = csUtils;\nclass ProbeTool extends AnnotationTool {\n    constructor(toolProps = {}, defaultToolProps = {\n        supportedInteractionTypes: ['Mouse', 'Touch'],\n        configuration: {\n            shadow: true,\n            preventHandleOutsideImage: false,\n        },\n    }) {\n        super(toolProps, defaultToolProps);\n        this.addNewAnnotation = (evt) => {\n            const eventDetail = evt.detail;\n            const { currentPoints, element } = eventDetail;\n            const worldPos = currentPoints.world;\n            const enabledElement = getEnabledElement(element);\n            const { viewport, renderingEngine } = enabledElement;\n            this.isDrawing = true;\n            const camera = viewport.getCamera();\n            const { viewPlaneNormal, viewUp } = camera;\n            const referencedImageId = this.getReferencedImageId(viewport, worldPos, viewPlaneNormal, viewUp);\n            const FrameOfReferenceUID = viewport.getFrameOfReferenceUID();\n            const annotation = {\n                invalidated: true,\n                highlighted: true,\n                metadata: {\n                    toolName: this.getToolName(),\n                    viewPlaneNormal: [...viewPlaneNormal],\n                    viewUp: [...viewUp],\n                    FrameOfReferenceUID,\n                    referencedImageId,\n                },\n                data: {\n                    label: '',\n                    handles: { points: [[...worldPos]] },\n                    cachedStats: {},\n                },\n            };\n            addAnnotation(annotation, element);\n            const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n            this.editData = {\n                annotation,\n                newAnnotation: true,\n                viewportIdsToRender,\n            };\n            this._activateModify(element);\n            hideElementCursor(element);\n            evt.preventDefault();\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n            return annotation;\n        };\n        this._endCallback = (evt) => {\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            const { annotation, viewportIdsToRender, newAnnotation } = this.editData;\n            const enabledElement = getEnabledElement(element);\n            const { renderingEngine } = enabledElement;\n            const { viewportId } = enabledElement;\n            this.eventDispatchDetail = {\n                viewportId,\n                renderingEngineId: renderingEngine.id,\n            };\n            this._deactivateModify(element);\n            resetElementCursor(element);\n            this.editData = null;\n            this.isDrawing = false;\n            if (this.isHandleOutsideImage &&\n                this.configuration.preventHandleOutsideImage) {\n                removeAnnotation(annotation.annotationUID);\n            }\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n            if (newAnnotation) {\n                const eventType = Events.ANNOTATION_COMPLETED;\n                const eventDetail = {\n                    annotation,\n                };\n                triggerEvent(eventTarget, eventType, eventDetail);\n            }\n        };\n        this._dragCallback = (evt) => {\n            this.isDrawing = true;\n            const eventDetail = evt.detail;\n            const { currentPoints, element } = eventDetail;\n            const worldPos = currentPoints.world;\n            const { annotation, viewportIdsToRender } = this.editData;\n            const { data } = annotation;\n            data.handles.points[0] = [...worldPos];\n            annotation.invalidated = true;\n            const enabledElement = getEnabledElement(element);\n            const { renderingEngine } = enabledElement;\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n        };\n        this.cancel = (element) => {\n            if (this.isDrawing) {\n                this.isDrawing = false;\n                this._deactivateModify(element);\n                resetElementCursor(element);\n                const { annotation, viewportIdsToRender, newAnnotation } = this.editData;\n                const { data } = annotation;\n                annotation.highlighted = false;\n                data.handles.activeHandleIndex = null;\n                const enabledElement = getEnabledElement(element);\n                const { renderingEngine } = enabledElement;\n                triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n                if (newAnnotation) {\n                    const eventType = Events.ANNOTATION_COMPLETED;\n                    const eventDetail = {\n                        annotation,\n                    };\n                    triggerEvent(eventTarget, eventType, eventDetail);\n                }\n                this.editData = null;\n                return annotation.annotationUID;\n            }\n        };\n        this._activateModify = (element) => {\n            state.isInteractingWithTool = true;\n            element.addEventListener(Events.MOUSE_UP, this._endCallback);\n            element.addEventListener(Events.MOUSE_DRAG, this._dragCallback);\n            element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n            element.addEventListener(Events.TOUCH_END, this._endCallback);\n            element.addEventListener(Events.TOUCH_DRAG, this._dragCallback);\n            element.addEventListener(Events.TOUCH_TAP, this._endCallback);\n        };\n        this._deactivateModify = (element) => {\n            state.isInteractingWithTool = false;\n            element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n            element.removeEventListener(Events.MOUSE_DRAG, this._dragCallback);\n            element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n            element.removeEventListener(Events.TOUCH_END, this._endCallback);\n            element.removeEventListener(Events.TOUCH_DRAG, this._dragCallback);\n            element.removeEventListener(Events.TOUCH_TAP, this._endCallback);\n        };\n        this.renderAnnotation = (enabledElement, svgDrawingHelper) => {\n            let renderStatus = false;\n            const { viewport } = enabledElement;\n            const { element } = viewport;\n            let annotations = getAnnotations(this.getToolName(), element);\n            if (!annotations?.length) {\n                return renderStatus;\n            }\n            annotations = this.filterInteractableAnnotationsForElement(element, annotations);\n            if (!annotations?.length) {\n                return renderStatus;\n            }\n            const targetId = this.getTargetId(viewport);\n            const renderingEngine = viewport.getRenderingEngine();\n            const styleSpecifier = {\n                toolGroupId: this.toolGroupId,\n                toolName: this.getToolName(),\n                viewportId: enabledElement.viewport.id,\n            };\n            for (let i = 0; i < annotations.length; i++) {\n                const annotation = annotations[i];\n                const annotationUID = annotation.annotationUID;\n                const data = annotation.data;\n                const point = data.handles.points[0];\n                const canvasCoordinates = viewport.worldToCanvas(point);\n                styleSpecifier.annotationUID = annotationUID;\n                const color = this.getStyle('color', styleSpecifier, annotation);\n                if (!data.cachedStats[targetId]) {\n                    data.cachedStats[targetId] = {\n                        Modality: null,\n                        index: null,\n                        value: null,\n                    };\n                    this._calculateCachedStats(annotation, renderingEngine, enabledElement);\n                }\n                else if (annotation.invalidated) {\n                    this._calculateCachedStats(annotation, renderingEngine, enabledElement);\n                    if (viewport instanceof VolumeViewport) {\n                        const { referencedImageId } = annotation.metadata;\n                        for (const targetId in data.cachedStats) {\n                            if (targetId.startsWith('imageId')) {\n                                const viewports = renderingEngine.getStackViewports();\n                                const invalidatedStack = viewports.find((vp) => {\n                                    const referencedImageURI = csUtils.imageIdToURI(referencedImageId);\n                                    const hasImageURI = vp.hasImageURI(referencedImageURI);\n                                    const currentImageURI = csUtils.imageIdToURI(vp.getCurrentImageId());\n                                    return hasImageURI && currentImageURI !== referencedImageURI;\n                                });\n                                if (invalidatedStack) {\n                                    delete data.cachedStats[targetId];\n                                }\n                            }\n                        }\n                    }\n                }\n                if (!viewport.getRenderingEngine()) {\n                    console.warn('Rendering Engine has been destroyed');\n                    return renderStatus;\n                }\n                const handleGroupUID = '0';\n                drawHandlesSvg(svgDrawingHelper, annotationUID, handleGroupUID, [canvasCoordinates], { color });\n                renderStatus = true;\n                const isPreScaled = isViewportPreScaled(viewport, targetId);\n                const isSuvScaled = this.isSuvScaled(viewport, targetId, annotation.metadata.referencedImageId);\n                const textLines = this._getTextLines(data, targetId, isPreScaled, isSuvScaled);\n                if (textLines) {\n                    const textCanvasCoordinates = [\n                        canvasCoordinates[0] + 6,\n                        canvasCoordinates[1] - 6,\n                    ];\n                    const textUID = '0';\n                    drawTextBoxSvg(svgDrawingHelper, annotationUID, textUID, textLines, [textCanvasCoordinates[0], textCanvasCoordinates[1]], this.getLinkedTextBoxStyle(styleSpecifier, annotation));\n                }\n            }\n            return renderStatus;\n        };\n    }\n    isPointNearTool() {\n        return false;\n    }\n    toolSelectedCallback() { }\n    getHandleNearImagePoint(element, annotation, canvasCoords, proximity) {\n        const enabledElement = getEnabledElement(element);\n        const { viewport } = enabledElement;\n        const { data } = annotation;\n        const point = data.handles.points[0];\n        const annotationCanvasCoordinate = viewport.worldToCanvas(point);\n        const near = vec2.distance(canvasCoords, annotationCanvasCoordinate) < proximity;\n        if (near === true) {\n            return point;\n        }\n    }\n    handleSelectedCallback(evt, annotation) {\n        const eventDetail = evt.detail;\n        const { element } = eventDetail;\n        annotation.highlighted = true;\n        const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n        this.editData = {\n            annotation,\n            viewportIdsToRender,\n        };\n        this._activateModify(element);\n        hideElementCursor(element);\n        const enabledElement = getEnabledElement(element);\n        const { renderingEngine } = enabledElement;\n        triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n        evt.preventDefault();\n    }\n    _getTextLines(data, targetId, isPreScaled, isSuvScaled) {\n        const cachedVolumeStats = data.cachedStats[targetId];\n        const { index, Modality, value, SUVBw, SUVLbm, SUVBsa } = cachedVolumeStats;\n        if (value === undefined && SUVBw === undefined) {\n            return;\n        }\n        const textLines = [];\n        const unit = getModalityUnit(Modality, isPreScaled, isSuvScaled);\n        textLines.push(`(${index[0]}, ${index[1]}, ${index[2]})`);\n        if (Modality === 'PT' && isPreScaled === true && SUVBw !== undefined) {\n            textLines.push(`${SUVBw.toFixed(2)} SUV bw`);\n            if (SUVLbm) {\n                textLines.push(`${SUVLbm.toFixed(2)} SUV lbm`);\n            }\n            if (SUVBsa) {\n                textLines.push(`${SUVBsa.toFixed(2)} SUV bsa`);\n            }\n        }\n        else {\n            textLines.push(`${value.toFixed(2)} ${unit}`);\n        }\n        return textLines;\n    }\n    _getValueForModality(value, imageVolume, modality) {\n        const values = {};\n        values['value'] = value;\n        if (modality === 'PT' &&\n            imageVolume.scaling?.PET &&\n            (imageVolume.scaling.PET.suvbwToSuvbsa ||\n                imageVolume.scaling.PET.suvbwToSuvlbm)) {\n            const { suvbwToSuvlbm, suvbwToSuvbsa } = imageVolume.scaling.PET;\n            values['SUVBw'] = value;\n            if (suvbwToSuvlbm) {\n                const SUVLbm = value * suvbwToSuvlbm;\n                values['SUVLbm'] = SUVLbm;\n            }\n            if (suvbwToSuvbsa) {\n                const SUVBsa = value * suvbwToSuvbsa;\n                values['SUVBsa'] = SUVBsa;\n            }\n        }\n        return values;\n    }\n    _calculateCachedStats(annotation, renderingEngine, enabledElement) {\n        const data = annotation.data;\n        const { viewportId, renderingEngineId } = enabledElement;\n        const worldPos = data.handles.points[0];\n        const { cachedStats } = data;\n        const targetIds = Object.keys(cachedStats);\n        for (let i = 0; i < targetIds.length; i++) {\n            const targetId = targetIds[i];\n            const image = this.getTargetIdImage(targetId, renderingEngine);\n            if (!image) {\n                continue;\n            }\n            const { dimensions, imageData, metadata } = image;\n            const scalarData = 'getScalarData' in image ? image.getScalarData() : image.scalarData;\n            const modality = metadata.Modality;\n            const index = transformWorldToIndex(imageData, worldPos);\n            index[0] = Math.round(index[0]);\n            index[1] = Math.round(index[1]);\n            index[2] = Math.round(index[2]);\n            if (csUtils.indexWithinDimensions(index, dimensions)) {\n                this.isHandleOutsideImage = false;\n                const yMultiple = dimensions[0];\n                const zMultiple = dimensions[0] * dimensions[1];\n                const value = scalarData[index[2] * zMultiple + index[1] * yMultiple + index[0]];\n                if (targetId.startsWith('imageId:')) {\n                    const imageId = targetId.split('imageId:')[1];\n                    const imageURI = csUtils.imageIdToURI(imageId);\n                    const viewports = utilities.getViewportsWithImageURI(imageURI, renderingEngineId);\n                    const viewport = viewports[0];\n                    index[2] = viewport.getCurrentImageIdIndex();\n                }\n                const values = this._getValueForModality(value, image, modality);\n                cachedStats[targetId] = {\n                    index,\n                    ...values,\n                    Modality: modality,\n                };\n            }\n            else {\n                this.isHandleOutsideImage = true;\n                cachedStats[targetId] = {\n                    index,\n                    Modality: modality,\n                };\n            }\n            annotation.invalidated = false;\n            const eventType = Events.ANNOTATION_MODIFIED;\n            const eventDetail = {\n                annotation,\n                viewportId,\n                renderingEngineId,\n            };\n            triggerEvent(eventTarget, eventType, eventDetail);\n        }\n        return cachedStats;\n    }\n}\nProbeTool.toolName = 'Probe';\nexport default ProbeTool;\n//# sourceMappingURL=ProbeTool.js.map","import { getEnabledElement } from '@cornerstonejs/core';\nimport { drawHandles as drawHandlesSvg, drawTextBox as drawTextBoxSvg, } from '../../drawingSvg';\nimport { getViewportIdsWithToolToRender } from '../../utilities/viewportFilters';\nimport { hideElementCursor } from '../../cursors/elementCursor';\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\nimport ProbeTool from './ProbeTool';\nimport { isViewportPreScaled } from '../../utilities/viewport/isViewportPreScaled';\nclass DragProbeTool extends ProbeTool {\n    constructor(toolProps = {}, defaultToolProps = {\n        supportedInteractionTypes: ['Mouse', 'Touch'],\n        configuration: {\n            shadow: true,\n            preventHandleOutsideImage: false,\n        },\n    }) {\n        super(toolProps, defaultToolProps);\n        this.postMouseDownCallback = (evt) => {\n            const eventDetail = evt.detail;\n            const { currentPoints, element } = eventDetail;\n            const worldPos = currentPoints.world;\n            const enabledElement = getEnabledElement(element);\n            const { viewport, renderingEngine } = enabledElement;\n            this.isDrawing = true;\n            const camera = viewport.getCamera();\n            const { viewPlaneNormal, viewUp } = camera;\n            const referencedImageId = this.getReferencedImageId(viewport, worldPos, viewPlaneNormal, viewUp);\n            const annotation = {\n                invalidated: true,\n                highlighted: true,\n                isVisible: true,\n                metadata: {\n                    toolName: this.getToolName(),\n                    viewPlaneNormal: [...viewPlaneNormal],\n                    viewUp: [...viewUp],\n                    FrameOfReferenceUID: viewport.getFrameOfReferenceUID(),\n                    referencedImageId,\n                },\n                data: {\n                    label: '',\n                    handles: { points: [[...worldPos]] },\n                    cachedStats: {},\n                },\n            };\n            const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n            this.editData = {\n                annotation,\n                newAnnotation: true,\n                viewportIdsToRender,\n            };\n            this._activateModify(element);\n            hideElementCursor(element);\n            evt.preventDefault();\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n            return annotation;\n        };\n        this.postTouchStartCallback = (evt) => {\n            return this.postMouseDownCallback(evt);\n        };\n        this.renderAnnotation = (enabledElement, svgDrawingHelper) => {\n            let renderStatus = false;\n            const { viewport } = enabledElement;\n            if (!this.editData) {\n                return renderStatus;\n            }\n            const annotations = this.filterInteractableAnnotationsForElement(viewport.element, [this.editData.annotation]);\n            if (!annotations?.length) {\n                return renderStatus;\n            }\n            const targetId = this.getTargetId(viewport);\n            const renderingEngine = viewport.getRenderingEngine();\n            const styleSpecifier = {\n                toolGroupId: this.toolGroupId,\n                toolName: this.getToolName(),\n                viewportId: enabledElement.viewport.id,\n            };\n            const annotation = this.editData.annotation;\n            const annotationUID = annotation.annotationUID;\n            const data = annotation.data;\n            const point = data.handles.points[0];\n            const canvasCoordinates = viewport.worldToCanvas(point);\n            styleSpecifier.annotationUID = annotationUID;\n            const color = this.getStyle('color', styleSpecifier, annotation);\n            if (!data.cachedStats[targetId]) {\n                data.cachedStats[targetId] = {\n                    Modality: null,\n                    index: null,\n                    value: null,\n                };\n                this._calculateCachedStats(annotation, renderingEngine, enabledElement);\n            }\n            else if (annotation.invalidated) {\n                this._calculateCachedStats(annotation, renderingEngine, enabledElement);\n            }\n            if (!viewport.getRenderingEngine()) {\n                console.warn('Rendering Engine has been destroyed');\n                return renderStatus;\n            }\n            const handleGroupUID = '0';\n            drawHandlesSvg(svgDrawingHelper, annotationUID, handleGroupUID, [canvasCoordinates], { color });\n            renderStatus = true;\n            const isPreScaled = isViewportPreScaled(viewport, targetId);\n            const isSuvScaled = this.isSuvScaled(viewport, targetId, annotation.metadata.referencedImageId);\n            const textLines = this._getTextLines(data, targetId, isPreScaled, isSuvScaled);\n            if (textLines) {\n                const textCanvasCoordinates = [\n                    canvasCoordinates[0] + 6,\n                    canvasCoordinates[1] - 6,\n                ];\n                const textUID = '0';\n                drawTextBoxSvg(svgDrawingHelper, annotationUID, textUID, textLines, [textCanvasCoordinates[0], textCanvasCoordinates[1]], this.getLinkedTextBoxStyle(styleSpecifier, annotation));\n            }\n            return renderStatus;\n        };\n    }\n}\nDragProbeTool.toolName = 'DragProbe';\nexport default DragProbeTool;\n//# sourceMappingURL=DragProbeTool.js.map","import * as lineSegment from '../line';\nfunction rectToLineSegments(left, top, width, height) {\n    const topLineStart = [left, top];\n    const topLineEnd = [left + width, top];\n    const rightLineStart = [left + width, top];\n    const rightLineEnd = [left + width, top + height];\n    const bottomLineStart = [left + width, top + height];\n    const bottomLineEnd = [left, top + height];\n    const leftLineStart = [left, top + height];\n    const leftLineEnd = [left, top];\n    const lineSegments = {\n        top: [topLineStart, topLineEnd],\n        right: [rightLineStart, rightLineEnd],\n        bottom: [bottomLineStart, bottomLineEnd],\n        left: [leftLineStart, leftLineEnd],\n    };\n    return lineSegments;\n}\nexport default function distanceToPoint(rect, point) {\n    if (rect.length !== 4 || point.length !== 2) {\n        throw Error('rectangle:[left, top, width, height] or point: [x,y] not defined correctly');\n    }\n    const [left, top, width, height] = rect;\n    let minDistance = 655535;\n    const lineSegments = rectToLineSegments(left, top, width, height);\n    Object.keys(lineSegments).forEach((segment) => {\n        const [lineStart, lineEnd] = lineSegments[segment];\n        const distance = lineSegment.distanceToPoint(lineStart, lineEnd, point);\n        if (distance < minDistance) {\n            minDistance = distance;\n        }\n    });\n    return minDistance;\n}\n//# sourceMappingURL=distanceToPoint.js.map","import { AnnotationTool } from '../base';\nimport { getEnabledElement, VolumeViewport, triggerEvent, eventTarget, utilities as csUtils, } from '@cornerstonejs/core';\nimport throttle from '../../utilities/throttle';\nimport { addAnnotation, getAnnotations, removeAnnotation, } from '../../stateManagement';\nimport { isAnnotationLocked } from '../../stateManagement/annotation/annotationLocking';\nimport { isAnnotationVisible } from '../../stateManagement/annotation/annotationVisibility';\nimport { drawHandles as drawHandlesSvg, drawLinkedTextBox as drawLinkedTextBoxSvg, drawRect as drawRectSvg, } from '../../drawingSvg';\nimport { state } from '../../store';\nimport { Events } from '../../enums';\nimport { getViewportIdsWithToolToRender } from '../../utilities/viewportFilters';\nimport * as rectangle from '../../utilities/math/rectangle';\nimport { getTextBoxCoordsCanvas } from '../../utilities/drawing';\nimport getWorldWidthAndHeightFromCorners from '../../utilities/planar/getWorldWidthAndHeightFromCorners';\nimport { resetElementCursor, hideElementCursor, } from '../../cursors/elementCursor';\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\nimport { getModalityUnit } from '../../utilities/getModalityUnit';\nimport { isViewportPreScaled } from '../../utilities/viewport/isViewportPreScaled';\nconst { transformWorldToIndex } = csUtils;\nclass RectangleROITool extends AnnotationTool {\n    constructor(toolProps = {}, defaultToolProps = {\n        supportedInteractionTypes: ['Mouse', 'Touch'],\n        configuration: {\n            shadow: true,\n            preventHandleOutsideImage: false,\n        },\n    }) {\n        super(toolProps, defaultToolProps);\n        this.addNewAnnotation = (evt) => {\n            const eventDetail = evt.detail;\n            const { currentPoints, element } = eventDetail;\n            const worldPos = currentPoints.world;\n            const enabledElement = getEnabledElement(element);\n            const { viewport, renderingEngine } = enabledElement;\n            this.isDrawing = true;\n            const camera = viewport.getCamera();\n            const { viewPlaneNormal, viewUp } = camera;\n            const referencedImageId = this.getReferencedImageId(viewport, worldPos, viewPlaneNormal, viewUp);\n            const FrameOfReferenceUID = viewport.getFrameOfReferenceUID();\n            const annotation = {\n                invalidated: true,\n                highlighted: true,\n                metadata: {\n                    toolName: this.getToolName(),\n                    viewPlaneNormal: [...viewPlaneNormal],\n                    viewUp: [...viewUp],\n                    FrameOfReferenceUID,\n                    referencedImageId,\n                },\n                data: {\n                    label: '',\n                    handles: {\n                        points: [\n                            [...worldPos],\n                            [...worldPos],\n                            [...worldPos],\n                            [...worldPos],\n                        ],\n                        textBox: {\n                            hasMoved: false,\n                            worldPosition: [0, 0, 0],\n                            worldBoundingBox: {\n                                topLeft: [0, 0, 0],\n                                topRight: [0, 0, 0],\n                                bottomLeft: [0, 0, 0],\n                                bottomRight: [0, 0, 0],\n                            },\n                        },\n                        activeHandleIndex: null,\n                    },\n                    cachedStats: {},\n                },\n            };\n            addAnnotation(annotation, element);\n            const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n            this.editData = {\n                annotation,\n                viewportIdsToRender,\n                handleIndex: 3,\n                movingTextBox: false,\n                newAnnotation: true,\n                hasMoved: false,\n            };\n            this._activateDraw(element);\n            hideElementCursor(element);\n            evt.preventDefault();\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n            return annotation;\n        };\n        this.isPointNearTool = (element, annotation, canvasCoords, proximity) => {\n            const enabledElement = getEnabledElement(element);\n            const { viewport } = enabledElement;\n            const { data } = annotation;\n            const { points } = data.handles;\n            const canvasPoint1 = viewport.worldToCanvas(points[0]);\n            const canvasPoint2 = viewport.worldToCanvas(points[3]);\n            const rect = this._getRectangleImageCoordinates([\n                canvasPoint1,\n                canvasPoint2,\n            ]);\n            const point = [canvasCoords[0], canvasCoords[1]];\n            const { left, top, width, height } = rect;\n            const distanceToPoint = rectangle.distanceToPoint([left, top, width, height], point);\n            if (distanceToPoint <= proximity) {\n                return true;\n            }\n            return false;\n        };\n        this.toolSelectedCallback = (evt, annotation) => {\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            annotation.highlighted = true;\n            const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n            this.editData = {\n                annotation,\n                viewportIdsToRender,\n                movingTextBox: false,\n            };\n            this._activateModify(element);\n            hideElementCursor(element);\n            const enabledElement = getEnabledElement(element);\n            const { renderingEngine } = enabledElement;\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n            evt.preventDefault();\n        };\n        this.handleSelectedCallback = (evt, annotation, handle) => {\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            const { data } = annotation;\n            annotation.highlighted = true;\n            let movingTextBox = false;\n            let handleIndex;\n            if (handle.worldPosition) {\n                movingTextBox = true;\n            }\n            else {\n                handleIndex = data.handles.points.findIndex((p) => p === handle);\n            }\n            const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n            this.editData = {\n                annotation,\n                viewportIdsToRender,\n                handleIndex,\n                movingTextBox,\n            };\n            this._activateModify(element);\n            hideElementCursor(element);\n            const enabledElement = getEnabledElement(element);\n            const { renderingEngine } = enabledElement;\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n            evt.preventDefault();\n        };\n        this._endCallback = (evt) => {\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            const { annotation, viewportIdsToRender, newAnnotation, hasMoved } = this.editData;\n            const { data } = annotation;\n            if (newAnnotation && !hasMoved) {\n                return;\n            }\n            data.handles.activeHandleIndex = null;\n            this._deactivateModify(element);\n            this._deactivateDraw(element);\n            resetElementCursor(element);\n            const enabledElement = getEnabledElement(element);\n            const { renderingEngine } = enabledElement;\n            this.editData = null;\n            this.isDrawing = false;\n            if (this.isHandleOutsideImage &&\n                this.configuration.preventHandleOutsideImage) {\n                removeAnnotation(annotation.annotationUID);\n            }\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n            if (newAnnotation) {\n                const eventType = Events.ANNOTATION_COMPLETED;\n                const eventDetail = {\n                    annotation,\n                };\n                triggerEvent(eventTarget, eventType, eventDetail);\n            }\n        };\n        this._dragCallback = (evt) => {\n            this.isDrawing = true;\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            const { annotation, viewportIdsToRender, handleIndex, movingTextBox } = this.editData;\n            const { data } = annotation;\n            if (movingTextBox) {\n                const { deltaPoints } = eventDetail;\n                const worldPosDelta = deltaPoints.world;\n                const { textBox } = data.handles;\n                const { worldPosition } = textBox;\n                worldPosition[0] += worldPosDelta[0];\n                worldPosition[1] += worldPosDelta[1];\n                worldPosition[2] += worldPosDelta[2];\n                textBox.hasMoved = true;\n            }\n            else if (handleIndex === undefined) {\n                const { deltaPoints } = eventDetail;\n                const worldPosDelta = deltaPoints.world;\n                const { points } = data.handles;\n                points.forEach((point) => {\n                    point[0] += worldPosDelta[0];\n                    point[1] += worldPosDelta[1];\n                    point[2] += worldPosDelta[2];\n                });\n                annotation.invalidated = true;\n            }\n            else {\n                const { currentPoints } = eventDetail;\n                const enabledElement = getEnabledElement(element);\n                const { worldToCanvas, canvasToWorld } = enabledElement.viewport;\n                const worldPos = currentPoints.world;\n                const { points } = data.handles;\n                points[handleIndex] = [...worldPos];\n                let bottomLeftCanvas;\n                let bottomRightCanvas;\n                let topLeftCanvas;\n                let topRightCanvas;\n                let bottomLeftWorld;\n                let bottomRightWorld;\n                let topLeftWorld;\n                let topRightWorld;\n                switch (handleIndex) {\n                    case 0:\n                    case 3:\n                        bottomLeftCanvas = worldToCanvas(points[0]);\n                        topRightCanvas = worldToCanvas(points[3]);\n                        bottomRightCanvas = [topRightCanvas[0], bottomLeftCanvas[1]];\n                        topLeftCanvas = [bottomLeftCanvas[0], topRightCanvas[1]];\n                        bottomRightWorld = canvasToWorld(bottomRightCanvas);\n                        topLeftWorld = canvasToWorld(topLeftCanvas);\n                        points[1] = bottomRightWorld;\n                        points[2] = topLeftWorld;\n                        break;\n                    case 1:\n                    case 2:\n                        bottomRightCanvas = worldToCanvas(points[1]);\n                        topLeftCanvas = worldToCanvas(points[2]);\n                        bottomLeftCanvas = [\n                            topLeftCanvas[0],\n                            bottomRightCanvas[1],\n                        ];\n                        topRightCanvas = [\n                            bottomRightCanvas[0],\n                            topLeftCanvas[1],\n                        ];\n                        bottomLeftWorld = canvasToWorld(bottomLeftCanvas);\n                        topRightWorld = canvasToWorld(topRightCanvas);\n                        points[0] = bottomLeftWorld;\n                        points[3] = topRightWorld;\n                        break;\n                }\n                annotation.invalidated = true;\n            }\n            this.editData.hasMoved = true;\n            const enabledElement = getEnabledElement(element);\n            const { renderingEngine } = enabledElement;\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n        };\n        this.cancel = (element) => {\n            if (this.isDrawing) {\n                this.isDrawing = false;\n                this._deactivateDraw(element);\n                this._deactivateModify(element);\n                resetElementCursor(element);\n                const { annotation, viewportIdsToRender, newAnnotation } = this.editData;\n                const { data } = annotation;\n                annotation.highlighted = false;\n                data.handles.activeHandleIndex = null;\n                const enabledElement = getEnabledElement(element);\n                const { renderingEngine } = enabledElement;\n                triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n                if (newAnnotation) {\n                    const eventType = Events.ANNOTATION_COMPLETED;\n                    const eventDetail = {\n                        annotation,\n                    };\n                    triggerEvent(eventTarget, eventType, eventDetail);\n                }\n                this.editData = null;\n                return annotation.annotationUID;\n            }\n        };\n        this._activateDraw = (element) => {\n            state.isInteractingWithTool = true;\n            element.addEventListener(Events.MOUSE_UP, this._endCallback);\n            element.addEventListener(Events.MOUSE_DRAG, this._dragCallback);\n            element.addEventListener(Events.MOUSE_MOVE, this._dragCallback);\n            element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n            element.addEventListener(Events.TOUCH_END, this._endCallback);\n            element.addEventListener(Events.TOUCH_DRAG, this._dragCallback);\n            element.addEventListener(Events.TOUCH_TAP, this._endCallback);\n        };\n        this._deactivateDraw = (element) => {\n            state.isInteractingWithTool = false;\n            element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n            element.removeEventListener(Events.MOUSE_DRAG, this._dragCallback);\n            element.removeEventListener(Events.MOUSE_MOVE, this._dragCallback);\n            element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n            element.removeEventListener(Events.TOUCH_END, this._endCallback);\n            element.removeEventListener(Events.TOUCH_DRAG, this._dragCallback);\n            element.removeEventListener(Events.TOUCH_TAP, this._endCallback);\n        };\n        this._activateModify = (element) => {\n            state.isInteractingWithTool = true;\n            element.addEventListener(Events.MOUSE_UP, this._endCallback);\n            element.addEventListener(Events.MOUSE_DRAG, this._dragCallback);\n            element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n            element.addEventListener(Events.TOUCH_END, this._endCallback);\n            element.addEventListener(Events.TOUCH_DRAG, this._dragCallback);\n            element.addEventListener(Events.TOUCH_TAP, this._endCallback);\n        };\n        this._deactivateModify = (element) => {\n            state.isInteractingWithTool = false;\n            element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n            element.removeEventListener(Events.MOUSE_DRAG, this._dragCallback);\n            element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n            element.removeEventListener(Events.TOUCH_END, this._endCallback);\n            element.removeEventListener(Events.TOUCH_DRAG, this._dragCallback);\n            element.removeEventListener(Events.TOUCH_TAP, this._endCallback);\n        };\n        this.renderAnnotation = (enabledElement, svgDrawingHelper) => {\n            let renderStatus = false;\n            const { viewport } = enabledElement;\n            const { element } = viewport;\n            let annotations = getAnnotations(this.getToolName(), element);\n            if (!annotations?.length) {\n                return renderStatus;\n            }\n            annotations = this.filterInteractableAnnotationsForElement(element, annotations);\n            if (!annotations?.length) {\n                return renderStatus;\n            }\n            const targetId = this.getTargetId(viewport);\n            const renderingEngine = viewport.getRenderingEngine();\n            const styleSpecifier = {\n                toolGroupId: this.toolGroupId,\n                toolName: this.getToolName(),\n                viewportId: enabledElement.viewport.id,\n            };\n            for (let i = 0; i < annotations.length; i++) {\n                const annotation = annotations[i];\n                const { annotationUID, data } = annotation;\n                const { points, activeHandleIndex } = data.handles;\n                const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n                styleSpecifier.annotationUID = annotationUID;\n                const lineWidth = this.getStyle('lineWidth', styleSpecifier, annotation);\n                const lineDash = this.getStyle('lineDash', styleSpecifier, annotation);\n                const color = this.getStyle('color', styleSpecifier, annotation);\n                const { viewPlaneNormal, viewUp } = viewport.getCamera();\n                if (!data.cachedStats[targetId] ||\n                    data.cachedStats[targetId].areaUnit === undefined) {\n                    data.cachedStats[targetId] = {\n                        Modality: null,\n                        area: null,\n                        max: null,\n                        mean: null,\n                        stdDev: null,\n                        areaUnit: null,\n                    };\n                    this._calculateCachedStats(annotation, viewPlaneNormal, viewUp, renderingEngine, enabledElement);\n                }\n                else if (annotation.invalidated) {\n                    this._throttledCalculateCachedStats(annotation, viewPlaneNormal, viewUp, renderingEngine, enabledElement);\n                    if (viewport instanceof VolumeViewport) {\n                        const { referencedImageId } = annotation.metadata;\n                        for (const targetId in data.cachedStats) {\n                            if (targetId.startsWith('imageId')) {\n                                const viewports = renderingEngine.getStackViewports();\n                                const invalidatedStack = viewports.find((vp) => {\n                                    const referencedImageURI = csUtils.imageIdToURI(referencedImageId);\n                                    const hasImageURI = vp.hasImageURI(referencedImageURI);\n                                    const currentImageURI = csUtils.imageIdToURI(vp.getCurrentImageId());\n                                    return hasImageURI && currentImageURI !== referencedImageURI;\n                                });\n                                if (invalidatedStack) {\n                                    delete data.cachedStats[targetId];\n                                }\n                            }\n                        }\n                    }\n                }\n                if (!viewport.getRenderingEngine()) {\n                    console.warn('Rendering Engine has been destroyed');\n                    return renderStatus;\n                }\n                let activeHandleCanvasCoords;\n                if (!isAnnotationVisible(annotationUID)) {\n                    continue;\n                }\n                if (!isAnnotationLocked(annotation) &&\n                    !this.editData &&\n                    activeHandleIndex !== null) {\n                    activeHandleCanvasCoords = [canvasCoordinates[activeHandleIndex]];\n                }\n                if (activeHandleCanvasCoords) {\n                    const handleGroupUID = '0';\n                    drawHandlesSvg(svgDrawingHelper, annotationUID, handleGroupUID, activeHandleCanvasCoords, {\n                        color,\n                    });\n                }\n                const dataId = `${annotationUID}-rect`;\n                const rectangleUID = '0';\n                drawRectSvg(svgDrawingHelper, annotationUID, rectangleUID, canvasCoordinates[0], canvasCoordinates[3], {\n                    color,\n                    lineDash,\n                    lineWidth,\n                }, dataId);\n                renderStatus = true;\n                const isPreScaled = isViewportPreScaled(viewport, targetId);\n                const isSuvScaled = this.isSuvScaled(viewport, targetId, annotation.metadata.referencedImageId);\n                const textLines = this._getTextLines(data, targetId, isPreScaled, isSuvScaled);\n                if (!textLines || textLines.length === 0) {\n                    continue;\n                }\n                if (!data.handles.textBox.hasMoved) {\n                    const canvasTextBoxCoords = getTextBoxCoordsCanvas(canvasCoordinates);\n                    data.handles.textBox.worldPosition =\n                        viewport.canvasToWorld(canvasTextBoxCoords);\n                }\n                const textBoxPosition = viewport.worldToCanvas(data.handles.textBox.worldPosition);\n                const textBoxUID = '1';\n                const boundingBox = drawLinkedTextBoxSvg(svgDrawingHelper, annotationUID, textBoxUID, textLines, textBoxPosition, canvasCoordinates, {}, this.getLinkedTextBoxStyle(styleSpecifier, annotation));\n                const { x: left, y: top, width, height } = boundingBox;\n                data.handles.textBox.worldBoundingBox = {\n                    topLeft: viewport.canvasToWorld([left, top]),\n                    topRight: viewport.canvasToWorld([left + width, top]),\n                    bottomLeft: viewport.canvasToWorld([left, top + height]),\n                    bottomRight: viewport.canvasToWorld([left + width, top + height]),\n                };\n            }\n            return renderStatus;\n        };\n        this._getRectangleImageCoordinates = (points) => {\n            const [point0, point1] = points;\n            return {\n                left: Math.min(point0[0], point1[0]),\n                top: Math.min(point0[1], point1[1]),\n                width: Math.abs(point0[0] - point1[0]),\n                height: Math.abs(point0[1] - point1[1]),\n            };\n        };\n        this._getTextLines = (data, targetId, isPreScaled, isSuvScaled) => {\n            const cachedVolumeStats = data.cachedStats[targetId];\n            const { area, mean, max, stdDev, Modality, areaUnit } = cachedVolumeStats;\n            if (mean === undefined) {\n                return;\n            }\n            const textLines = [];\n            const unit = getModalityUnit(Modality, isPreScaled, isSuvScaled);\n            textLines.push(`Area: ${area.toFixed(2)} ${areaUnit}\\xb2`);\n            textLines.push(`Mean: ${mean.toFixed(2)} ${unit}`);\n            textLines.push(`Max: ${max.toFixed(2)} ${unit}`);\n            textLines.push(`Std Dev: ${stdDev.toFixed(2)} ${unit}`);\n            return textLines;\n        };\n        this._calculateCachedStats = (annotation, viewPlaneNormal, viewUp, renderingEngine, enabledElement) => {\n            const { data } = annotation;\n            const { viewportId, renderingEngineId } = enabledElement;\n            const worldPos1 = data.handles.points[0];\n            const worldPos2 = data.handles.points[3];\n            const { cachedStats } = data;\n            const targetIds = Object.keys(cachedStats);\n            for (let i = 0; i < targetIds.length; i++) {\n                const targetId = targetIds[i];\n                const image = this.getTargetIdImage(targetId, renderingEngine);\n                if (!image) {\n                    continue;\n                }\n                const { dimensions, imageData, metadata, hasPixelSpacing } = image;\n                const scalarData = 'getScalarData' in image ? image.getScalarData() : image.scalarData;\n                const worldPos1Index = transformWorldToIndex(imageData, worldPos1);\n                worldPos1Index[0] = Math.floor(worldPos1Index[0]);\n                worldPos1Index[1] = Math.floor(worldPos1Index[1]);\n                worldPos1Index[2] = Math.floor(worldPos1Index[2]);\n                const worldPos2Index = transformWorldToIndex(imageData, worldPos2);\n                worldPos2Index[0] = Math.floor(worldPos2Index[0]);\n                worldPos2Index[1] = Math.floor(worldPos2Index[1]);\n                worldPos2Index[2] = Math.floor(worldPos2Index[2]);\n                if (this._isInsideVolume(worldPos1Index, worldPos2Index, dimensions)) {\n                    this.isHandleOutsideImage = false;\n                    const iMin = Math.min(worldPos1Index[0], worldPos2Index[0]);\n                    const iMax = Math.max(worldPos1Index[0], worldPos2Index[0]);\n                    const jMin = Math.min(worldPos1Index[1], worldPos2Index[1]);\n                    const jMax = Math.max(worldPos1Index[1], worldPos2Index[1]);\n                    const kMin = Math.min(worldPos1Index[2], worldPos2Index[2]);\n                    const kMax = Math.max(worldPos1Index[2], worldPos2Index[2]);\n                    const { worldWidth, worldHeight } = getWorldWidthAndHeightFromCorners(viewPlaneNormal, viewUp, worldPos1, worldPos2);\n                    const area = Math.abs(worldWidth * worldHeight);\n                    let count = 0;\n                    let mean = 0;\n                    let stdDev = 0;\n                    let max = -Infinity;\n                    const yMultiple = dimensions[0];\n                    const zMultiple = dimensions[0] * dimensions[1];\n                    for (let k = kMin; k <= kMax; k++) {\n                        for (let j = jMin; j <= jMax; j++) {\n                            for (let i = iMin; i <= iMax; i++) {\n                                const value = scalarData[k * zMultiple + j * yMultiple + i];\n                                if (value > max) {\n                                    max = value;\n                                }\n                                count++;\n                                mean += value;\n                            }\n                        }\n                    }\n                    mean /= count;\n                    for (let k = kMin; k <= kMax; k++) {\n                        for (let j = jMin; j <= jMax; j++) {\n                            for (let i = iMin; i <= iMax; i++) {\n                                const value = scalarData[k * zMultiple + j * yMultiple + i];\n                                const valueMinusMean = value - mean;\n                                stdDev += valueMinusMean * valueMinusMean;\n                            }\n                        }\n                    }\n                    stdDev /= count;\n                    stdDev = Math.sqrt(stdDev);\n                    cachedStats[targetId] = {\n                        Modality: metadata.Modality,\n                        area,\n                        mean,\n                        stdDev,\n                        max,\n                        areaUnit: hasPixelSpacing ? 'mm' : 'px',\n                    };\n                }\n                else {\n                    this.isHandleOutsideImage = true;\n                    cachedStats[targetId] = {\n                        Modality: metadata.Modality,\n                    };\n                }\n            }\n            annotation.invalidated = false;\n            const eventType = Events.ANNOTATION_MODIFIED;\n            const eventDetail = {\n                annotation,\n                viewportId,\n                renderingEngineId,\n            };\n            triggerEvent(eventTarget, eventType, eventDetail);\n            return cachedStats;\n        };\n        this._isInsideVolume = (index1, index2, dimensions) => {\n            return (csUtils.indexWithinDimensions(index1, dimensions) &&\n                csUtils.indexWithinDimensions(index2, dimensions));\n        };\n        this._throttledCalculateCachedStats = throttle(this._calculateCachedStats, 100, { trailing: true });\n    }\n}\nRectangleROITool.toolName = 'RectangleROI';\nexport default RectangleROITool;\n//# sourceMappingURL=RectangleROITool.js.map","import { vec3 } from 'gl-matrix';\nexport default function getWorldWidthAndHeightFromTwoPoints(viewPlaneNormal, viewUp, worldPos1, worldPos2) {\n    const viewRight = vec3.create();\n    vec3.cross(viewRight, viewUp, viewPlaneNormal);\n    const pos1 = vec3.fromValues(...worldPos1);\n    const pos2 = vec3.fromValues(...worldPos2);\n    const diagonal = vec3.create();\n    vec3.subtract(diagonal, pos1, pos2);\n    const diagonalLength = vec3.length(diagonal);\n    if (diagonalLength < 0.0001) {\n        return { worldWidth: 0, worldHeight: 0 };\n    }\n    const cosTheta = vec3.dot(diagonal, viewRight) / (diagonalLength * vec3.length(viewRight));\n    const sinTheta = Math.sqrt(1 - cosTheta * cosTheta);\n    const worldWidth = sinTheta * diagonalLength;\n    const worldHeight = cosTheta * diagonalLength;\n    return { worldWidth, worldHeight };\n}\n//# sourceMappingURL=getWorldWidthAndHeightFromTwoPoints.js.map","import { AnnotationTool } from '../base';\nimport { getEnabledElement, VolumeViewport, eventTarget, triggerEvent, utilities as csUtils, } from '@cornerstonejs/core';\nimport throttle from '../../utilities/throttle';\nimport { addAnnotation, getAnnotations, removeAnnotation, } from '../../stateManagement/annotation/annotationState';\nimport { isAnnotationLocked } from '../../stateManagement/annotation/annotationLocking';\nimport { isAnnotationVisible } from '../../stateManagement/annotation/annotationVisibility';\nimport { drawCircle as drawCircleSvg, drawEllipse as drawEllipseSvg, drawHandles as drawHandlesSvg, drawLinkedTextBox as drawLinkedTextBoxSvg, } from '../../drawingSvg';\nimport { state } from '../../store';\nimport { Events } from '../../enums';\nimport { getViewportIdsWithToolToRender } from '../../utilities/viewportFilters';\nimport { getTextBoxCoordsCanvas } from '../../utilities/drawing';\nimport getWorldWidthAndHeightFromTwoPoints from '../../utilities/planar/getWorldWidthAndHeightFromTwoPoints';\nimport { pointInEllipse, getCanvasEllipseCorners, } from '../../utilities/math/ellipse';\nimport { resetElementCursor, hideElementCursor, } from '../../cursors/elementCursor';\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\nimport { pointInShapeCallback } from '../../utilities/';\nimport { getModalityUnit } from '../../utilities/getModalityUnit';\nimport { isViewportPreScaled } from '../../utilities/viewport/isViewportPreScaled';\nconst { transformWorldToIndex } = csUtils;\nclass EllipticalROITool extends AnnotationTool {\n    constructor(toolProps = {}, defaultToolProps = {\n        supportedInteractionTypes: ['Mouse', 'Touch'],\n        configuration: {\n            shadow: true,\n            preventHandleOutsideImage: false,\n            centerPointRadius: 0,\n        },\n    }) {\n        super(toolProps, defaultToolProps);\n        this.isHandleOutsideImage = false;\n        this.addNewAnnotation = (evt) => {\n            const eventDetail = evt.detail;\n            const { currentPoints, element } = eventDetail;\n            const worldPos = currentPoints.world;\n            const canvasPos = currentPoints.canvas;\n            const enabledElement = getEnabledElement(element);\n            const { viewport, renderingEngine } = enabledElement;\n            this.isDrawing = true;\n            const camera = viewport.getCamera();\n            const { viewPlaneNormal, viewUp } = camera;\n            const referencedImageId = this.getReferencedImageId(viewport, worldPos, viewPlaneNormal, viewUp);\n            const FrameOfReferenceUID = viewport.getFrameOfReferenceUID();\n            const annotation = {\n                highlighted: true,\n                invalidated: true,\n                metadata: {\n                    toolName: this.getToolName(),\n                    viewPlaneNormal: [...viewPlaneNormal],\n                    viewUp: [...viewUp],\n                    FrameOfReferenceUID,\n                    referencedImageId,\n                },\n                data: {\n                    label: '',\n                    handles: {\n                        textBox: {\n                            hasMoved: false,\n                            worldPosition: [0, 0, 0],\n                            worldBoundingBox: {\n                                topLeft: [0, 0, 0],\n                                topRight: [0, 0, 0],\n                                bottomLeft: [0, 0, 0],\n                                bottomRight: [0, 0, 0],\n                            },\n                        },\n                        points: [\n                            [...worldPos],\n                            [...worldPos],\n                            [...worldPos],\n                            [...worldPos],\n                        ],\n                        activeHandleIndex: null,\n                    },\n                    cachedStats: {},\n                    initialRotation: viewport.getRotation(),\n                },\n            };\n            addAnnotation(annotation, element);\n            const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n            this.editData = {\n                annotation,\n                viewportIdsToRender,\n                centerCanvas: canvasPos,\n                newAnnotation: true,\n                hasMoved: false,\n            };\n            this._activateDraw(element);\n            hideElementCursor(element);\n            evt.preventDefault();\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n            return annotation;\n        };\n        this.isPointNearTool = (element, annotation, canvasCoords, proximity) => {\n            const enabledElement = getEnabledElement(element);\n            const { viewport } = enabledElement;\n            const { data } = annotation;\n            const { points } = data.handles;\n            const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n            const canvasCorners = getCanvasEllipseCorners(canvasCoordinates);\n            const [canvasPoint1, canvasPoint2] = canvasCorners;\n            const minorEllipse = {\n                left: Math.min(canvasPoint1[0], canvasPoint2[0]) + proximity / 2,\n                top: Math.min(canvasPoint1[1], canvasPoint2[1]) + proximity / 2,\n                width: Math.abs(canvasPoint1[0] - canvasPoint2[0]) - proximity,\n                height: Math.abs(canvasPoint1[1] - canvasPoint2[1]) - proximity,\n            };\n            const majorEllipse = {\n                left: Math.min(canvasPoint1[0], canvasPoint2[0]) - proximity / 2,\n                top: Math.min(canvasPoint1[1], canvasPoint2[1]) - proximity / 2,\n                width: Math.abs(canvasPoint1[0] - canvasPoint2[0]) + proximity,\n                height: Math.abs(canvasPoint1[1] - canvasPoint2[1]) + proximity,\n            };\n            const pointInMinorEllipse = this._pointInEllipseCanvas(minorEllipse, canvasCoords);\n            const pointInMajorEllipse = this._pointInEllipseCanvas(majorEllipse, canvasCoords);\n            if (pointInMajorEllipse && !pointInMinorEllipse) {\n                return true;\n            }\n            return false;\n        };\n        this.toolSelectedCallback = (evt, annotation) => {\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            annotation.highlighted = true;\n            const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n            this.editData = {\n                annotation,\n                viewportIdsToRender,\n                movingTextBox: false,\n            };\n            hideElementCursor(element);\n            this._activateModify(element);\n            const enabledElement = getEnabledElement(element);\n            const { renderingEngine } = enabledElement;\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n            evt.preventDefault();\n        };\n        this.handleSelectedCallback = (evt, annotation, handle) => {\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            const { data } = annotation;\n            annotation.highlighted = true;\n            let movingTextBox = false;\n            let handleIndex;\n            let centerCanvas;\n            let canvasWidth;\n            let canvasHeight;\n            let originalHandleCanvas;\n            if (handle.worldPosition) {\n                movingTextBox = true;\n            }\n            else {\n                const { points } = data.handles;\n                const enabledElement = getEnabledElement(element);\n                const { worldToCanvas } = enabledElement.viewport;\n                handleIndex = points.findIndex((p) => p === handle);\n                const pointsCanvas = points.map(worldToCanvas);\n                originalHandleCanvas = pointsCanvas[handleIndex];\n                canvasWidth = Math.abs(pointsCanvas[2][0] - pointsCanvas[3][0]);\n                canvasHeight = Math.abs(pointsCanvas[0][1] - pointsCanvas[1][1]);\n                centerCanvas = [\n                    (pointsCanvas[2][0] + pointsCanvas[3][0]) / 2,\n                    (pointsCanvas[0][1] + pointsCanvas[1][1]) / 2,\n                ];\n            }\n            const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n            this.editData = {\n                annotation,\n                viewportIdsToRender,\n                handleIndex,\n                canvasWidth,\n                canvasHeight,\n                centerCanvas,\n                originalHandleCanvas,\n                movingTextBox,\n            };\n            this._activateModify(element);\n            hideElementCursor(element);\n            const enabledElement = getEnabledElement(element);\n            const { renderingEngine } = enabledElement;\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n            evt.preventDefault();\n        };\n        this._endCallback = (evt) => {\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            const { annotation, viewportIdsToRender, newAnnotation, hasMoved } = this.editData;\n            const { data } = annotation;\n            if (newAnnotation && !hasMoved) {\n                return;\n            }\n            annotation.highlighted = false;\n            data.handles.activeHandleIndex = null;\n            this._deactivateModify(element);\n            this._deactivateDraw(element);\n            resetElementCursor(element);\n            const enabledElement = getEnabledElement(element);\n            const { renderingEngine } = enabledElement;\n            this.editData = null;\n            this.isDrawing = false;\n            if (this.isHandleOutsideImage &&\n                this.configuration.preventHandleOutsideImage) {\n                removeAnnotation(annotation.annotationUID);\n            }\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n            if (newAnnotation) {\n                const eventType = Events.ANNOTATION_COMPLETED;\n                const eventDetail = {\n                    annotation,\n                };\n                triggerEvent(eventTarget, eventType, eventDetail);\n            }\n        };\n        this._dragDrawCallback = (evt) => {\n            this.isDrawing = true;\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            const { currentPoints } = eventDetail;\n            const currentCanvasPoints = currentPoints.canvas;\n            const enabledElement = getEnabledElement(element);\n            const { renderingEngine, viewport } = enabledElement;\n            const { canvasToWorld } = viewport;\n            const { annotation, viewportIdsToRender, centerCanvas } = this.editData;\n            const { data } = annotation;\n            const dX = Math.abs(currentCanvasPoints[0] - centerCanvas[0]);\n            const dY = Math.abs(currentCanvasPoints[1] - centerCanvas[1]);\n            const bottomCanvas = [centerCanvas[0], centerCanvas[1] - dY];\n            const topCanvas = [centerCanvas[0], centerCanvas[1] + dY];\n            const leftCanvas = [centerCanvas[0] - dX, centerCanvas[1]];\n            const rightCanvas = [centerCanvas[0] + dX, centerCanvas[1]];\n            data.handles.points = [\n                canvasToWorld(bottomCanvas),\n                canvasToWorld(topCanvas),\n                canvasToWorld(leftCanvas),\n                canvasToWorld(rightCanvas),\n            ];\n            annotation.invalidated = true;\n            this.editData.hasMoved = true;\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n        };\n        this._dragModifyCallback = (evt) => {\n            this.isDrawing = true;\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            const { annotation, viewportIdsToRender, handleIndex, movingTextBox } = this.editData;\n            const { data } = annotation;\n            if (movingTextBox) {\n                const { deltaPoints } = eventDetail;\n                const worldPosDelta = deltaPoints.world;\n                const { textBox } = data.handles;\n                const { worldPosition } = textBox;\n                worldPosition[0] += worldPosDelta[0];\n                worldPosition[1] += worldPosDelta[1];\n                worldPosition[2] += worldPosDelta[2];\n                textBox.hasMoved = true;\n            }\n            else if (handleIndex === undefined) {\n                const { deltaPoints } = eventDetail;\n                const worldPosDelta = deltaPoints.world;\n                const points = data.handles.points;\n                points.forEach((point) => {\n                    point[0] += worldPosDelta[0];\n                    point[1] += worldPosDelta[1];\n                    point[2] += worldPosDelta[2];\n                });\n                annotation.invalidated = true;\n            }\n            else {\n                this._dragHandle(evt);\n                annotation.invalidated = true;\n            }\n            const enabledElement = getEnabledElement(element);\n            const { renderingEngine } = enabledElement;\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n        };\n        this._dragHandle = (evt) => {\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            const enabledElement = getEnabledElement(element);\n            const { canvasToWorld } = enabledElement.viewport;\n            const { annotation, canvasWidth, canvasHeight, handleIndex, centerCanvas, originalHandleCanvas, } = this.editData;\n            const { data } = annotation;\n            const { points } = data.handles;\n            const { currentPoints } = eventDetail;\n            const currentCanvasPoints = currentPoints.canvas;\n            if (handleIndex === 0 || handleIndex === 1) {\n                const dYCanvas = Math.abs(currentCanvasPoints[1] - centerCanvas[1]);\n                const canvasBottom = [\n                    centerCanvas[0],\n                    centerCanvas[1] - dYCanvas,\n                ];\n                const canvasTop = [\n                    centerCanvas[0],\n                    centerCanvas[1] + dYCanvas,\n                ];\n                points[0] = canvasToWorld(canvasBottom);\n                points[1] = canvasToWorld(canvasTop);\n                const dXCanvas = currentCanvasPoints[0] - originalHandleCanvas[0];\n                const newHalfCanvasWidth = canvasWidth / 2 + dXCanvas;\n                const canvasLeft = [\n                    centerCanvas[0] - newHalfCanvasWidth,\n                    centerCanvas[1],\n                ];\n                const canvasRight = [\n                    centerCanvas[0] + newHalfCanvasWidth,\n                    centerCanvas[1],\n                ];\n                points[2] = canvasToWorld(canvasLeft);\n                points[3] = canvasToWorld(canvasRight);\n            }\n            else {\n                const dXCanvas = Math.abs(currentCanvasPoints[0] - centerCanvas[0]);\n                const canvasLeft = [\n                    centerCanvas[0] - dXCanvas,\n                    centerCanvas[1],\n                ];\n                const canvasRight = [\n                    centerCanvas[0] + dXCanvas,\n                    centerCanvas[1],\n                ];\n                points[2] = canvasToWorld(canvasLeft);\n                points[3] = canvasToWorld(canvasRight);\n                const dYCanvas = currentCanvasPoints[1] - originalHandleCanvas[1];\n                const newHalfCanvasHeight = canvasHeight / 2 + dYCanvas;\n                const canvasBottom = [\n                    centerCanvas[0],\n                    centerCanvas[1] - newHalfCanvasHeight,\n                ];\n                const canvasTop = [\n                    centerCanvas[0],\n                    centerCanvas[1] + newHalfCanvasHeight,\n                ];\n                points[0] = canvasToWorld(canvasBottom);\n                points[1] = canvasToWorld(canvasTop);\n            }\n        };\n        this.cancel = (element) => {\n            if (this.isDrawing) {\n                this.isDrawing = false;\n                this._deactivateDraw(element);\n                this._deactivateModify(element);\n                resetElementCursor(element);\n                const { annotation, viewportIdsToRender, newAnnotation } = this.editData;\n                const { data } = annotation;\n                annotation.highlighted = false;\n                data.handles.activeHandleIndex = null;\n                const enabledElement = getEnabledElement(element);\n                const { renderingEngine } = enabledElement;\n                triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n                if (newAnnotation) {\n                    const eventType = Events.ANNOTATION_COMPLETED;\n                    const eventDetail = {\n                        annotation,\n                    };\n                    triggerEvent(eventTarget, eventType, eventDetail);\n                }\n                this.editData = null;\n                return annotation.annotationUID;\n            }\n        };\n        this._activateModify = (element) => {\n            state.isInteractingWithTool = true;\n            element.addEventListener(Events.MOUSE_UP, this._endCallback);\n            element.addEventListener(Events.MOUSE_DRAG, this._dragModifyCallback);\n            element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n            element.addEventListener(Events.TOUCH_END, this._endCallback);\n            element.addEventListener(Events.TOUCH_DRAG, this._dragModifyCallback);\n            element.addEventListener(Events.TOUCH_TAP, this._endCallback);\n        };\n        this._deactivateModify = (element) => {\n            state.isInteractingWithTool = false;\n            element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n            element.removeEventListener(Events.MOUSE_DRAG, this._dragModifyCallback);\n            element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n            element.removeEventListener(Events.TOUCH_END, this._endCallback);\n            element.removeEventListener(Events.TOUCH_DRAG, this._dragModifyCallback);\n            element.removeEventListener(Events.TOUCH_TAP, this._endCallback);\n        };\n        this._activateDraw = (element) => {\n            state.isInteractingWithTool = true;\n            element.addEventListener(Events.MOUSE_UP, this._endCallback);\n            element.addEventListener(Events.MOUSE_DRAG, this._dragDrawCallback);\n            element.addEventListener(Events.MOUSE_MOVE, this._dragDrawCallback);\n            element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n            element.addEventListener(Events.TOUCH_END, this._endCallback);\n            element.addEventListener(Events.TOUCH_DRAG, this._dragDrawCallback);\n            element.addEventListener(Events.TOUCH_TAP, this._endCallback);\n        };\n        this._deactivateDraw = (element) => {\n            state.isInteractingWithTool = false;\n            element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n            element.removeEventListener(Events.MOUSE_DRAG, this._dragDrawCallback);\n            element.removeEventListener(Events.MOUSE_MOVE, this._dragDrawCallback);\n            element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n            element.removeEventListener(Events.TOUCH_END, this._endCallback);\n            element.removeEventListener(Events.TOUCH_DRAG, this._dragDrawCallback);\n            element.removeEventListener(Events.TOUCH_TAP, this._endCallback);\n        };\n        this.renderAnnotation = (enabledElement, svgDrawingHelper) => {\n            let renderStatus = false;\n            const { viewport } = enabledElement;\n            const { element } = viewport;\n            let annotations = getAnnotations(this.getToolName(), element);\n            if (!annotations?.length) {\n                return renderStatus;\n            }\n            annotations = this.filterInteractableAnnotationsForElement(element, annotations);\n            if (!annotations?.length) {\n                return renderStatus;\n            }\n            const targetId = this.getTargetId(viewport);\n            const renderingEngine = viewport.getRenderingEngine();\n            const styleSpecifier = {\n                toolGroupId: this.toolGroupId,\n                toolName: this.getToolName(),\n                viewportId: enabledElement.viewport.id,\n            };\n            for (let i = 0; i < annotations.length; i++) {\n                const annotation = annotations[i];\n                const { annotationUID, data } = annotation;\n                const { handles } = data;\n                const { points, activeHandleIndex } = handles;\n                styleSpecifier.annotationUID = annotationUID;\n                const lineWidth = this.getStyle('lineWidth', styleSpecifier, annotation);\n                const lineDash = this.getStyle('lineDash', styleSpecifier, annotation);\n                const color = this.getStyle('color', styleSpecifier, annotation);\n                const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n                const rotation = Math.abs(viewport.getRotation() - (data.initialRotation || 0));\n                let canvasCorners;\n                if (rotation == 90 || rotation == 270) {\n                    canvasCorners = getCanvasEllipseCorners([\n                        canvasCoordinates[2],\n                        canvasCoordinates[3],\n                        canvasCoordinates[0],\n                        canvasCoordinates[1],\n                    ]);\n                }\n                else {\n                    canvasCorners = (getCanvasEllipseCorners(canvasCoordinates));\n                }\n                const { centerPointRadius } = this.configuration;\n                if (!data.cachedStats[targetId] ||\n                    data.cachedStats[targetId].areaUnit === undefined) {\n                    data.cachedStats[targetId] = {\n                        Modality: null,\n                        area: null,\n                        max: null,\n                        mean: null,\n                        stdDev: null,\n                        areaUnit: null,\n                    };\n                    this._calculateCachedStats(annotation, viewport, renderingEngine, enabledElement);\n                }\n                else if (annotation.invalidated) {\n                    this._throttledCalculateCachedStats(annotation, viewport, renderingEngine, enabledElement);\n                    if (viewport instanceof VolumeViewport) {\n                        const { referencedImageId } = annotation.metadata;\n                        for (const targetId in data.cachedStats) {\n                            if (targetId.startsWith('imageId')) {\n                                const viewports = renderingEngine.getStackViewports();\n                                const invalidatedStack = viewports.find((vp) => {\n                                    const referencedImageURI = csUtils.imageIdToURI(referencedImageId);\n                                    const hasImageURI = vp.hasImageURI(referencedImageURI);\n                                    const currentImageURI = csUtils.imageIdToURI(vp.getCurrentImageId());\n                                    return hasImageURI && currentImageURI !== referencedImageURI;\n                                });\n                                if (invalidatedStack) {\n                                    delete data.cachedStats[targetId];\n                                }\n                            }\n                        }\n                    }\n                }\n                if (!viewport.getRenderingEngine()) {\n                    console.warn('Rendering Engine has been destroyed');\n                    return renderStatus;\n                }\n                let activeHandleCanvasCoords;\n                if (!isAnnotationVisible(annotationUID)) {\n                    continue;\n                }\n                if (!isAnnotationLocked(annotation) &&\n                    !this.editData &&\n                    activeHandleIndex !== null) {\n                    activeHandleCanvasCoords = [canvasCoordinates[activeHandleIndex]];\n                }\n                if (activeHandleCanvasCoords) {\n                    const handleGroupUID = '0';\n                    drawHandlesSvg(svgDrawingHelper, annotationUID, handleGroupUID, activeHandleCanvasCoords, {\n                        color,\n                    });\n                }\n                const dataId = `${annotationUID}-ellipse`;\n                const ellipseUID = '0';\n                drawEllipseSvg(svgDrawingHelper, annotationUID, ellipseUID, canvasCorners[0], canvasCorners[1], {\n                    color,\n                    lineDash,\n                    lineWidth,\n                }, dataId);\n                if (centerPointRadius > 0) {\n                    const minRadius = Math.min(Math.abs(canvasCorners[0][0] - canvasCorners[1][0]) / 2, Math.abs(canvasCorners[0][1] - canvasCorners[1][1]) / 2);\n                    if (minRadius > 3 * centerPointRadius) {\n                        const centerPoint = this._getCanvasEllipseCenter(canvasCoordinates);\n                        drawCircleSvg(svgDrawingHelper, annotationUID, `${ellipseUID}-center`, centerPoint, centerPointRadius, {\n                            color,\n                            lineDash,\n                            lineWidth,\n                        });\n                    }\n                }\n                renderStatus = true;\n                const isPreScaled = isViewportPreScaled(viewport, targetId);\n                const isSuvScaled = this.isSuvScaled(viewport, targetId, annotation.metadata.referencedImageId);\n                const textLines = this._getTextLines(data, targetId, isPreScaled, isSuvScaled);\n                if (!textLines || textLines.length === 0) {\n                    continue;\n                }\n                let canvasTextBoxCoords;\n                if (!data.handles.textBox.hasMoved) {\n                    canvasTextBoxCoords = getTextBoxCoordsCanvas(canvasCorners);\n                    data.handles.textBox.worldPosition =\n                        viewport.canvasToWorld(canvasTextBoxCoords);\n                }\n                const textBoxPosition = viewport.worldToCanvas(data.handles.textBox.worldPosition);\n                const textBoxUID = '1';\n                const boundingBox = drawLinkedTextBoxSvg(svgDrawingHelper, annotationUID, textBoxUID, textLines, textBoxPosition, canvasCoordinates, {}, this.getLinkedTextBoxStyle(styleSpecifier, annotation));\n                const { x: left, y: top, width, height } = boundingBox;\n                data.handles.textBox.worldBoundingBox = {\n                    topLeft: viewport.canvasToWorld([left, top]),\n                    topRight: viewport.canvasToWorld([left + width, top]),\n                    bottomLeft: viewport.canvasToWorld([left, top + height]),\n                    bottomRight: viewport.canvasToWorld([left + width, top + height]),\n                };\n            }\n            return renderStatus;\n        };\n        this._getTextLines = (data, targetId, isPreScaled, isSuvScaled) => {\n            const cachedVolumeStats = data.cachedStats[targetId];\n            const { area, mean, stdDev, max, isEmptyArea, Modality, areaUnit } = cachedVolumeStats;\n            const textLines = [];\n            const unit = getModalityUnit(Modality, isPreScaled, isSuvScaled);\n            if (area) {\n                const areaLine = isEmptyArea\n                    ? `Area: Oblique not supported`\n                    : `Area: ${area.toFixed(2)} ${areaUnit}\\xb2`;\n                textLines.push(areaLine);\n            }\n            if (mean) {\n                textLines.push(`Mean: ${mean.toFixed(2)} ${unit}`);\n            }\n            if (max) {\n                textLines.push(`Max: ${max.toFixed(2)} ${unit}`);\n            }\n            if (stdDev) {\n                textLines.push(`Std Dev: ${stdDev.toFixed(2)} ${unit}`);\n            }\n            return textLines;\n        };\n        this._calculateCachedStats = (annotation, viewport, renderingEngine, enabledElement) => {\n            const data = annotation.data;\n            const { viewportId, renderingEngineId } = enabledElement;\n            const { points } = data.handles;\n            const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n            const { viewPlaneNormal, viewUp } = viewport.getCamera();\n            const [topLeftCanvas, bottomRightCanvas] = (getCanvasEllipseCorners(canvasCoordinates));\n            const topLeftWorld = viewport.canvasToWorld(topLeftCanvas);\n            const bottomRightWorld = viewport.canvasToWorld(bottomRightCanvas);\n            const { cachedStats } = data;\n            const targetIds = Object.keys(cachedStats);\n            const worldPos1 = topLeftWorld;\n            const worldPos2 = bottomRightWorld;\n            for (let i = 0; i < targetIds.length; i++) {\n                const targetId = targetIds[i];\n                const image = this.getTargetIdImage(targetId, renderingEngine);\n                if (!image) {\n                    continue;\n                }\n                const { dimensions, imageData, metadata, hasPixelSpacing } = image;\n                const worldPos1Index = transformWorldToIndex(imageData, worldPos1);\n                worldPos1Index[0] = Math.floor(worldPos1Index[0]);\n                worldPos1Index[1] = Math.floor(worldPos1Index[1]);\n                worldPos1Index[2] = Math.floor(worldPos1Index[2]);\n                const worldPos2Index = transformWorldToIndex(imageData, worldPos2);\n                worldPos2Index[0] = Math.floor(worldPos2Index[0]);\n                worldPos2Index[1] = Math.floor(worldPos2Index[1]);\n                worldPos2Index[2] = Math.floor(worldPos2Index[2]);\n                if (this._isInsideVolume(worldPos1Index, worldPos2Index, dimensions)) {\n                    const iMin = Math.min(worldPos1Index[0], worldPos2Index[0]);\n                    const iMax = Math.max(worldPos1Index[0], worldPos2Index[0]);\n                    const jMin = Math.min(worldPos1Index[1], worldPos2Index[1]);\n                    const jMax = Math.max(worldPos1Index[1], worldPos2Index[1]);\n                    const kMin = Math.min(worldPos1Index[2], worldPos2Index[2]);\n                    const kMax = Math.max(worldPos1Index[2], worldPos2Index[2]);\n                    const boundsIJK = [\n                        [iMin, iMax],\n                        [jMin, jMax],\n                        [kMin, kMax],\n                    ];\n                    const center = [\n                        (topLeftWorld[0] + bottomRightWorld[0]) / 2,\n                        (topLeftWorld[1] + bottomRightWorld[1]) / 2,\n                        (topLeftWorld[2] + bottomRightWorld[2]) / 2,\n                    ];\n                    const ellipseObj = {\n                        center,\n                        xRadius: Math.abs(topLeftWorld[0] - bottomRightWorld[0]) / 2,\n                        yRadius: Math.abs(topLeftWorld[1] - bottomRightWorld[1]) / 2,\n                        zRadius: Math.abs(topLeftWorld[2] - bottomRightWorld[2]) / 2,\n                    };\n                    const { worldWidth, worldHeight } = getWorldWidthAndHeightFromTwoPoints(viewPlaneNormal, viewUp, worldPos1, worldPos2);\n                    const isEmptyArea = worldWidth === 0 && worldHeight === 0;\n                    const area = Math.abs(Math.PI * (worldWidth / 2) * (worldHeight / 2));\n                    let count = 0;\n                    let mean = 0;\n                    let stdDev = 0;\n                    let max = -Infinity;\n                    const meanMaxCalculator = ({ value: newValue }) => {\n                        if (newValue > max) {\n                            max = newValue;\n                        }\n                        mean += newValue;\n                        count += 1;\n                    };\n                    pointInShapeCallback(imageData, (pointLPS, pointIJK) => pointInEllipse(ellipseObj, pointLPS), meanMaxCalculator, boundsIJK);\n                    mean /= count;\n                    const stdCalculator = ({ value }) => {\n                        const valueMinusMean = value - mean;\n                        stdDev += valueMinusMean * valueMinusMean;\n                    };\n                    pointInShapeCallback(imageData, (pointLPS, pointIJK) => pointInEllipse(ellipseObj, pointLPS), stdCalculator, boundsIJK);\n                    stdDev /= count;\n                    stdDev = Math.sqrt(stdDev);\n                    cachedStats[targetId] = {\n                        Modality: metadata.Modality,\n                        area,\n                        mean,\n                        max,\n                        stdDev,\n                        isEmptyArea,\n                        areaUnit: hasPixelSpacing ? 'mm' : 'px',\n                    };\n                }\n                else {\n                    this.isHandleOutsideImage = true;\n                    cachedStats[targetId] = {\n                        Modality: metadata.Modality,\n                    };\n                }\n            }\n            annotation.invalidated = false;\n            const eventType = Events.ANNOTATION_MODIFIED;\n            const eventDetail = {\n                annotation,\n                viewportId,\n                renderingEngineId,\n            };\n            triggerEvent(eventTarget, eventType, eventDetail);\n            return cachedStats;\n        };\n        this._isInsideVolume = (index1, index2, dimensions) => {\n            return (csUtils.indexWithinDimensions(index1, dimensions) &&\n                csUtils.indexWithinDimensions(index2, dimensions));\n        };\n        this._throttledCalculateCachedStats = throttle(this._calculateCachedStats, 100, { trailing: true });\n    }\n    _pointInEllipseCanvas(ellipse, location) {\n        const xRadius = ellipse.width / 2;\n        const yRadius = ellipse.height / 2;\n        if (xRadius <= 0.0 || yRadius <= 0.0) {\n            return false;\n        }\n        const center = [ellipse.left + xRadius, ellipse.top + yRadius];\n        const normalized = [location[0] - center[0], location[1] - center[1]];\n        const inEllipse = (normalized[0] * normalized[0]) / (xRadius * xRadius) +\n            (normalized[1] * normalized[1]) / (yRadius * yRadius) <=\n            1.0;\n        return inEllipse;\n    }\n    _getCanvasEllipseCenter(ellipseCanvasPoints) {\n        const [bottom, top, left, right] = ellipseCanvasPoints;\n        const topLeft = [left[0], top[1]];\n        const bottomRight = [right[0], bottom[1]];\n        return [\n            (topLeft[0] + bottomRight[0]) / 2,\n            (topLeft[1] + bottomRight[1]) / 2,\n        ];\n    }\n}\nEllipticalROITool.toolName = 'EllipticalROI';\nexport default EllipticalROITool;\n//# sourceMappingURL=EllipticalROITool.js.map","export default function distanceToPoint(p1, p2) {\n    if (p1?.length !== 2 || p2?.length !== 2) {\n        throw Error('points should have 2 elements of [x, y]');\n    }\n    const [x1, y1] = p1;\n    const [x2, y2] = p2;\n    return Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\n}\n//# sourceMappingURL=distanceToPoint.js.map","import { distanceToPoint } from '../point';\nexport default function getCanvasCircleRadius(circleCanvasPoints) {\n    const [center, end] = circleCanvasPoints;\n    return distanceToPoint(center, end);\n}\n//# sourceMappingURL=getCanvasCircleRadius.js.map","import { distanceToPoint } from '../point';\nexport default function getCanvasCircleCorners(circleCanvasPoints) {\n    const [center, end] = circleCanvasPoints;\n    const radius = distanceToPoint(center, end);\n    const topLeft = [center[0] - radius, center[1] - radius];\n    const bottomRight = [center[0] + radius, center[1] + radius];\n    return [topLeft, bottomRight];\n}\n//# sourceMappingURL=getCanvasCircleCorners.js.map","import { AnnotationTool } from '../base';\nimport { getEnabledElement, VolumeViewport, eventTarget, triggerEvent, utilities as csUtils, } from '@cornerstonejs/core';\nimport throttle from '../../utilities/throttle';\nimport { addAnnotation, getAnnotations, removeAnnotation, } from '../../stateManagement/annotation/annotationState';\nimport { isAnnotationLocked } from '../../stateManagement/annotation/annotationLocking';\nimport { isAnnotationVisible } from '../../stateManagement/annotation/annotationVisibility';\nimport { drawCircle as drawCircleSvg, drawHandles as drawHandlesSvg, drawLinkedTextBox as drawLinkedTextBoxSvg, } from '../../drawingSvg';\nimport { state } from '../../store';\nimport { Events } from '../../enums';\nimport { getViewportIdsWithToolToRender } from '../../utilities/viewportFilters';\nimport { getTextBoxCoordsCanvas } from '../../utilities/drawing';\nimport getWorldWidthAndHeightFromTwoPoints from '../../utilities/planar/getWorldWidthAndHeightFromTwoPoints';\nimport { resetElementCursor, hideElementCursor, } from '../../cursors/elementCursor';\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\nimport { pointInShapeCallback } from '../../utilities';\nimport { getModalityUnit } from '../../utilities/getModalityUnit';\nimport { isViewportPreScaled } from '../../utilities/viewport/isViewportPreScaled';\nimport { getCanvasCircleCorners, getCanvasCircleRadius, } from '../../utilities/math/circle';\nimport { pointInEllipse } from '../../utilities/math/ellipse';\nconst { transformWorldToIndex } = csUtils;\nclass CircleROITool extends AnnotationTool {\n    constructor(toolProps = {}, defaultToolProps = {\n        supportedInteractionTypes: ['Mouse', 'Touch'],\n        configuration: {\n            shadow: true,\n            preventHandleOutsideImage: false,\n            centerPointRadius: 0,\n        },\n    }) {\n        super(toolProps, defaultToolProps);\n        this.isHandleOutsideImage = false;\n        this.addNewAnnotation = (evt) => {\n            const eventDetail = evt.detail;\n            const { currentPoints, element } = eventDetail;\n            const worldPos = currentPoints.world;\n            const canvasPos = currentPoints.canvas;\n            const enabledElement = getEnabledElement(element);\n            const { viewport, renderingEngine } = enabledElement;\n            this.isDrawing = true;\n            const camera = viewport.getCamera();\n            const { viewPlaneNormal, viewUp } = camera;\n            const referencedImageId = this.getReferencedImageId(viewport, worldPos, viewPlaneNormal, viewUp);\n            const FrameOfReferenceUID = viewport.getFrameOfReferenceUID();\n            const annotation = {\n                highlighted: true,\n                invalidated: true,\n                metadata: {\n                    toolName: this.getToolName(),\n                    viewPlaneNormal: [...viewPlaneNormal],\n                    viewUp: [...viewUp],\n                    FrameOfReferenceUID,\n                    referencedImageId,\n                },\n                data: {\n                    label: '',\n                    handles: {\n                        textBox: {\n                            hasMoved: false,\n                            worldPosition: [0, 0, 0],\n                            worldBoundingBox: {\n                                topLeft: [0, 0, 0],\n                                topRight: [0, 0, 0],\n                                bottomLeft: [0, 0, 0],\n                                bottomRight: [0, 0, 0],\n                            },\n                        },\n                        points: [[...worldPos], [...worldPos]],\n                        activeHandleIndex: null,\n                    },\n                    cachedStats: {},\n                },\n            };\n            addAnnotation(annotation, element);\n            const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n            this.editData = {\n                annotation,\n                viewportIdsToRender,\n                newAnnotation: true,\n                hasMoved: false,\n            };\n            this._activateDraw(element);\n            hideElementCursor(element);\n            evt.preventDefault();\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n            return annotation;\n        };\n        this.isPointNearTool = (element, annotation, canvasCoords, proximity) => {\n            const enabledElement = getEnabledElement(element);\n            const { viewport } = enabledElement;\n            const { data } = annotation;\n            const { points } = data.handles;\n            const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n            const radius = getCanvasCircleRadius(canvasCoordinates);\n            const radiusPoint = getCanvasCircleRadius([\n                canvasCoordinates[0],\n                canvasCoords,\n            ]);\n            if (Math.abs(radiusPoint - radius) < proximity / 2)\n                return true;\n            return false;\n        };\n        this.toolSelectedCallback = (evt, annotation) => {\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            annotation.highlighted = true;\n            const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n            this.editData = {\n                annotation,\n                viewportIdsToRender,\n                movingTextBox: false,\n            };\n            hideElementCursor(element);\n            this._activateModify(element);\n            const enabledElement = getEnabledElement(element);\n            const { renderingEngine } = enabledElement;\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n            evt.preventDefault();\n        };\n        this.handleSelectedCallback = (evt, annotation, handle) => {\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            const { data } = annotation;\n            annotation.highlighted = true;\n            let movingTextBox = false;\n            let handleIndex;\n            if (handle.worldPosition) {\n                movingTextBox = true;\n            }\n            else {\n                const { points } = data.handles;\n                handleIndex = points.findIndex((p) => p === handle);\n            }\n            const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n            this.editData = {\n                annotation,\n                viewportIdsToRender,\n                handleIndex,\n                movingTextBox,\n            };\n            this._activateModify(element);\n            hideElementCursor(element);\n            const enabledElement = getEnabledElement(element);\n            const { renderingEngine } = enabledElement;\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n            evt.preventDefault();\n        };\n        this._endCallback = (evt) => {\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            const { annotation, viewportIdsToRender, newAnnotation, hasMoved } = this.editData;\n            const { data } = annotation;\n            if (newAnnotation && !hasMoved) {\n                return;\n            }\n            annotation.highlighted = false;\n            data.handles.activeHandleIndex = null;\n            this._deactivateModify(element);\n            this._deactivateDraw(element);\n            resetElementCursor(element);\n            const enabledElement = getEnabledElement(element);\n            const { renderingEngine } = enabledElement;\n            this.editData = null;\n            this.isDrawing = false;\n            if (this.isHandleOutsideImage &&\n                this.configuration.preventHandleOutsideImage) {\n                removeAnnotation(annotation.annotationUID);\n            }\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n            if (newAnnotation) {\n                const eventType = Events.ANNOTATION_COMPLETED;\n                const eventDetail = {\n                    annotation,\n                };\n                triggerEvent(eventTarget, eventType, eventDetail);\n            }\n        };\n        this._dragDrawCallback = (evt) => {\n            this.isDrawing = true;\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            const { currentPoints } = eventDetail;\n            const currentCanvasPoints = currentPoints.canvas;\n            const enabledElement = getEnabledElement(element);\n            const { renderingEngine, viewport } = enabledElement;\n            const { canvasToWorld } = viewport;\n            const { annotation, viewportIdsToRender } = this.editData;\n            const { data } = annotation;\n            data.handles.points = [\n                data.handles.points[0],\n                canvasToWorld(currentCanvasPoints),\n            ];\n            annotation.invalidated = true;\n            this.editData.hasMoved = true;\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n        };\n        this._dragModifyCallback = (evt) => {\n            this.isDrawing = true;\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            const { annotation, viewportIdsToRender, handleIndex, movingTextBox } = this.editData;\n            const { data } = annotation;\n            if (movingTextBox) {\n                const { deltaPoints } = eventDetail;\n                const worldPosDelta = deltaPoints.world;\n                const { textBox } = data.handles;\n                const { worldPosition } = textBox;\n                worldPosition[0] += worldPosDelta[0];\n                worldPosition[1] += worldPosDelta[1];\n                worldPosition[2] += worldPosDelta[2];\n                textBox.hasMoved = true;\n            }\n            else if (handleIndex === undefined) {\n                const { deltaPoints } = eventDetail;\n                const worldPosDelta = deltaPoints.world;\n                const points = data.handles.points;\n                points.forEach((point) => {\n                    point[0] += worldPosDelta[0];\n                    point[1] += worldPosDelta[1];\n                    point[2] += worldPosDelta[2];\n                });\n                annotation.invalidated = true;\n            }\n            else {\n                this._dragHandle(evt);\n                annotation.invalidated = true;\n            }\n            const enabledElement = getEnabledElement(element);\n            const { renderingEngine } = enabledElement;\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n        };\n        this._dragHandle = (evt) => {\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            const enabledElement = getEnabledElement(element);\n            const { canvasToWorld, worldToCanvas } = enabledElement.viewport;\n            const { annotation, handleIndex } = this.editData;\n            const { data } = annotation;\n            const { points } = data.handles;\n            const canvasCoordinates = points.map((p) => worldToCanvas(p));\n            const { currentPoints } = eventDetail;\n            const currentCanvasPoints = currentPoints.canvas;\n            if (handleIndex === 0) {\n                const dXCanvas = currentCanvasPoints[0] - canvasCoordinates[0][0];\n                const dYCanvas = currentCanvasPoints[1] - canvasCoordinates[0][1];\n                const canvasCenter = currentCanvasPoints;\n                const canvasEnd = [\n                    canvasCoordinates[1][0] + dXCanvas,\n                    canvasCoordinates[1][1] + dYCanvas,\n                ];\n                points[0] = canvasToWorld(canvasCenter);\n                points[1] = canvasToWorld(canvasEnd);\n            }\n            else {\n                points[1] = canvasToWorld(currentCanvasPoints);\n            }\n        };\n        this.cancel = (element) => {\n            if (this.isDrawing) {\n                this.isDrawing = false;\n                this._deactivateDraw(element);\n                this._deactivateModify(element);\n                resetElementCursor(element);\n                const { annotation, viewportIdsToRender, newAnnotation } = this.editData;\n                const { data } = annotation;\n                annotation.highlighted = false;\n                data.handles.activeHandleIndex = null;\n                const enabledElement = getEnabledElement(element);\n                const { renderingEngine } = enabledElement;\n                triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n                if (newAnnotation) {\n                    const eventType = Events.ANNOTATION_COMPLETED;\n                    const eventDetail = {\n                        annotation,\n                    };\n                    triggerEvent(eventTarget, eventType, eventDetail);\n                }\n                this.editData = null;\n                return annotation.annotationUID;\n            }\n        };\n        this._activateModify = (element) => {\n            state.isInteractingWithTool = true;\n            element.addEventListener(Events.MOUSE_UP, this._endCallback);\n            element.addEventListener(Events.MOUSE_DRAG, this._dragModifyCallback);\n            element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n            element.addEventListener(Events.TOUCH_END, this._endCallback);\n            element.addEventListener(Events.TOUCH_DRAG, this._dragModifyCallback);\n            element.addEventListener(Events.TOUCH_TAP, this._endCallback);\n        };\n        this._deactivateModify = (element) => {\n            state.isInteractingWithTool = false;\n            element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n            element.removeEventListener(Events.MOUSE_DRAG, this._dragModifyCallback);\n            element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n            element.removeEventListener(Events.TOUCH_END, this._endCallback);\n            element.removeEventListener(Events.TOUCH_DRAG, this._dragModifyCallback);\n            element.removeEventListener(Events.TOUCH_TAP, this._endCallback);\n        };\n        this._activateDraw = (element) => {\n            state.isInteractingWithTool = true;\n            element.addEventListener(Events.MOUSE_UP, this._endCallback);\n            element.addEventListener(Events.MOUSE_DRAG, this._dragDrawCallback);\n            element.addEventListener(Events.MOUSE_MOVE, this._dragDrawCallback);\n            element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n            element.addEventListener(Events.TOUCH_END, this._endCallback);\n            element.addEventListener(Events.TOUCH_DRAG, this._dragDrawCallback);\n            element.addEventListener(Events.TOUCH_TAP, this._endCallback);\n        };\n        this._deactivateDraw = (element) => {\n            state.isInteractingWithTool = false;\n            element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n            element.removeEventListener(Events.MOUSE_DRAG, this._dragDrawCallback);\n            element.removeEventListener(Events.MOUSE_MOVE, this._dragDrawCallback);\n            element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n            element.removeEventListener(Events.TOUCH_END, this._endCallback);\n            element.removeEventListener(Events.TOUCH_DRAG, this._dragDrawCallback);\n            element.removeEventListener(Events.TOUCH_TAP, this._endCallback);\n        };\n        this.renderAnnotation = (enabledElement, svgDrawingHelper) => {\n            let renderStatus = false;\n            const { viewport } = enabledElement;\n            const { element } = viewport;\n            let annotations = getAnnotations(this.getToolName(), element);\n            if (!annotations?.length) {\n                return renderStatus;\n            }\n            annotations = this.filterInteractableAnnotationsForElement(element, annotations);\n            if (!annotations?.length) {\n                return renderStatus;\n            }\n            const targetId = this.getTargetId(viewport);\n            const renderingEngine = viewport.getRenderingEngine();\n            const styleSpecifier = {\n                toolGroupId: this.toolGroupId,\n                toolName: this.getToolName(),\n                viewportId: enabledElement.viewport.id,\n            };\n            for (let i = 0; i < annotations.length; i++) {\n                const annotation = annotations[i];\n                const { annotationUID, data } = annotation;\n                const { handles } = data;\n                const { points, activeHandleIndex } = handles;\n                styleSpecifier.annotationUID = annotationUID;\n                const lineWidth = this.getStyle('lineWidth', styleSpecifier, annotation);\n                const lineDash = this.getStyle('lineDash', styleSpecifier, annotation);\n                const color = this.getStyle('color', styleSpecifier, annotation);\n                const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n                const center = canvasCoordinates[0];\n                const radius = getCanvasCircleRadius(canvasCoordinates);\n                const canvasCorners = getCanvasCircleCorners(canvasCoordinates);\n                const { centerPointRadius } = this.configuration;\n                if (!data.cachedStats[targetId] ||\n                    data.cachedStats[targetId].areaUnit === undefined) {\n                    data.cachedStats[targetId] = {\n                        Modality: null,\n                        area: null,\n                        max: null,\n                        mean: null,\n                        stdDev: null,\n                        areaUnit: null,\n                        radius: null,\n                        radiusUnit: null,\n                        perimeter: null,\n                    };\n                    this._calculateCachedStats(annotation, viewport, renderingEngine, enabledElement);\n                }\n                else if (annotation.invalidated) {\n                    this._throttledCalculateCachedStats(annotation, viewport, renderingEngine, enabledElement);\n                    if (viewport instanceof VolumeViewport) {\n                        const { referencedImageId } = annotation.metadata;\n                        for (const targetId in data.cachedStats) {\n                            if (targetId.startsWith('imageId')) {\n                                const viewports = renderingEngine.getStackViewports();\n                                const invalidatedStack = viewports.find((vp) => {\n                                    const referencedImageURI = csUtils.imageIdToURI(referencedImageId);\n                                    const hasImageURI = vp.hasImageURI(referencedImageURI);\n                                    const currentImageURI = csUtils.imageIdToURI(vp.getCurrentImageId());\n                                    return hasImageURI && currentImageURI !== referencedImageURI;\n                                });\n                                if (invalidatedStack) {\n                                    delete data.cachedStats[targetId];\n                                }\n                            }\n                        }\n                    }\n                }\n                if (!viewport.getRenderingEngine()) {\n                    console.warn('Rendering Engine has been destroyed');\n                    return renderStatus;\n                }\n                let activeHandleCanvasCoords;\n                if (!isAnnotationVisible(annotationUID)) {\n                    continue;\n                }\n                if (!isAnnotationLocked(annotation) &&\n                    !this.editData &&\n                    activeHandleIndex !== null) {\n                    activeHandleCanvasCoords = [canvasCoordinates[activeHandleIndex]];\n                }\n                if (activeHandleCanvasCoords) {\n                    const handleGroupUID = '0';\n                    drawHandlesSvg(svgDrawingHelper, annotationUID, handleGroupUID, activeHandleCanvasCoords, {\n                        color,\n                    });\n                }\n                const dataId = `${annotationUID}-circle`;\n                const circleUID = '0';\n                drawCircleSvg(svgDrawingHelper, annotationUID, circleUID, center, radius, {\n                    color,\n                    lineDash,\n                    lineWidth,\n                }, dataId);\n                if (centerPointRadius > 0) {\n                    if (radius > 3 * centerPointRadius) {\n                        drawCircleSvg(svgDrawingHelper, annotationUID, `${circleUID}-center`, center, centerPointRadius, {\n                            color,\n                            lineDash,\n                            lineWidth,\n                        });\n                    }\n                }\n                renderStatus = true;\n                const isPreScaled = isViewportPreScaled(viewport, targetId);\n                const isSuvScaled = this.isSuvScaled(viewport, targetId, annotation.metadata.referencedImageId);\n                const textLines = this._getTextLines(data, targetId, isPreScaled, isSuvScaled);\n                if (!textLines || textLines.length === 0) {\n                    continue;\n                }\n                let canvasTextBoxCoords;\n                if (!data.handles.textBox.hasMoved) {\n                    canvasTextBoxCoords = getTextBoxCoordsCanvas(canvasCorners);\n                    data.handles.textBox.worldPosition =\n                        viewport.canvasToWorld(canvasTextBoxCoords);\n                }\n                const textBoxPosition = viewport.worldToCanvas(data.handles.textBox.worldPosition);\n                const textBoxUID = '1';\n                const boundingBox = drawLinkedTextBoxSvg(svgDrawingHelper, annotationUID, textBoxUID, textLines, textBoxPosition, canvasCoordinates, {}, this.getLinkedTextBoxStyle(styleSpecifier, annotation));\n                const { x: left, y: top, width, height } = boundingBox;\n                data.handles.textBox.worldBoundingBox = {\n                    topLeft: viewport.canvasToWorld([left, top]),\n                    topRight: viewport.canvasToWorld([left + width, top]),\n                    bottomLeft: viewport.canvasToWorld([left, top + height]),\n                    bottomRight: viewport.canvasToWorld([left + width, top + height]),\n                };\n            }\n            return renderStatus;\n        };\n        this._getTextLines = (data, targetId, isPreScaled, isSuvScaled) => {\n            const cachedVolumeStats = data.cachedStats[targetId];\n            const { radius, radiusUnit, area, mean, stdDev, max, isEmptyArea, Modality, areaUnit, } = cachedVolumeStats;\n            const textLines = [];\n            const unit = getModalityUnit(Modality, isPreScaled, isSuvScaled);\n            if (radius) {\n                const radiusLine = isEmptyArea\n                    ? `Radius: Oblique not supported`\n                    : `Radius: ${radius.toFixed(2)} ${radiusUnit}`;\n                textLines.push(radiusLine);\n            }\n            if (area) {\n                const areaLine = isEmptyArea\n                    ? `Area: Oblique not supported`\n                    : `Area: ${area.toFixed(2)} ${areaUnit}\\xb2`;\n                textLines.push(areaLine);\n            }\n            if (mean) {\n                textLines.push(`Mean: ${mean.toFixed(2)} ${unit}`);\n            }\n            if (max) {\n                textLines.push(`Max: ${max.toFixed(2)} ${unit}`);\n            }\n            if (stdDev) {\n                textLines.push(`Std Dev: ${stdDev.toFixed(2)} ${unit}`);\n            }\n            return textLines;\n        };\n        this._calculateCachedStats = (annotation, viewport, renderingEngine, enabledElement) => {\n            const data = annotation.data;\n            const { viewportId, renderingEngineId } = enabledElement;\n            const { points } = data.handles;\n            const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n            const { viewPlaneNormal, viewUp } = viewport.getCamera();\n            const [topLeftCanvas, bottomRightCanvas] = (getCanvasCircleCorners(canvasCoordinates));\n            const topLeftWorld = viewport.canvasToWorld(topLeftCanvas);\n            const bottomRightWorld = viewport.canvasToWorld(bottomRightCanvas);\n            const { cachedStats } = data;\n            const targetIds = Object.keys(cachedStats);\n            const worldPos1 = topLeftWorld;\n            const worldPos2 = bottomRightWorld;\n            for (let i = 0; i < targetIds.length; i++) {\n                const targetId = targetIds[i];\n                const image = this.getTargetIdImage(targetId, renderingEngine);\n                if (!image) {\n                    continue;\n                }\n                const { dimensions, imageData, metadata, hasPixelSpacing } = image;\n                const worldPos1Index = transformWorldToIndex(imageData, worldPos1);\n                worldPos1Index[0] = Math.floor(worldPos1Index[0]);\n                worldPos1Index[1] = Math.floor(worldPos1Index[1]);\n                worldPos1Index[2] = Math.floor(worldPos1Index[2]);\n                const worldPos2Index = transformWorldToIndex(imageData, worldPos2);\n                worldPos2Index[0] = Math.floor(worldPos2Index[0]);\n                worldPos2Index[1] = Math.floor(worldPos2Index[1]);\n                worldPos2Index[2] = Math.floor(worldPos2Index[2]);\n                if (this._isInsideVolume(worldPos1Index, worldPos2Index, dimensions)) {\n                    const iMin = Math.min(worldPos1Index[0], worldPos2Index[0]);\n                    const iMax = Math.max(worldPos1Index[0], worldPos2Index[0]);\n                    const jMin = Math.min(worldPos1Index[1], worldPos2Index[1]);\n                    const jMax = Math.max(worldPos1Index[1], worldPos2Index[1]);\n                    const kMin = Math.min(worldPos1Index[2], worldPos2Index[2]);\n                    const kMax = Math.max(worldPos1Index[2], worldPos2Index[2]);\n                    const boundsIJK = [\n                        [iMin, iMax],\n                        [jMin, jMax],\n                        [kMin, kMax],\n                    ];\n                    const center = [\n                        (topLeftWorld[0] + bottomRightWorld[0]) / 2,\n                        (topLeftWorld[1] + bottomRightWorld[1]) / 2,\n                        (topLeftWorld[2] + bottomRightWorld[2]) / 2,\n                    ];\n                    const ellipseObj = {\n                        center,\n                        xRadius: Math.abs(topLeftWorld[0] - bottomRightWorld[0]) / 2,\n                        yRadius: Math.abs(topLeftWorld[1] - bottomRightWorld[1]) / 2,\n                        zRadius: Math.abs(topLeftWorld[2] - bottomRightWorld[2]) / 2,\n                    };\n                    const { worldWidth, worldHeight } = getWorldWidthAndHeightFromTwoPoints(viewPlaneNormal, viewUp, worldPos1, worldPos2);\n                    const isEmptyArea = worldWidth === 0 && worldHeight === 0;\n                    const area = Math.abs(Math.PI * (worldWidth / 2) * (worldHeight / 2));\n                    let count = 0;\n                    let mean = 0;\n                    let stdDev = 0;\n                    let max = -Infinity;\n                    const meanMaxCalculator = ({ value: newValue }) => {\n                        if (newValue > max) {\n                            max = newValue;\n                        }\n                        mean += newValue;\n                        count += 1;\n                    };\n                    pointInShapeCallback(imageData, (pointLPS, pointIJK) => pointInEllipse(ellipseObj, pointLPS), meanMaxCalculator, boundsIJK);\n                    mean /= count;\n                    const stdCalculator = ({ value }) => {\n                        const valueMinusMean = value - mean;\n                        stdDev += valueMinusMean * valueMinusMean;\n                    };\n                    pointInShapeCallback(imageData, (pointLPS, pointIJK) => pointInEllipse(ellipseObj, pointLPS), stdCalculator, boundsIJK);\n                    stdDev /= count;\n                    stdDev = Math.sqrt(stdDev);\n                    cachedStats[targetId] = {\n                        Modality: metadata.Modality,\n                        area,\n                        mean,\n                        max,\n                        stdDev,\n                        isEmptyArea,\n                        areaUnit: hasPixelSpacing ? 'mm' : 'px',\n                        radius: worldWidth / 2,\n                        radiusUnit: hasPixelSpacing ? 'mm' : 'px',\n                        perimeter: 2 * Math.PI * (worldWidth / 2),\n                    };\n                }\n                else {\n                    this.isHandleOutsideImage = true;\n                    cachedStats[targetId] = {\n                        Modality: metadata.Modality,\n                    };\n                }\n            }\n            annotation.invalidated = false;\n            const eventType = Events.ANNOTATION_MODIFIED;\n            const eventDetail = {\n                annotation,\n                viewportId,\n                renderingEngineId,\n            };\n            triggerEvent(eventTarget, eventType, eventDetail);\n            return cachedStats;\n        };\n        this._isInsideVolume = (index1, index2, dimensions) => {\n            return (csUtils.indexWithinDimensions(index1, dimensions) &&\n                csUtils.indexWithinDimensions(index2, dimensions));\n        };\n        this._throttledCalculateCachedStats = throttle(this._calculateCachedStats, 100, { trailing: true });\n    }\n}\nCircleROITool.toolName = 'CircleROI';\nexport default CircleROITool;\n//# sourceMappingURL=CircleROITool.js.map","import { vec2 } from 'gl-matrix';\nfunction getAllIntersectionsWithPolyline(points, p1, q1, closed = true) {\n    let initialI;\n    let j;\n    const intersections = [];\n    if (closed) {\n        j = points.length - 1;\n        initialI = 0;\n    }\n    else {\n        j = 0;\n        initialI = 1;\n    }\n    for (let i = initialI; i < points.length; i++) {\n        const p2 = points[j];\n        const q2 = points[i];\n        if (doesIntersect(p1, q1, p2, q2)) {\n            intersections.push([j, i]);\n        }\n        j = i;\n    }\n    return intersections;\n}\nfunction getIntersectionCoordinatesWithPolyline(points, p1, q1, closed = true) {\n    const result = [];\n    const polylineIndexes = getAllIntersectionsWithPolyline(points, p1, q1, closed);\n    for (let i = 0; i < polylineIndexes.length; i++) {\n        const p2 = points[polylineIndexes[i][0]];\n        const q2 = points[polylineIndexes[i][1]];\n        const intersection = getIntersection(p1, q1, p2, q2);\n        result.push(intersection);\n    }\n    return result;\n}\nfunction getFirstIntersectionWithPolyline(points, p1, q1, closed = true) {\n    let initialI;\n    let j;\n    if (closed) {\n        j = points.length - 1;\n        initialI = 0;\n    }\n    else {\n        j = 0;\n        initialI = 1;\n    }\n    for (let i = initialI; i < points.length; i++) {\n        const p2 = points[j];\n        const q2 = points[i];\n        if (doesIntersect(p1, q1, p2, q2)) {\n            return [j, i];\n        }\n        j = i;\n    }\n}\nfunction getClosestIntersectionWithPolyline(points, p1, q1, closed = true) {\n    let initialI;\n    let j;\n    if (closed) {\n        j = points.length - 1;\n        initialI = 0;\n    }\n    else {\n        j = 0;\n        initialI = 1;\n    }\n    const intersections = [];\n    for (let i = initialI; i < points.length; i++) {\n        const p2 = points[j];\n        const q2 = points[i];\n        if (doesIntersect(p1, q1, p2, q2)) {\n            intersections.push([j, i]);\n        }\n        j = i;\n    }\n    if (intersections.length === 0) {\n        return;\n    }\n    const distances = [];\n    intersections.forEach((intersection) => {\n        const intersectionPoints = [\n            points[intersection[0]],\n            points[intersection[1]],\n        ];\n        const midpoint = [\n            (intersectionPoints[0][0] + intersectionPoints[1][0]) / 2,\n            (intersectionPoints[0][1] + intersectionPoints[1][1]) / 2,\n        ];\n        distances.push(vec2.distance(midpoint, p1));\n    });\n    const minDistance = Math.min(...distances);\n    const indexOfMinDistance = distances.indexOf(minDistance);\n    return {\n        segment: intersections[indexOfMinDistance],\n        distance: minDistance,\n    };\n}\nfunction doesIntersect(p1, q1, p2, q2) {\n    let result = false;\n    const orient = [\n        orientation(p1, q1, p2),\n        orientation(p1, q1, q2),\n        orientation(p2, q2, p1),\n        orientation(p2, q2, q1),\n    ];\n    if (orient[0] !== orient[1] && orient[2] !== orient[3]) {\n        return true;\n    }\n    if (orient[0] === 0 && onSegment(p1, p2, q1)) {\n        result = true;\n    }\n    else if (orient[1] === 0 && onSegment(p1, q2, q1)) {\n        result = true;\n    }\n    else if (orient[2] === 0 && onSegment(p2, p1, q2)) {\n        result = true;\n    }\n    else if (orient[3] === 0 && onSegment(p2, q1, q2)) {\n        result = true;\n    }\n    return result;\n}\nfunction orientation(p, q, r) {\n    const orientationValue = (q[1] - p[1]) * (r[0] - q[0]) - (q[0] - p[0]) * (r[1] - q[1]);\n    if (orientationValue === 0) {\n        return 0;\n    }\n    return orientationValue > 0 ? 1 : 2;\n}\nfunction onSegment(p, q, r) {\n    if (q[0] <= Math.max(p[0], r[0]) &&\n        q[0] >= Math.min(p[0], r[0]) &&\n        q[1] <= Math.max(p[1], r[1]) &&\n        q[1] >= Math.min(p[1], r[1])) {\n        return true;\n    }\n    return false;\n}\nfunction getIntersection(p1, q1, p2, q2) {\n    const denominator = (q2[1] - p2[1]) * (q1[0] - p1[0]) - (q2[0] - p2[0]) * (q1[1] - p1[1]);\n    if (denominator == 0) {\n        return;\n    }\n    let a = p1[1] - p2[1];\n    let b = p1[0] - p2[0];\n    const numerator1 = (q2[0] - p2[0]) * a - (q2[1] - p2[1]) * b;\n    const numerator2 = (q1[0] - p1[0]) * a - (q1[1] - p1[1]) * b;\n    a = numerator1 / denominator;\n    b = numerator2 / denominator;\n    const resultX = p1[0] + a * (q1[0] - p1[0]);\n    const resultY = p1[1] + a * (q1[1] - p1[1]);\n    return [resultX, resultY];\n}\nexport { getAllIntersectionsWithPolyline, getFirstIntersectionWithPolyline, getClosestIntersectionWithPolyline, getIntersectionCoordinatesWithPolyline, };\n//# sourceMappingURL=getIntersectionWithPolyline.js.map","import { StackViewport } from '@cornerstonejs/core';\nimport { vec3 } from 'gl-matrix';\nconst EPSILON = 1e-3;\nconst getSubPixelSpacingAndXYDirections = (viewport, subPixelResolution) => {\n    let spacing;\n    let xDir;\n    let yDir;\n    if (viewport instanceof StackViewport) {\n        const imageData = viewport.getImageData();\n        xDir = imageData.direction.slice(0, 3);\n        yDir = imageData.direction.slice(3, 6);\n        spacing = imageData.spacing;\n    }\n    else {\n        const imageData = viewport.getImageData();\n        const { direction, spacing: volumeSpacing } = imageData;\n        const { viewPlaneNormal, viewUp } = viewport.getCamera();\n        const iVector = direction.slice(0, 3);\n        const jVector = direction.slice(3, 6);\n        const kVector = direction.slice(6, 9);\n        const viewRight = vec3.create();\n        vec3.cross(viewRight, viewUp, viewPlaneNormal);\n        const absViewRightDotI = Math.abs(vec3.dot(viewRight, iVector));\n        const absViewRightDotJ = Math.abs(vec3.dot(viewRight, jVector));\n        const absViewRightDotK = Math.abs(vec3.dot(viewRight, kVector));\n        let xSpacing;\n        if (Math.abs(1 - absViewRightDotI) < EPSILON) {\n            xSpacing = volumeSpacing[0];\n            xDir = iVector;\n        }\n        else if (Math.abs(1 - absViewRightDotJ) < EPSILON) {\n            xSpacing = volumeSpacing[1];\n            xDir = jVector;\n        }\n        else if (Math.abs(1 - absViewRightDotK) < EPSILON) {\n            xSpacing = volumeSpacing[2];\n            xDir = kVector;\n        }\n        else {\n            throw new Error('No support yet for oblique plane planar contours');\n        }\n        const absViewUpDotI = Math.abs(vec3.dot(viewUp, iVector));\n        const absViewUpDotJ = Math.abs(vec3.dot(viewUp, jVector));\n        const absViewUpDotK = Math.abs(vec3.dot(viewUp, kVector));\n        let ySpacing;\n        if (Math.abs(1 - absViewUpDotI) < EPSILON) {\n            ySpacing = volumeSpacing[0];\n            yDir = iVector;\n        }\n        else if (Math.abs(1 - absViewUpDotJ) < EPSILON) {\n            ySpacing = volumeSpacing[1];\n            yDir = jVector;\n        }\n        else if (Math.abs(1 - absViewUpDotK) < EPSILON) {\n            ySpacing = volumeSpacing[2];\n            yDir = kVector;\n        }\n        else {\n            throw new Error('No support yet for oblique plane planar contours');\n        }\n        spacing = [xSpacing, ySpacing];\n    }\n    const subPixelSpacing = [\n        spacing[0] / subPixelResolution,\n        spacing[1] / subPixelResolution,\n    ];\n    return { spacing: subPixelSpacing, xDir, yDir };\n};\nexport default getSubPixelSpacingAndXYDirections;\n//# sourceMappingURL=getSubPixelSpacingAndXYDirections.js.map","import { vec2 } from 'gl-matrix';\nconst pointsAreWithinCloseContourProximity = (p1, p2, closeContourProximity) => {\n    return vec2.dist(p1, p2) < closeContourProximity;\n};\nexport default pointsAreWithinCloseContourProximity;\n//# sourceMappingURL=pointsAreWithinCloseContourProximity.js.map","import { getEnabledElement } from '@cornerstonejs/core';\nimport { vec2, vec3 } from 'gl-matrix';\nconst addCanvasPointsToArray = (element, canvasPoints, newCanvasPoint, commonData) => {\n    const { xDir, yDir, spacing } = commonData;\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n    const lastWorldPos = viewport.canvasToWorld(canvasPoints[canvasPoints.length - 1]);\n    const newWorldPos = viewport.canvasToWorld(newCanvasPoint);\n    const worldPosDiff = vec3.create();\n    vec3.subtract(worldPosDiff, newWorldPos, lastWorldPos);\n    const xDist = Math.abs(vec3.dot(worldPosDiff, xDir));\n    const yDist = Math.abs(vec3.dot(worldPosDiff, yDir));\n    const numPointsToAdd = Math.max(Math.floor(xDist / spacing[0]), Math.floor(yDist / spacing[0]));\n    if (numPointsToAdd > 1) {\n        const lastCanvasPoint = canvasPoints[canvasPoints.length - 1];\n        const canvasDist = vec2.dist(lastCanvasPoint, newCanvasPoint);\n        const canvasDir = vec2.create();\n        vec2.subtract(canvasDir, newCanvasPoint, lastCanvasPoint);\n        vec2.set(canvasDir, canvasDir[0] / canvasDist, canvasDir[1] / canvasDist);\n        const distPerPoint = canvasDist / numPointsToAdd;\n        for (let i = 1; i <= numPointsToAdd; i++) {\n            canvasPoints.push([\n                lastCanvasPoint[0] + distPerPoint * canvasDir[0] * i,\n                lastCanvasPoint[1] + distPerPoint * canvasDir[1] * i,\n            ]);\n        }\n    }\n    else {\n        canvasPoints.push(newCanvasPoint);\n    }\n    return numPointsToAdd;\n};\nexport default addCanvasPointsToArray;\n//# sourceMappingURL=addCanvasPointsToArray.js.map","import { vec2 } from 'gl-matrix';\nconst pointCanProjectOnLine = (p, p1, p2, proximity) => {\n    const p1p = [p[0] - p1[0], p[1] - p1[1]];\n    const p1p2 = [p2[0] - p1[0], p2[1] - p1[1]];\n    const dot = p1p[0] * p1p2[0] + p1p[1] * p1p2[1];\n    if (dot < 0) {\n        return false;\n    }\n    const p1p2Mag = Math.sqrt(p1p2[0] * p1p2[0] + p1p2[1] * p1p2[1]);\n    if (p1p2Mag === 0) {\n        return false;\n    }\n    const projectionVectorMag = dot / p1p2Mag;\n    const p1p2UnitVector = [p1p2[0] / p1p2Mag, p1p2[1] / p1p2Mag];\n    const projectionVector = [\n        p1p2UnitVector[0] * projectionVectorMag,\n        p1p2UnitVector[1] * projectionVectorMag,\n    ];\n    const projectionPoint = [\n        p1[0] + projectionVector[0],\n        p1[1] + projectionVector[1],\n    ];\n    const distance = vec2.distance(p, projectionPoint);\n    if (distance > proximity) {\n        return false;\n    }\n    if (vec2.distance(p1, projectionPoint) > vec2.distance(p1, p2)) {\n        return false;\n    }\n    return true;\n};\nexport default pointCanProjectOnLine;\n//# sourceMappingURL=pointCanProjectOnLine.js.map","export default function calculateAreaOfPoints(points) {\n    const n = points.length;\n    let area = 0.0;\n    let j = n - 1;\n    for (let i = 0; i < n; i++) {\n        area += (points[j][0] + points[i][0]) * (points[j][1] - points[i][1]);\n        j = i;\n    }\n    return Math.abs(area / 2.0);\n}\n//# sourceMappingURL=calculateAreaOfPoints.js.map","import { interpolatePoints } from './algorithms/bspline';\nfunction getContinuousUniformDistributionValues(minDistributionDistance, closedInterval) {\n    const result = [];\n    const [intervalIni, intervalEnd] = closedInterval;\n    const intervalSize = intervalEnd - intervalIni + 1;\n    const intensity = Math.floor(intervalSize / minDistributionDistance);\n    let x = 0;\n    let continuosDistributionValue = Math.round(((intervalSize - 1) / (intensity - 1)) * x) + intervalIni;\n    while (continuosDistributionValue <= intervalEnd) {\n        result.push(continuosDistributionValue);\n        x++;\n        continuosDistributionValue =\n            Math.round(((intervalSize - 1) / (intensity - 1)) * x) + intervalIni;\n    }\n    return result;\n}\nexport default function interpolateSegmentPoints(points, iniIndex, endIndex, knotsRatioPercentage) {\n    const segmentSize = endIndex - iniIndex + 1;\n    const amountOfKnots = Math.floor((knotsRatioPercentage / 100) * segmentSize) ?? 1;\n    const minKnotDistance = Math.floor(segmentSize / amountOfKnots) ?? 1;\n    if (isNaN(segmentSize) || !segmentSize || !minKnotDistance) {\n        return points;\n    }\n    if (segmentSize / minKnotDistance < 2) {\n        return points;\n    }\n    const interpolationIniIndex = Math.max(0, iniIndex);\n    const interpolationEndIndex = Math.min(points.length - 1, endIndex);\n    const segmentPointsUnchangedBeg = points.slice(0, interpolationIniIndex);\n    const segmentPointsUnchangedEnd = points.slice(interpolationEndIndex + 1, points.length);\n    const knotsIndexes = getContinuousUniformDistributionValues(minKnotDistance, [\n        interpolationIniIndex,\n        interpolationEndIndex,\n    ]);\n    const interpolatedPoints = interpolatePoints(points, knotsIndexes);\n    return [\n        ...segmentPointsUnchangedBeg,\n        ...interpolatedPoints,\n        ...segmentPointsUnchangedEnd,\n    ];\n}\n//# sourceMappingURL=interpolateSegmentPoints.js.map","import { interpolateBasis as d3InterpolateBasis, quantize as d3Quantize, } from 'd3-interpolate';\nimport { zip as d3Zip } from 'd3-array';\nfunction isPoints3D(points) {\n    return points[0]?.length === 3;\n}\nexport function interpolatePoints(originalPoints, knotsIndexes) {\n    if (!knotsIndexes ||\n        knotsIndexes.length === 0 ||\n        knotsIndexes.length === originalPoints.length) {\n        return originalPoints;\n    }\n    const n = knotsIndexes[knotsIndexes.length - 1] - knotsIndexes[0] + 1;\n    const xInterpolator = d3InterpolateBasis(knotsIndexes.map((k) => originalPoints[k][0]));\n    const yInterpolator = d3InterpolateBasis(knotsIndexes.map((k) => originalPoints[k][1]));\n    if (isPoints3D(originalPoints)) {\n        const zInterpolator = d3InterpolateBasis(knotsIndexes.map((k) => originalPoints[k][2]));\n        return (d3Zip(d3Quantize(xInterpolator, n), d3Quantize(yInterpolator, n), d3Quantize(zInterpolator, n)));\n    }\n    else {\n        return (d3Zip(d3Quantize(xInterpolator, n), d3Quantize(yInterpolator, n)));\n    }\n}\n//# sourceMappingURL=bspline.js.map","import { point } from '../math';\nimport interpolateSegmentPoints from './interpolation/interpolateSegmentPoints';\nexport function shouldInterpolate(configuration) {\n    return (configuration?.interpolation?.interpolateOnAdd === true ||\n        configuration?.interpolation?.interpolateOnEdit === true);\n}\nfunction isEqualByProximity(pointA, pointB) {\n    return point.distanceToPoint(pointA, pointB) < 0.001;\n}\nfunction isEqual(pointA, pointB) {\n    return point.distanceToPoint(pointA, pointB) === 0;\n}\nfunction findMatchIndexes(points, otherPoints) {\n    for (let i = 0; i < points.length; i++) {\n        for (let j = 0; j < otherPoints.length; j++) {\n            if (isEqual(points[i], otherPoints[j])) {\n                return [i, j];\n            }\n        }\n    }\n}\nfunction followingIndex(index, size, direction) {\n    return (index + size + direction) % size;\n}\nfunction circularFindNextIndexBy(listParams, otherListParams, criteria, direction) {\n    const [, indexDelimiter, points] = listParams;\n    const [, otherIndexDelimiter, otherPoints] = otherListParams;\n    const pointsLength = points.length;\n    const otherPointsLength = otherPoints.length;\n    let startIndex = listParams[0];\n    let otherStartIndex = otherListParams[0];\n    if (!points[startIndex] ||\n        !otherPoints[otherStartIndex] ||\n        !points[indexDelimiter] ||\n        !otherPoints[otherIndexDelimiter]) {\n        return [undefined, undefined];\n    }\n    while (startIndex !== indexDelimiter &&\n        otherStartIndex !== otherIndexDelimiter) {\n        if (criteria(otherPoints[otherStartIndex], points[startIndex])) {\n            return [startIndex, otherStartIndex];\n        }\n        startIndex = followingIndex(startIndex, pointsLength, direction);\n        otherStartIndex = followingIndex(otherStartIndex, otherPointsLength, direction);\n    }\n    return [undefined, undefined];\n}\nfunction findChangedSegment(points, previousPoints) {\n    const [firstMatchIndex, previousFirstMatchIndex] = findMatchIndexes(points, previousPoints) || [];\n    const toBeNotEqualCriteria = (pointA, pointB) => isEqualByProximity(pointA, pointB) === false;\n    const [lowDiffIndex, lowOtherDiffIndex] = circularFindNextIndexBy([\n        followingIndex(firstMatchIndex, points.length, 1),\n        firstMatchIndex,\n        points,\n    ], [\n        followingIndex(previousFirstMatchIndex, previousPoints.length, 1),\n        previousFirstMatchIndex,\n        previousPoints,\n    ], toBeNotEqualCriteria, 1);\n    const [highIndex] = circularFindNextIndexBy([followingIndex(lowDiffIndex, points.length, -1), lowDiffIndex, points], [\n        followingIndex(lowOtherDiffIndex, previousPoints.length, -1),\n        lowOtherDiffIndex,\n        previousPoints,\n    ], toBeNotEqualCriteria, -1);\n    return [lowDiffIndex, highIndex];\n}\nexport function getInterpolatedPoints(configuration, points, pointsOfReference) {\n    const { interpolation } = configuration;\n    const result = points;\n    if (interpolation) {\n        const { knotsRatioPercentageOnAdd, knotsRatioPercentageOnEdit, interpolateOnAdd = false, interpolateOnEdit = false, } = interpolation;\n        const knotsRatioPercentage = pointsOfReference\n            ? knotsRatioPercentageOnEdit\n            : knotsRatioPercentageOnAdd;\n        const isEnabled = pointsOfReference ? interpolateOnEdit : interpolateOnAdd;\n        if (isEnabled) {\n            const [changedIniIndex, changedEndIndex] = pointsOfReference\n                ? findChangedSegment(points, pointsOfReference)\n                : [0, points.length - 1];\n            if (!points[changedIniIndex] || !points[changedEndIndex]) {\n                return points;\n            }\n            return (interpolateSegmentPoints(points, changedIniIndex, changedEndIndex, knotsRatioPercentage));\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=interpolatePoints.js.map","import { vec2 } from 'gl-matrix';\nexport default function findOpenUShapedContourVectorToPeak(canvasPoints, viewport) {\n    const first = canvasPoints[0];\n    const last = canvasPoints[canvasPoints.length - 1];\n    const firstToLastUnitVector = vec2.create();\n    vec2.set(firstToLastUnitVector, last[0] - first[0], last[1] - first[1]);\n    vec2.normalize(firstToLastUnitVector, firstToLastUnitVector);\n    const normalVector1 = vec2.create();\n    const normalVector2 = vec2.create();\n    vec2.set(normalVector1, -firstToLastUnitVector[1], firstToLastUnitVector[0]);\n    vec2.set(normalVector2, firstToLastUnitVector[1], -firstToLastUnitVector[0]);\n    const centerOfFirstToLast = [\n        (first[0] + last[0]) / 2,\n        (first[1] + last[1]) / 2,\n    ];\n    const furthest = {\n        dist: 0,\n        index: null,\n    };\n    for (let i = 0; i < canvasPoints.length; i++) {\n        const canvasPoint = canvasPoints[i];\n        const distance = vec2.dist(canvasPoint, centerOfFirstToLast);\n        if (distance > furthest.dist) {\n            furthest.dist = distance;\n            furthest.index = i;\n        }\n    }\n    const toFurthest = [\n        canvasPoints[furthest.index],\n        centerOfFirstToLast,\n    ];\n    const toFurthestWorld = toFurthest.map(viewport.canvasToWorld);\n    return toFurthestWorld;\n}\nexport function findOpenUShapedContourVectorToPeakOnRender(enabledElement, annotation) {\n    const { viewport } = enabledElement;\n    const canvasPoints = annotation.data.polyline.map(viewport.worldToCanvas);\n    return findOpenUShapedContourVectorToPeak(canvasPoints, viewport);\n}\n//# sourceMappingURL=findOpenUShapedContourVectorToPeak.js.map","import { getEnabledElement } from '@cornerstonejs/core';\nimport { resetElementCursor, hideElementCursor, } from '../../../cursors/elementCursor';\nimport { Events } from '../../../enums';\nimport { state } from '../../../store';\nimport { vec3 } from 'gl-matrix';\nimport { shouldInterpolate, getInterpolatedPoints, } from '../../../utilities/planarFreehandROITool/interpolatePoints';\nimport triggerAnnotationRenderForViewportIds from '../../../utilities/triggerAnnotationRenderForViewportIds';\nimport findOpenUShapedContourVectorToPeak from './findOpenUShapedContourVectorToPeak';\nimport { polyline } from '../../../utilities/math';\nimport { removeAnnotation } from '../../../stateManagement/annotation/annotationState';\nconst { addCanvasPointsToArray, pointsAreWithinCloseContourProximity, getFirstIntersectionWithPolyline, getSubPixelSpacingAndXYDirections, } = polyline;\nfunction activateDraw(evt, annotation, viewportIdsToRender) {\n    this.isDrawing = true;\n    const eventDetail = evt.detail;\n    const { currentPoints, element } = eventDetail;\n    const canvasPos = currentPoints.canvas;\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n    const { spacing, xDir, yDir } = getSubPixelSpacingAndXYDirections(viewport, this.configuration.subPixelResolution);\n    this.drawData = {\n        canvasPoints: [canvasPos],\n        polylineIndex: 0,\n    };\n    this.commonData = {\n        annotation,\n        viewportIdsToRender,\n        spacing,\n        xDir,\n        yDir,\n        movingTextBox: false,\n    };\n    state.isInteractingWithTool = true;\n    element.addEventListener(Events.MOUSE_UP, this.mouseUpDrawCallback);\n    element.addEventListener(Events.MOUSE_DRAG, this.mouseDragDrawCallback);\n    element.addEventListener(Events.MOUSE_CLICK, this.mouseUpDrawCallback);\n    element.addEventListener(Events.TOUCH_END, this.mouseUpDrawCallback);\n    element.addEventListener(Events.TOUCH_DRAG, this.mouseDragDrawCallback);\n    element.addEventListener(Events.TOUCH_TAP, this.mouseUpDrawCallback);\n    hideElementCursor(element);\n}\nfunction deactivateDraw(element) {\n    state.isInteractingWithTool = false;\n    element.removeEventListener(Events.MOUSE_UP, this.mouseUpDrawCallback);\n    element.removeEventListener(Events.MOUSE_DRAG, this.mouseDragDrawCallback);\n    element.removeEventListener(Events.MOUSE_CLICK, this.mouseUpDrawCallback);\n    element.removeEventListener(Events.TOUCH_END, this.mouseUpDrawCallback);\n    element.removeEventListener(Events.TOUCH_DRAG, this.mouseDragDrawCallback);\n    element.removeEventListener(Events.TOUCH_TAP, this.mouseUpDrawCallback);\n    resetElementCursor(element);\n}\nfunction mouseDragDrawCallback(evt) {\n    const eventDetail = evt.detail;\n    const { currentPoints, element } = eventDetail;\n    const worldPos = currentPoints.world;\n    const canvasPos = currentPoints.canvas;\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine, viewport } = enabledElement;\n    const { annotation, viewportIdsToRender, xDir, yDir, spacing, movingTextBox, } = this.commonData;\n    const { polylineIndex, canvasPoints } = this.drawData;\n    const lastCanvasPoint = canvasPoints[canvasPoints.length - 1];\n    const lastWorldPoint = viewport.canvasToWorld(lastCanvasPoint);\n    const worldPosDiff = vec3.create();\n    vec3.subtract(worldPosDiff, worldPos, lastWorldPoint);\n    const xDist = Math.abs(vec3.dot(worldPosDiff, xDir));\n    const yDist = Math.abs(vec3.dot(worldPosDiff, yDir));\n    if (xDist <= spacing[0] && yDist <= spacing[1]) {\n        return;\n    }\n    if (movingTextBox) {\n        this.isDrawing = false;\n        const { deltaPoints } = eventDetail;\n        const worldPosDelta = deltaPoints.world;\n        const { textBox } = annotation.data.handles;\n        const { worldPosition } = textBox;\n        worldPosition[0] += worldPosDelta[0];\n        worldPosition[1] += worldPosDelta[1];\n        worldPosition[2] += worldPosDelta[2];\n        textBox.hasMoved = true;\n    }\n    else {\n        const crossingIndex = this.findCrossingIndexDuringCreate(evt);\n        if (crossingIndex !== undefined) {\n            this.applyCreateOnCross(evt, crossingIndex);\n        }\n        else {\n            const numPointsAdded = addCanvasPointsToArray(element, canvasPoints, canvasPos, this.commonData);\n            this.drawData.polylineIndex = polylineIndex + numPointsAdded;\n        }\n    }\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n}\nfunction mouseUpDrawCallback(evt) {\n    const { allowOpenContours } = this.configuration;\n    const { canvasPoints } = this.drawData;\n    const firstPoint = canvasPoints[0];\n    const lastPoint = canvasPoints[canvasPoints.length - 1];\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n    if (allowOpenContours &&\n        !pointsAreWithinCloseContourProximity(firstPoint, lastPoint, this.configuration.closeContourProximity)) {\n        this.completeDrawOpenContour(element);\n    }\n    else {\n        this.completeDrawClosedContour(element);\n    }\n}\nfunction completeDrawClosedContour(element) {\n    this.removeCrossedLinesOnCompleteDraw();\n    const { canvasPoints } = this.drawData;\n    if (this.haltDrawing(element, canvasPoints)) {\n        return false;\n    }\n    const { annotation, viewportIdsToRender } = this.commonData;\n    const enabledElement = getEnabledElement(element);\n    const { viewport, renderingEngine } = enabledElement;\n    addCanvasPointsToArray(element, canvasPoints, canvasPoints[0], this.commonData);\n    canvasPoints.pop();\n    const updatedPoints = shouldInterpolate(this.configuration)\n        ? getInterpolatedPoints(this.configuration, canvasPoints)\n        : canvasPoints;\n    const worldPoints = updatedPoints.map((canvasPoint) => viewport.canvasToWorld(canvasPoint));\n    annotation.data.polyline = worldPoints;\n    annotation.data.isOpenContour = false;\n    this.triggerAnnotationCompleted(annotation);\n    this.isDrawing = false;\n    this.drawData = undefined;\n    this.commonData = undefined;\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n    this.deactivateDraw(element);\n    return true;\n}\nfunction removeCrossedLinesOnCompleteDraw() {\n    const { canvasPoints } = this.drawData;\n    const numPoints = canvasPoints.length;\n    const endToStart = [canvasPoints[0], canvasPoints[numPoints - 1]];\n    const canvasPointsMinusEnds = canvasPoints.slice(0, -1).slice(1);\n    const lineSegment = getFirstIntersectionWithPolyline(canvasPointsMinusEnds, endToStart[0], endToStart[1], false);\n    if (lineSegment) {\n        const indexToRemoveUpTo = lineSegment[1];\n        this.drawData.canvasPoints = canvasPoints.splice(0, indexToRemoveUpTo);\n    }\n}\nfunction completeDrawOpenContour(element) {\n    const { canvasPoints } = this.drawData;\n    if (this.haltDrawing(element, canvasPoints)) {\n        return false;\n    }\n    const { annotation, viewportIdsToRender } = this.commonData;\n    const enabledElement = getEnabledElement(element);\n    const { viewport, renderingEngine } = enabledElement;\n    const updatedPoints = shouldInterpolate(this.configuration)\n        ? getInterpolatedPoints(this.configuration, canvasPoints)\n        : canvasPoints;\n    const worldPoints = updatedPoints.map((canvasPoint) => viewport.canvasToWorld(canvasPoint));\n    annotation.data.polyline = worldPoints;\n    annotation.data.isOpenContour = true;\n    annotation.data.handles.points = [\n        worldPoints[0],\n        worldPoints[worldPoints.length - 1],\n    ];\n    if (annotation.data.isOpenUShapeContour) {\n        annotation.data.openUShapeContourVectorToPeak =\n            findOpenUShapedContourVectorToPeak(canvasPoints, viewport);\n    }\n    this.triggerAnnotationCompleted(annotation);\n    this.isDrawing = false;\n    this.drawData = undefined;\n    this.commonData = undefined;\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n    this.deactivateDraw(element);\n    return true;\n}\nfunction findCrossingIndexDuringCreate(evt) {\n    const eventDetail = evt.detail;\n    const { currentPoints, lastPoints } = eventDetail;\n    const canvasPos = currentPoints.canvas;\n    const lastCanvasPoint = lastPoints.canvas;\n    const { canvasPoints } = this.drawData;\n    const pointsLessLastOne = canvasPoints.slice(0, -1);\n    const lineSegment = getFirstIntersectionWithPolyline(pointsLessLastOne, canvasPos, lastCanvasPoint, false);\n    if (lineSegment === undefined) {\n        return;\n    }\n    const crossingIndex = lineSegment[0];\n    return crossingIndex;\n}\nfunction applyCreateOnCross(evt, crossingIndex) {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n    const { canvasPoints } = this.drawData;\n    const { annotation, viewportIdsToRender } = this.commonData;\n    addCanvasPointsToArray(element, canvasPoints, canvasPoints[crossingIndex], this.commonData);\n    canvasPoints.pop();\n    for (let i = 0; i < crossingIndex; i++) {\n        canvasPoints.shift();\n    }\n    if (this.completeDrawClosedContour(element)) {\n        this.activateClosedContourEdit(evt, annotation, viewportIdsToRender);\n    }\n}\nfunction cancelDrawing(element) {\n    const { allowOpenContours } = this.configuration;\n    const { canvasPoints } = this.drawData;\n    const firstPoint = canvasPoints[0];\n    const lastPoint = canvasPoints[canvasPoints.length - 1];\n    if (allowOpenContours &&\n        !pointsAreWithinCloseContourProximity(firstPoint, lastPoint, this.configuration.closeContourProximity)) {\n        this.completeDrawOpenContour(element);\n    }\n    else {\n        this.completeDrawClosedContour(element);\n    }\n}\nfunction shouldHaltDrawing(canvasPoints, subPixelResolution) {\n    const minPoints = Math.max(subPixelResolution * 3, 3);\n    return canvasPoints.length < minPoints;\n}\nfunction haltDrawing(element, canvasPoints) {\n    const { subPixelResolution } = this.configuration;\n    if (shouldHaltDrawing(canvasPoints, subPixelResolution)) {\n        const { annotation, viewportIdsToRender } = this.commonData;\n        const enabledElement = getEnabledElement(element);\n        const { renderingEngine } = enabledElement;\n        removeAnnotation(annotation.annotationUID);\n        this.isDrawing = false;\n        this.drawData = undefined;\n        this.commonData = undefined;\n        triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n        this.deactivateDraw(element);\n        return true;\n    }\n    return false;\n}\nfunction registerDrawLoop(toolInstance) {\n    toolInstance.activateDraw = activateDraw.bind(toolInstance);\n    toolInstance.deactivateDraw = deactivateDraw.bind(toolInstance);\n    toolInstance.applyCreateOnCross = applyCreateOnCross.bind(toolInstance);\n    toolInstance.findCrossingIndexDuringCreate =\n        findCrossingIndexDuringCreate.bind(toolInstance);\n    toolInstance.completeDrawOpenContour =\n        completeDrawOpenContour.bind(toolInstance);\n    toolInstance.removeCrossedLinesOnCompleteDraw =\n        removeCrossedLinesOnCompleteDraw.bind(toolInstance);\n    toolInstance.mouseDragDrawCallback = mouseDragDrawCallback.bind(toolInstance);\n    toolInstance.mouseUpDrawCallback = mouseUpDrawCallback.bind(toolInstance);\n    toolInstance.completeDrawClosedContour =\n        completeDrawClosedContour.bind(toolInstance);\n    toolInstance.cancelDrawing = cancelDrawing.bind(toolInstance);\n    toolInstance.haltDrawing = haltDrawing.bind(toolInstance);\n}\nexport default registerDrawLoop;\n//# sourceMappingURL=drawLoop.js.map","import { vec2 } from 'gl-matrix';\nimport { polyline } from '../../../utilities/math';\nconst { addCanvasPointsToArray, getFirstIntersectionWithPolyline } = polyline;\nfunction checkForFirstCrossing(evt, isClosedContour) {\n    const eventDetail = evt.detail;\n    const { element, currentPoints, lastPoints } = eventDetail;\n    const canvasPos = currentPoints.canvas;\n    const lastCanvasPoint = lastPoints.canvas;\n    const { editCanvasPoints, prevCanvasPoints } = this.editData;\n    const crossedLineSegment = getFirstIntersectionWithPolyline(prevCanvasPoints, canvasPos, lastCanvasPoint, isClosedContour);\n    if (crossedLineSegment) {\n        this.editData.startCrossingIndex = crossedLineSegment[0];\n        this.removePointsUpUntilFirstCrossing(isClosedContour);\n    }\n    else if (prevCanvasPoints.length >= 2) {\n        if (editCanvasPoints.length >\n            this.configuration.checkCanvasEditFallbackProximity) {\n            const firstEditCanvasPoint = editCanvasPoints[0];\n            const distanceIndexPairs = [];\n            for (let i = 0; i < prevCanvasPoints.length; i++) {\n                const prevCanvasPoint = prevCanvasPoints[i];\n                const distance = vec2.distance(prevCanvasPoint, firstEditCanvasPoint);\n                distanceIndexPairs.push({ distance, index: i });\n            }\n            distanceIndexPairs.sort((a, b) => a.distance - b.distance);\n            const twoClosestDistanceIndexPairs = [\n                distanceIndexPairs[0],\n                distanceIndexPairs[1],\n            ];\n            const lowestIndex = Math.min(twoClosestDistanceIndexPairs[0].index, twoClosestDistanceIndexPairs[1].index);\n            this.editData.startCrossingIndex = lowestIndex;\n        }\n        else {\n            const dir = vec2.create();\n            vec2.subtract(dir, editCanvasPoints[1], editCanvasPoints[0]);\n            vec2.normalize(dir, dir);\n            const proximity = 6;\n            const extendedPoint = [\n                editCanvasPoints[0][0] - dir[0] * proximity,\n                editCanvasPoints[0][1] - dir[1] * proximity,\n            ];\n            const crossedLineSegmentFromExtendedPoint = getFirstIntersectionWithPolyline(prevCanvasPoints, extendedPoint, editCanvasPoints[0], isClosedContour);\n            if (crossedLineSegmentFromExtendedPoint) {\n                const pointsToPrepend = [extendedPoint];\n                addCanvasPointsToArray(element, pointsToPrepend, editCanvasPoints[0], this.commonData);\n                editCanvasPoints.unshift(...pointsToPrepend);\n                this.removePointsUpUntilFirstCrossing(isClosedContour);\n                this.editData.editIndex = editCanvasPoints.length - 1;\n                this.editData.startCrossingIndex =\n                    crossedLineSegmentFromExtendedPoint[0];\n            }\n        }\n    }\n}\nfunction removePointsUpUntilFirstCrossing(isClosedContour) {\n    const { editCanvasPoints, prevCanvasPoints } = this.editData;\n    let numPointsToRemove = 0;\n    for (let i = 0; i < editCanvasPoints.length - 1; i++) {\n        const firstLine = [editCanvasPoints[i], editCanvasPoints[i + 1]];\n        const didCrossLine = !!getFirstIntersectionWithPolyline(prevCanvasPoints, firstLine[0], firstLine[1], isClosedContour);\n        numPointsToRemove++;\n        if (didCrossLine) {\n            break;\n        }\n    }\n    editCanvasPoints.splice(0, numPointsToRemove);\n    this.editData.editIndex = editCanvasPoints.length - 1;\n}\nfunction checkForSecondCrossing(evt, isClosedContour) {\n    const eventDetail = evt.detail;\n    const { currentPoints, lastPoints } = eventDetail;\n    const canvasPos = currentPoints.canvas;\n    const lastCanvasPoint = lastPoints.canvas;\n    const { prevCanvasPoints } = this.editData;\n    const crossedLineSegment = getFirstIntersectionWithPolyline(prevCanvasPoints, canvasPos, lastCanvasPoint, isClosedContour);\n    if (!crossedLineSegment) {\n        return false;\n    }\n    return true;\n}\nfunction removePointsAfterSecondCrossing(isClosedContour) {\n    const { prevCanvasPoints, editCanvasPoints } = this.editData;\n    for (let i = editCanvasPoints.length - 1; i > 0; i--) {\n        const lastLine = [editCanvasPoints[i], editCanvasPoints[i - 1]];\n        const didCrossLine = !!getFirstIntersectionWithPolyline(prevCanvasPoints, lastLine[0], lastLine[1], isClosedContour);\n        editCanvasPoints.pop();\n        if (didCrossLine) {\n            break;\n        }\n    }\n}\nfunction findSnapIndex() {\n    const { editCanvasPoints, prevCanvasPoints, startCrossingIndex } = this.editData;\n    if (startCrossingIndex === undefined) {\n        return;\n    }\n    const lastEditCanvasPoint = editCanvasPoints[editCanvasPoints.length - 1];\n    const distanceIndexPairs = [];\n    for (let i = 0; i < prevCanvasPoints.length; i++) {\n        const prevCanvasPoint = prevCanvasPoints[i];\n        const distance = vec2.distance(prevCanvasPoint, lastEditCanvasPoint);\n        distanceIndexPairs.push({ distance, index: i });\n    }\n    distanceIndexPairs.sort((a, b) => a.distance - b.distance);\n    const editCanvasPointsLessLastOne = editCanvasPoints.slice(0, -1);\n    for (let i = 0; i < distanceIndexPairs.length; i++) {\n        const { index } = distanceIndexPairs[i];\n        const snapCanvasPosition = prevCanvasPoints[index];\n        const lastEditCanvasPoint = editCanvasPoints[editCanvasPoints.length - 1];\n        const crossedLineSegment = getFirstIntersectionWithPolyline(editCanvasPointsLessLastOne, snapCanvasPosition, lastEditCanvasPoint, false);\n        if (!crossedLineSegment) {\n            return index;\n        }\n    }\n    return -1;\n}\nfunction checkAndRemoveCrossesOnEditLine(evt) {\n    const eventDetail = evt.detail;\n    const { currentPoints, lastPoints } = eventDetail;\n    const canvasPos = currentPoints.canvas;\n    const lastCanvasPoint = lastPoints.canvas;\n    const { editCanvasPoints } = this.editData;\n    const editCanvasPointsLessLastOne = editCanvasPoints.slice(0, -2);\n    const crossedLineSegment = getFirstIntersectionWithPolyline(editCanvasPointsLessLastOne, canvasPos, lastCanvasPoint, false);\n    if (!crossedLineSegment) {\n        return;\n    }\n    const editIndexCrossed = crossedLineSegment[0];\n    const numPointsToRemove = editCanvasPoints.length - editIndexCrossed;\n    for (let i = 0; i < numPointsToRemove; i++) {\n        editCanvasPoints.pop();\n    }\n}\nfunction registerEditLoopCommon(toolInstance) {\n    toolInstance.checkForFirstCrossing = checkForFirstCrossing.bind(toolInstance);\n    toolInstance.removePointsUpUntilFirstCrossing =\n        removePointsUpUntilFirstCrossing.bind(toolInstance);\n    toolInstance.checkForSecondCrossing =\n        checkForSecondCrossing.bind(toolInstance);\n    toolInstance.findSnapIndex = findSnapIndex.bind(toolInstance);\n    toolInstance.removePointsAfterSecondCrossing =\n        removePointsAfterSecondCrossing.bind(toolInstance);\n    toolInstance.checkAndRemoveCrossesOnEditLine =\n        checkAndRemoveCrossesOnEditLine.bind(toolInstance);\n}\nexport default registerEditLoopCommon;\n//# sourceMappingURL=editLoopCommon.js.map","import { getEnabledElement } from '@cornerstonejs/core';\nimport { state } from '../../../store';\nimport { Events } from '../../../enums';\nimport { resetElementCursor, hideElementCursor, } from '../../../cursors/elementCursor';\nimport { polyline } from '../../../utilities/math';\nimport { vec3, vec2 } from 'gl-matrix';\nimport { getInterpolatedPoints, shouldInterpolate, } from '../../../utilities/planarFreehandROITool/interpolatePoints';\nimport triggerAnnotationRenderForViewportIds from '../../../utilities/triggerAnnotationRenderForViewportIds';\nconst { getSubPixelSpacingAndXYDirections, addCanvasPointsToArray, calculateAreaOfPoints, } = polyline;\nfunction activateClosedContourEdit(evt, annotation, viewportIdsToRender) {\n    this.isEditingClosed = true;\n    const eventDetail = evt.detail;\n    const { currentPoints, element } = eventDetail;\n    const canvasPos = currentPoints.canvas;\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n    const prevCanvasPoints = annotation.data.polyline.map(viewport.worldToCanvas);\n    const { spacing, xDir, yDir } = getSubPixelSpacingAndXYDirections(viewport, this.configuration.subPixelResolution);\n    this.editData = {\n        prevCanvasPoints,\n        editCanvasPoints: [canvasPos],\n        startCrossingIndex: undefined,\n        editIndex: 0,\n    };\n    this.commonData = {\n        annotation,\n        viewportIdsToRender,\n        spacing,\n        xDir,\n        yDir,\n        movingTextBox: false,\n    };\n    state.isInteractingWithTool = true;\n    element.addEventListener(Events.MOUSE_UP, this.mouseUpClosedContourEditCallback);\n    element.addEventListener(Events.MOUSE_DRAG, this.mouseDragClosedContourEditCallback);\n    element.addEventListener(Events.MOUSE_CLICK, this.mouseUpClosedContourEditCallback);\n    element.addEventListener(Events.TOUCH_END, this.mouseUpClosedContourEditCallback);\n    element.addEventListener(Events.TOUCH_DRAG, this.mouseDragClosedContourEditCallback);\n    element.addEventListener(Events.TOUCH_TAP, this.mouseUpClosedContourEditCallback);\n    hideElementCursor(element);\n}\nfunction deactivateClosedContourEdit(element) {\n    state.isInteractingWithTool = false;\n    element.removeEventListener(Events.MOUSE_UP, this.mouseUpClosedContourEditCallback);\n    element.removeEventListener(Events.MOUSE_DRAG, this.mouseDragClosedContourEditCallback);\n    element.removeEventListener(Events.MOUSE_CLICK, this.mouseUpClosedContourEditCallback);\n    element.removeEventListener(Events.TOUCH_END, this.mouseUpClosedContourEditCallback);\n    element.removeEventListener(Events.TOUCH_DRAG, this.mouseDragClosedContourEditCallback);\n    element.removeEventListener(Events.TOUCH_TAP, this.mouseUpClosedContourEditCallback);\n    resetElementCursor(element);\n}\nfunction mouseDragClosedContourEditCallback(evt) {\n    const eventDetail = evt.detail;\n    const { currentPoints, element } = eventDetail;\n    const worldPos = currentPoints.world;\n    const canvasPos = currentPoints.canvas;\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine, viewport } = enabledElement;\n    const { viewportIdsToRender, xDir, yDir, spacing } = this.commonData;\n    const { editIndex, editCanvasPoints, startCrossingIndex } = this.editData;\n    const lastCanvasPoint = editCanvasPoints[editCanvasPoints.length - 1];\n    const lastWorldPoint = viewport.canvasToWorld(lastCanvasPoint);\n    const worldPosDiff = vec3.create();\n    vec3.subtract(worldPosDiff, worldPos, lastWorldPoint);\n    const xDist = Math.abs(vec3.dot(worldPosDiff, xDir));\n    const yDist = Math.abs(vec3.dot(worldPosDiff, yDir));\n    if (xDist <= spacing[0] && yDist <= spacing[1]) {\n        return;\n    }\n    if (startCrossingIndex !== undefined) {\n        this.checkAndRemoveCrossesOnEditLine(evt);\n    }\n    const numPointsAdded = addCanvasPointsToArray(element, editCanvasPoints, canvasPos, this.commonData);\n    const currentEditIndex = editIndex + numPointsAdded;\n    this.editData.editIndex = currentEditIndex;\n    if (startCrossingIndex === undefined && editCanvasPoints.length > 1) {\n        this.checkForFirstCrossing(evt, true);\n    }\n    this.editData.snapIndex = this.findSnapIndex();\n    if (this.editData.snapIndex === -1) {\n        this.finishEditAndStartNewEdit(evt);\n        return;\n    }\n    this.editData.fusedCanvasPoints = this.fuseEditPointsWithClosedContour(evt);\n    if (startCrossingIndex !== undefined &&\n        this.checkForSecondCrossing(evt, true)) {\n        this.removePointsAfterSecondCrossing(true);\n        this.finishEditAndStartNewEdit(evt);\n    }\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n}\nfunction finishEditAndStartNewEdit(evt) {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n    const enabledElement = getEnabledElement(element);\n    const { viewport, renderingEngine } = enabledElement;\n    const { annotation, viewportIdsToRender } = this.commonData;\n    const { fusedCanvasPoints, editCanvasPoints } = this.editData;\n    const worldPoints = fusedCanvasPoints.map((canvasPoint) => viewport.canvasToWorld(canvasPoint));\n    annotation.data.polyline = worldPoints;\n    annotation.data.isOpenContour = false;\n    this.triggerAnnotationModified(annotation, enabledElement);\n    const lastEditCanvasPoint = editCanvasPoints.pop();\n    this.editData = {\n        prevCanvasPoints: fusedCanvasPoints,\n        editCanvasPoints: [lastEditCanvasPoint],\n        startCrossingIndex: undefined,\n        editIndex: 0,\n        snapIndex: undefined,\n    };\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n}\nfunction fuseEditPointsWithClosedContour(evt) {\n    const { prevCanvasPoints, editCanvasPoints, startCrossingIndex, snapIndex } = this.editData;\n    if (startCrossingIndex === undefined || snapIndex === undefined) {\n        return;\n    }\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n    const augmentedEditCanvasPoints = [...editCanvasPoints];\n    addCanvasPointsToArray(element, augmentedEditCanvasPoints, prevCanvasPoints[snapIndex], this.commonData);\n    if (augmentedEditCanvasPoints.length > editCanvasPoints.length) {\n        augmentedEditCanvasPoints.pop();\n    }\n    let lowIndex;\n    let highIndex;\n    if (startCrossingIndex > snapIndex) {\n        lowIndex = snapIndex;\n        highIndex = startCrossingIndex;\n    }\n    else {\n        lowIndex = startCrossingIndex;\n        highIndex = snapIndex;\n    }\n    const distanceBetweenLowAndFirstPoint = vec2.distance(prevCanvasPoints[lowIndex], augmentedEditCanvasPoints[0]);\n    const distanceBetweenLowAndLastPoint = vec2.distance(prevCanvasPoints[lowIndex], augmentedEditCanvasPoints[augmentedEditCanvasPoints.length - 1]);\n    const distanceBetweenHighAndFirstPoint = vec2.distance(prevCanvasPoints[highIndex], augmentedEditCanvasPoints[0]);\n    const distanceBetweenHighAndLastPoint = vec2.distance(prevCanvasPoints[highIndex], augmentedEditCanvasPoints[augmentedEditCanvasPoints.length - 1]);\n    const pointSet1 = [];\n    for (let i = 0; i < lowIndex; i++) {\n        const canvasPoint = prevCanvasPoints[i];\n        pointSet1.push([canvasPoint[0], canvasPoint[1]]);\n    }\n    let inPlaceDistance = distanceBetweenLowAndFirstPoint + distanceBetweenHighAndLastPoint;\n    let reverseDistance = distanceBetweenLowAndLastPoint + distanceBetweenHighAndFirstPoint;\n    if (inPlaceDistance < reverseDistance) {\n        for (let i = 0; i < augmentedEditCanvasPoints.length; i++) {\n            const canvasPoint = augmentedEditCanvasPoints[i];\n            pointSet1.push([canvasPoint[0], canvasPoint[1]]);\n        }\n    }\n    else {\n        for (let i = augmentedEditCanvasPoints.length - 1; i >= 0; i--) {\n            const canvasPoint = augmentedEditCanvasPoints[i];\n            pointSet1.push([canvasPoint[0], canvasPoint[1]]);\n        }\n    }\n    for (let i = highIndex; i < prevCanvasPoints.length; i++) {\n        const canvasPoint = prevCanvasPoints[i];\n        pointSet1.push([canvasPoint[0], canvasPoint[1]]);\n    }\n    const pointSet2 = [];\n    for (let i = lowIndex; i < highIndex; i++) {\n        const canvasPoint = prevCanvasPoints[i];\n        pointSet2.push([canvasPoint[0], canvasPoint[1]]);\n    }\n    inPlaceDistance =\n        distanceBetweenHighAndFirstPoint + distanceBetweenLowAndLastPoint;\n    reverseDistance =\n        distanceBetweenHighAndLastPoint + distanceBetweenLowAndFirstPoint;\n    if (inPlaceDistance < reverseDistance) {\n        for (let i = 0; i < augmentedEditCanvasPoints.length; i++) {\n            const canvasPoint = augmentedEditCanvasPoints[i];\n            pointSet2.push([canvasPoint[0], canvasPoint[1]]);\n        }\n    }\n    else {\n        for (let i = augmentedEditCanvasPoints.length - 1; i >= 0; i--) {\n            const canvasPoint = augmentedEditCanvasPoints[i];\n            pointSet2.push([canvasPoint[0], canvasPoint[1]]);\n        }\n    }\n    const areaPointSet1 = calculateAreaOfPoints(pointSet1);\n    const areaPointSet2 = calculateAreaOfPoints(pointSet2);\n    const pointsToRender = areaPointSet1 > areaPointSet2 ? pointSet1 : pointSet2;\n    return pointsToRender;\n}\nfunction mouseUpClosedContourEditCallback(evt) {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n    this.completeClosedContourEdit(element);\n}\nfunction completeClosedContourEdit(element) {\n    const enabledElement = getEnabledElement(element);\n    const { viewport, renderingEngine } = enabledElement;\n    const { annotation, viewportIdsToRender } = this.commonData;\n    const { fusedCanvasPoints, prevCanvasPoints } = this.editData;\n    if (fusedCanvasPoints) {\n        const updatedPoints = shouldInterpolate(this.configuration)\n            ? getInterpolatedPoints(this.configuration, fusedCanvasPoints, prevCanvasPoints)\n            : fusedCanvasPoints;\n        const worldPoints = updatedPoints.map((canvasPoint) => viewport.canvasToWorld(canvasPoint));\n        annotation.data.polyline = worldPoints;\n        annotation.data.isOpenContour = false;\n        this.triggerAnnotationModified(annotation, enabledElement);\n    }\n    this.isEditingClosed = false;\n    this.editData = undefined;\n    this.commonData = undefined;\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n    this.deactivateClosedContourEdit(element);\n}\nfunction cancelClosedContourEdit(element) {\n    this.completeClosedContourEdit(element);\n}\nfunction registerClosedContourEditLoop(toolInstance) {\n    toolInstance.activateClosedContourEdit =\n        activateClosedContourEdit.bind(toolInstance);\n    toolInstance.deactivateClosedContourEdit =\n        deactivateClosedContourEdit.bind(toolInstance);\n    toolInstance.mouseDragClosedContourEditCallback =\n        mouseDragClosedContourEditCallback.bind(toolInstance);\n    toolInstance.mouseUpClosedContourEditCallback =\n        mouseUpClosedContourEditCallback.bind(toolInstance);\n    toolInstance.finishEditAndStartNewEdit =\n        finishEditAndStartNewEdit.bind(toolInstance);\n    toolInstance.fuseEditPointsWithClosedContour =\n        fuseEditPointsWithClosedContour.bind(toolInstance);\n    toolInstance.cancelClosedContourEdit =\n        cancelClosedContourEdit.bind(toolInstance);\n    toolInstance.completeClosedContourEdit =\n        completeClosedContourEdit.bind(toolInstance);\n}\nexport default registerClosedContourEditLoop;\n//# sourceMappingURL=closedContourEditLoop.js.map","import { getEnabledElement } from '@cornerstonejs/core';\nimport { state } from '../../../store';\nimport { Events } from '../../../enums';\nimport { resetElementCursor, hideElementCursor, } from '../../../cursors/elementCursor';\nimport { vec3, vec2 } from 'gl-matrix';\nimport { polyline } from '../../../utilities/math';\nimport { shouldInterpolate, getInterpolatedPoints, } from '../../../utilities/planarFreehandROITool/interpolatePoints';\nimport triggerAnnotationRenderForViewportIds from '../../../utilities/triggerAnnotationRenderForViewportIds';\nimport findOpenUShapedContourVectorToPeak from './findOpenUShapedContourVectorToPeak';\nconst { addCanvasPointsToArray, getSubPixelSpacingAndXYDirections } = polyline;\nfunction activateOpenContourEdit(evt, annotation, viewportIdsToRender) {\n    this.isEditingOpen = true;\n    const eventDetail = evt.detail;\n    const { currentPoints, element } = eventDetail;\n    const canvasPos = currentPoints.canvas;\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n    const prevCanvasPoints = annotation.data.polyline.map(viewport.worldToCanvas);\n    const { spacing, xDir, yDir } = getSubPixelSpacingAndXYDirections(viewport, this.configuration.subPixelResolution);\n    this.editData = {\n        prevCanvasPoints,\n        editCanvasPoints: [canvasPos],\n        startCrossingIndex: undefined,\n        editIndex: 0,\n    };\n    this.commonData = {\n        annotation,\n        viewportIdsToRender,\n        spacing,\n        xDir,\n        yDir,\n        movingTextBox: false,\n    };\n    state.isInteractingWithTool = true;\n    element.addEventListener(Events.MOUSE_UP, this.mouseUpOpenContourEditCallback);\n    element.addEventListener(Events.MOUSE_DRAG, this.mouseDragOpenContourEditCallback);\n    element.addEventListener(Events.MOUSE_CLICK, this.mouseUpOpenContourEditCallback);\n    element.addEventListener(Events.TOUCH_END, this.mouseUpOpenContourEditCallback);\n    element.addEventListener(Events.TOUCH_DRAG, this.mouseDragOpenContourEditCallback);\n    element.addEventListener(Events.TOUCH_TAP, this.mouseUpOpenContourEditCallback);\n    hideElementCursor(element);\n}\nfunction deactivateOpenContourEdit(element) {\n    state.isInteractingWithTool = false;\n    element.removeEventListener(Events.MOUSE_UP, this.mouseUpOpenContourEditCallback);\n    element.removeEventListener(Events.MOUSE_DRAG, this.mouseDragOpenContourEditCallback);\n    element.removeEventListener(Events.MOUSE_CLICK, this.mouseUpOpenContourEditCallback);\n    element.removeEventListener(Events.TOUCH_END, this.mouseUpOpenContourEditCallback);\n    element.removeEventListener(Events.TOUCH_DRAG, this.mouseDragOpenContourEditCallback);\n    element.removeEventListener(Events.TOUCH_TAP, this.mouseUpOpenContourEditCallback);\n    resetElementCursor(element);\n}\nfunction mouseDragOpenContourEditCallback(evt) {\n    const eventDetail = evt.detail;\n    const { currentPoints, element } = eventDetail;\n    const worldPos = currentPoints.world;\n    const canvasPos = currentPoints.canvas;\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine, viewport } = enabledElement;\n    const { viewportIdsToRender, xDir, yDir, spacing } = this.commonData;\n    const { editIndex, editCanvasPoints, startCrossingIndex } = this.editData;\n    const lastCanvasPoint = editCanvasPoints[editCanvasPoints.length - 1];\n    const lastWorldPoint = viewport.canvasToWorld(lastCanvasPoint);\n    const worldPosDiff = vec3.create();\n    vec3.subtract(worldPosDiff, worldPos, lastWorldPoint);\n    const xDist = Math.abs(vec3.dot(worldPosDiff, xDir));\n    const yDist = Math.abs(vec3.dot(worldPosDiff, yDir));\n    if (xDist <= spacing[0] && yDist <= spacing[1]) {\n        return;\n    }\n    if (startCrossingIndex !== undefined) {\n        this.checkAndRemoveCrossesOnEditLine(evt);\n    }\n    const numPointsAdded = addCanvasPointsToArray(element, editCanvasPoints, canvasPos, this.commonData);\n    const currentEditIndex = editIndex + numPointsAdded;\n    this.editData.editIndex = currentEditIndex;\n    if (startCrossingIndex === undefined && editCanvasPoints.length > 1) {\n        this.checkForFirstCrossing(evt, false);\n    }\n    this.editData.snapIndex = this.findSnapIndex();\n    this.editData.fusedCanvasPoints = this.fuseEditPointsWithOpenContour(evt);\n    if (startCrossingIndex !== undefined &&\n        this.checkForSecondCrossing(evt, false)) {\n        this.removePointsAfterSecondCrossing(false);\n        this.finishEditOpenOnSecondCrossing(evt);\n    }\n    else if (this.checkIfShouldOverwriteAnEnd(evt)) {\n        this.openContourEditOverwriteEnd(evt);\n    }\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n}\nfunction openContourEditOverwriteEnd(evt) {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n    const { annotation, viewportIdsToRender } = this.commonData;\n    const fusedCanvasPoints = this.fuseEditPointsForOpenContourEndEdit();\n    const worldPoints = fusedCanvasPoints.map((canvasPoint) => viewport.canvasToWorld(canvasPoint));\n    annotation.data.polyline = worldPoints;\n    annotation.data.isOpenContour = true;\n    annotation.data.handles.points = [\n        worldPoints[0],\n        worldPoints[worldPoints.length - 1],\n    ];\n    annotation.data.handles.activeHandleIndex = 1;\n    this.triggerAnnotationModified(annotation, enabledElement);\n    this.isEditingOpen = false;\n    this.editData = undefined;\n    this.commonData = undefined;\n    this.deactivateOpenContourEdit(element);\n    this.activateOpenContourEndEdit(evt, annotation, viewportIdsToRender, null);\n}\nfunction checkIfShouldOverwriteAnEnd(evt) {\n    const eventDetail = evt.detail;\n    const { currentPoints, lastPoints } = eventDetail;\n    const canvasPos = currentPoints.canvas;\n    const lastCanvasPos = lastPoints.canvas;\n    const { snapIndex, prevCanvasPoints, startCrossingIndex } = this.editData;\n    if (startCrossingIndex === undefined || snapIndex === undefined) {\n        return false;\n    }\n    if (snapIndex === -1) {\n        return true;\n    }\n    if (snapIndex !== 0 && snapIndex !== prevCanvasPoints.length - 1) {\n        return false;\n    }\n    const p1 = canvasPos;\n    const p2 = lastCanvasPos;\n    const p3 = prevCanvasPoints[snapIndex];\n    const a = vec2.create();\n    const b = vec2.create();\n    vec2.set(a, p1[0] - p2[0], p1[1] - p2[1]);\n    vec2.set(b, p1[0] - p3[0], p1[1] - p3[1]);\n    const aDotb = vec2.dot(a, b);\n    const magA = Math.sqrt(a[0] * a[0] + a[1] * a[1]);\n    const magB = Math.sqrt(b[0] * b[0] + b[1] * b[1]);\n    const theta = Math.acos(aDotb / (magA * magB));\n    if (theta < Math.PI / 2) {\n        return true;\n    }\n    return false;\n}\nfunction fuseEditPointsForOpenContourEndEdit() {\n    const { snapIndex, prevCanvasPoints, editCanvasPoints, startCrossingIndex } = this.editData;\n    const newCanvasPoints = [];\n    if (snapIndex === 0) {\n        for (let i = prevCanvasPoints.length - 1; i >= startCrossingIndex; i--) {\n            const canvasPoint = prevCanvasPoints[i];\n            newCanvasPoints.push([canvasPoint[0], canvasPoint[1]]);\n        }\n    }\n    else {\n        for (let i = 0; i < startCrossingIndex; i++) {\n            const canvasPoint = prevCanvasPoints[i];\n            newCanvasPoints.push([canvasPoint[0], canvasPoint[1]]);\n        }\n    }\n    const distanceBetweenCrossingIndexAndFirstPoint = vec2.distance(prevCanvasPoints[startCrossingIndex], editCanvasPoints[0]);\n    const distanceBetweenCrossingIndexAndLastPoint = vec2.distance(prevCanvasPoints[startCrossingIndex], editCanvasPoints[editCanvasPoints.length - 1]);\n    if (distanceBetweenCrossingIndexAndFirstPoint <\n        distanceBetweenCrossingIndexAndLastPoint) {\n        for (let i = 0; i < editCanvasPoints.length; i++) {\n            const canvasPoint = editCanvasPoints[i];\n            newCanvasPoints.push([canvasPoint[0], canvasPoint[1]]);\n        }\n    }\n    else {\n        for (let i = editCanvasPoints.length - 1; i >= 0; i--) {\n            const canvasPoint = editCanvasPoints[i];\n            newCanvasPoints.push([canvasPoint[0], canvasPoint[1]]);\n        }\n    }\n    return newCanvasPoints;\n}\nfunction fuseEditPointsWithOpenContour(evt) {\n    const { prevCanvasPoints, editCanvasPoints, startCrossingIndex, snapIndex } = this.editData;\n    if (startCrossingIndex === undefined || snapIndex === undefined) {\n        return undefined;\n    }\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n    const augmentedEditCanvasPoints = [...editCanvasPoints];\n    addCanvasPointsToArray(element, augmentedEditCanvasPoints, prevCanvasPoints[snapIndex], this.commonData);\n    if (augmentedEditCanvasPoints.length > editCanvasPoints.length) {\n        augmentedEditCanvasPoints.pop();\n    }\n    let lowIndex;\n    let highIndex;\n    if (startCrossingIndex > snapIndex) {\n        lowIndex = snapIndex;\n        highIndex = startCrossingIndex;\n    }\n    else {\n        lowIndex = startCrossingIndex;\n        highIndex = snapIndex;\n    }\n    const distanceBetweenLowAndFirstPoint = vec2.distance(prevCanvasPoints[lowIndex], augmentedEditCanvasPoints[0]);\n    const distanceBetweenLowAndLastPoint = vec2.distance(prevCanvasPoints[lowIndex], augmentedEditCanvasPoints[augmentedEditCanvasPoints.length - 1]);\n    const distanceBetweenHighAndFirstPoint = vec2.distance(prevCanvasPoints[highIndex], augmentedEditCanvasPoints[0]);\n    const distanceBetweenHighAndLastPoint = vec2.distance(prevCanvasPoints[highIndex], augmentedEditCanvasPoints[augmentedEditCanvasPoints.length - 1]);\n    const pointsToRender = [];\n    for (let i = 0; i < lowIndex; i++) {\n        const canvasPoint = prevCanvasPoints[i];\n        pointsToRender.push([canvasPoint[0], canvasPoint[1]]);\n    }\n    const inPlaceDistance = distanceBetweenLowAndFirstPoint + distanceBetweenHighAndLastPoint;\n    const reverseDistance = distanceBetweenLowAndLastPoint + distanceBetweenHighAndFirstPoint;\n    if (inPlaceDistance < reverseDistance) {\n        for (let i = 0; i < augmentedEditCanvasPoints.length; i++) {\n            const canvasPoint = augmentedEditCanvasPoints[i];\n            pointsToRender.push([canvasPoint[0], canvasPoint[1]]);\n        }\n    }\n    else {\n        for (let i = augmentedEditCanvasPoints.length - 1; i >= 0; i--) {\n            const canvasPoint = augmentedEditCanvasPoints[i];\n            pointsToRender.push([canvasPoint[0], canvasPoint[1]]);\n        }\n    }\n    for (let i = highIndex; i < prevCanvasPoints.length; i++) {\n        const canvasPoint = prevCanvasPoints[i];\n        pointsToRender.push([canvasPoint[0], canvasPoint[1]]);\n    }\n    return pointsToRender;\n}\nfunction finishEditOpenOnSecondCrossing(evt) {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n    const enabledElement = getEnabledElement(element);\n    const { viewport, renderingEngine } = enabledElement;\n    const { annotation, viewportIdsToRender } = this.commonData;\n    const { fusedCanvasPoints, editCanvasPoints } = this.editData;\n    const worldPoints = fusedCanvasPoints.map((canvasPoint) => viewport.canvasToWorld(canvasPoint));\n    annotation.data.polyline = worldPoints;\n    annotation.data.isOpenContour = true;\n    annotation.data.handles.points = [\n        worldPoints[0],\n        worldPoints[worldPoints.length - 1],\n    ];\n    this.triggerAnnotationModified(annotation, enabledElement);\n    const lastEditCanvasPoint = editCanvasPoints.pop();\n    this.editData = {\n        prevCanvasPoints: fusedCanvasPoints,\n        editCanvasPoints: [lastEditCanvasPoint],\n        startCrossingIndex: undefined,\n        editIndex: 0,\n    };\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n}\nfunction mouseUpOpenContourEditCallback(evt) {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n    this.completeOpenContourEdit(element);\n}\nfunction completeOpenContourEdit(element) {\n    const enabledElement = getEnabledElement(element);\n    const { viewport, renderingEngine } = enabledElement;\n    const { annotation, viewportIdsToRender } = this.commonData;\n    const { fusedCanvasPoints, prevCanvasPoints } = this.editData;\n    if (fusedCanvasPoints) {\n        const updatedPoints = shouldInterpolate(this.configuration)\n            ? getInterpolatedPoints(this.configuration, fusedCanvasPoints, prevCanvasPoints)\n            : fusedCanvasPoints;\n        const worldPoints = updatedPoints.map((canvasPoint) => viewport.canvasToWorld(canvasPoint));\n        annotation.data.polyline = worldPoints;\n        annotation.data.isOpenContour = true;\n        annotation.data.handles.points = [\n            worldPoints[0],\n            worldPoints[worldPoints.length - 1],\n        ];\n        if (annotation.data.isOpenUShapeContour) {\n            annotation.data.openUShapeContourVectorToPeak =\n                findOpenUShapedContourVectorToPeak(fusedCanvasPoints, viewport);\n        }\n        this.triggerAnnotationModified(annotation, enabledElement);\n    }\n    this.isEditingOpen = false;\n    this.editData = undefined;\n    this.commonData = undefined;\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n    this.deactivateOpenContourEdit(element);\n}\nfunction cancelOpenContourEdit(element) {\n    this.completeOpenContourEdit(element);\n}\nfunction registerOpenContourEditLoop(toolInstance) {\n    toolInstance.activateOpenContourEdit =\n        activateOpenContourEdit.bind(toolInstance);\n    toolInstance.deactivateOpenContourEdit =\n        deactivateOpenContourEdit.bind(toolInstance);\n    toolInstance.mouseDragOpenContourEditCallback =\n        mouseDragOpenContourEditCallback.bind(toolInstance);\n    toolInstance.mouseUpOpenContourEditCallback =\n        mouseUpOpenContourEditCallback.bind(toolInstance);\n    toolInstance.fuseEditPointsWithOpenContour =\n        fuseEditPointsWithOpenContour.bind(toolInstance);\n    toolInstance.finishEditOpenOnSecondCrossing =\n        finishEditOpenOnSecondCrossing.bind(toolInstance);\n    toolInstance.checkIfShouldOverwriteAnEnd =\n        checkIfShouldOverwriteAnEnd.bind(toolInstance);\n    toolInstance.fuseEditPointsForOpenContourEndEdit =\n        fuseEditPointsForOpenContourEndEdit.bind(toolInstance);\n    toolInstance.openContourEditOverwriteEnd =\n        openContourEditOverwriteEnd.bind(toolInstance);\n    toolInstance.cancelOpenContourEdit = cancelOpenContourEdit.bind(toolInstance);\n    toolInstance.completeOpenContourEdit =\n        completeOpenContourEdit.bind(toolInstance);\n}\nexport default registerOpenContourEditLoop;\n//# sourceMappingURL=openContourEditLoop.js.map","import { getEnabledElement } from '@cornerstonejs/core';\nimport { state } from '../../../store';\nimport { Events } from '../../../enums';\nimport { hideElementCursor } from '../../../cursors/elementCursor';\nimport { polyline } from '../../../utilities/math';\nconst { getSubPixelSpacingAndXYDirections } = polyline;\nfunction activateOpenContourEndEdit(evt, annotation, viewportIdsToRender, handle) {\n    this.isDrawing = true;\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n    const { spacing, xDir, yDir } = getSubPixelSpacingAndXYDirections(viewport, this.configuration.subPixelResolution);\n    const canvasPoints = annotation.data.polyline.map(viewport.worldToCanvas);\n    const handleIndexGrabbed = annotation.data.handles.activeHandleIndex;\n    if (handleIndexGrabbed === 0) {\n        canvasPoints.reverse();\n    }\n    let movingTextBox = false;\n    if (handle.worldPosition) {\n        movingTextBox = true;\n    }\n    this.drawData = {\n        canvasPoints: canvasPoints,\n        polylineIndex: canvasPoints.length - 1,\n    };\n    this.commonData = {\n        annotation,\n        viewportIdsToRender,\n        spacing,\n        xDir,\n        yDir,\n        movingTextBox,\n    };\n    state.isInteractingWithTool = true;\n    element.addEventListener(Events.MOUSE_UP, this.mouseUpDrawCallback);\n    element.addEventListener(Events.MOUSE_DRAG, this.mouseDragDrawCallback);\n    element.addEventListener(Events.MOUSE_CLICK, this.mouseUpDrawCallback);\n    element.addEventListener(Events.TOUCH_END, this.mouseUpDrawCallback);\n    element.addEventListener(Events.TOUCH_DRAG, this.mouseDragDrawCallback);\n    element.addEventListener(Events.TOUCH_TAP, this.mouseUpDrawCallback);\n    hideElementCursor(element);\n}\nfunction registerOpenContourEndEditLoop(toolInstance) {\n    toolInstance.activateOpenContourEndEdit =\n        activateOpenContourEndEdit.bind(toolInstance);\n}\nexport default registerOpenContourEndEditLoop;\n//# sourceMappingURL=openContourEndEditLoop.js.map","import { drawHandles as drawHandlesSvg, drawPolyline as drawPolylineSvg, } from '../../../drawingSvg';\nimport { polyline } from '../../../utilities/math';\nimport { findOpenUShapedContourVectorToPeakOnRender } from './findOpenUShapedContourVectorToPeak';\nconst { pointsAreWithinCloseContourProximity } = polyline;\nfunction _getRenderingOptions(enabledElement, annotation) {\n    const styleSpecifier = {\n        toolGroupId: this.toolGroupId,\n        toolName: this.getToolName(),\n        viewportId: enabledElement.viewport.id,\n        annotationUID: annotation.annotationUID,\n    };\n    const lineWidth = this.getStyle('lineWidth', styleSpecifier, annotation);\n    const lineDash = this.getStyle('lineDash', styleSpecifier, annotation);\n    const color = this.getStyle('color', styleSpecifier, annotation);\n    const isOpenContour = annotation.data.isOpenContour;\n    const options = {\n        color: color === undefined ? undefined : color,\n        width: lineWidth === undefined ? undefined : lineWidth,\n        lineDash: lineDash === undefined ? undefined : lineDash,\n        connectLastToFirst: !isOpenContour,\n    };\n    return options;\n}\nfunction renderContour(enabledElement, svgDrawingHelper, annotation) {\n    if (!enabledElement?.viewport?.getImageData()) {\n        return;\n    }\n    if (annotation.data.isOpenContour) {\n        if (annotation.data.isOpenUShapeContour) {\n            calculateUShapeContourVectorToPeakIfNotPresent(enabledElement, annotation);\n            this.renderOpenUShapedContour(enabledElement, svgDrawingHelper, annotation);\n        }\n        else {\n            this.renderOpenContour(enabledElement, svgDrawingHelper, annotation);\n        }\n    }\n    else {\n        this.renderClosedContour(enabledElement, svgDrawingHelper, annotation);\n    }\n}\nfunction calculateUShapeContourVectorToPeakIfNotPresent(enabledElement, annotation) {\n    if (!annotation.data.openUShapeContourVectorToPeak) {\n        annotation.data.openUShapeContourVectorToPeak =\n            findOpenUShapedContourVectorToPeakOnRender(enabledElement, annotation);\n    }\n}\nfunction renderClosedContour(enabledElement, svgDrawingHelper, annotation) {\n    const { viewport } = enabledElement;\n    const options = this._getRenderingOptions(enabledElement, annotation);\n    const canvasPoints = annotation.data.polyline.map((worldPos) => viewport.worldToCanvas(worldPos));\n    const polylineUID = '1';\n    drawPolylineSvg(svgDrawingHelper, annotation.annotationUID, polylineUID, canvasPoints, options);\n}\nfunction renderOpenContour(enabledElement, svgDrawingHelper, annotation) {\n    const { viewport } = enabledElement;\n    const options = this._getRenderingOptions(enabledElement, annotation);\n    const canvasPoints = annotation.data.polyline.map((worldPos) => viewport.worldToCanvas(worldPos));\n    const polylineUID = '1';\n    drawPolylineSvg(svgDrawingHelper, annotation.annotationUID, polylineUID, canvasPoints, options);\n    const activeHandleIndex = annotation.data.handles.activeHandleIndex;\n    if (this.configuration.alwaysRenderOpenContourHandles?.enabled === true) {\n        const radius = this.configuration.alwaysRenderOpenContourHandles.radius;\n        const handleGroupUID = '0';\n        const handlePoints = [\n            canvasPoints[0],\n            canvasPoints[canvasPoints.length - 1],\n        ];\n        if (activeHandleIndex === 0) {\n            handlePoints.shift();\n        }\n        else if (activeHandleIndex === 1) {\n            handlePoints.pop();\n        }\n        drawHandlesSvg(svgDrawingHelper, annotation.annotationUID, handleGroupUID, handlePoints, {\n            color: options.color,\n            handleRadius: radius,\n        });\n    }\n    if (activeHandleIndex !== null) {\n        const handleGroupUID = '1';\n        const indexOfCanvasPoints = activeHandleIndex === 0 ? 0 : canvasPoints.length - 1;\n        const handlePoint = canvasPoints[indexOfCanvasPoints];\n        drawHandlesSvg(svgDrawingHelper, annotation.annotationUID, handleGroupUID, [handlePoint], { color: options.color });\n    }\n}\nfunction renderOpenUShapedContour(enabledElement, svgDrawingHelper, annotation) {\n    const { viewport } = enabledElement;\n    const { polyline, openUShapeContourVectorToPeak } = annotation.data;\n    this.renderOpenContour(enabledElement, svgDrawingHelper, annotation);\n    if (!openUShapeContourVectorToPeak) {\n        return;\n    }\n    const firstCanvasPoint = viewport.worldToCanvas(polyline[0]);\n    const lastCanvasPoint = viewport.worldToCanvas(polyline[polyline.length - 1]);\n    const openUShapeContourVectorToPeakCanvas = [\n        viewport.worldToCanvas(openUShapeContourVectorToPeak[0]),\n        viewport.worldToCanvas(openUShapeContourVectorToPeak[1]),\n    ];\n    const options = this._getRenderingOptions(enabledElement, annotation);\n    drawPolylineSvg(svgDrawingHelper, annotation.annotationUID, 'first-to-last', [firstCanvasPoint, lastCanvasPoint], {\n        color: options.color,\n        width: options.width,\n        connectLastToFirst: false,\n        lineDash: '2,2',\n    });\n    drawPolylineSvg(svgDrawingHelper, annotation.annotationUID, 'midpoint-to-open-contour', [\n        openUShapeContourVectorToPeakCanvas[0],\n        openUShapeContourVectorToPeakCanvas[1],\n    ], {\n        color: options.color,\n        width: options.width,\n        connectLastToFirst: false,\n        lineDash: '2,2',\n    });\n}\nfunction renderContourBeingDrawn(enabledElement, svgDrawingHelper, annotation) {\n    const options = this._getRenderingOptions(enabledElement, annotation);\n    const { allowOpenContours } = this.configuration;\n    const { canvasPoints } = this.drawData;\n    options.connectLastToFirst = false;\n    drawPolylineSvg(svgDrawingHelper, annotation.annotationUID, '1', canvasPoints, options);\n    if (allowOpenContours) {\n        const firstPoint = canvasPoints[0];\n        const lastPoint = canvasPoints[canvasPoints.length - 1];\n        if (pointsAreWithinCloseContourProximity(firstPoint, lastPoint, this.configuration.closeContourProximity)) {\n            drawPolylineSvg(svgDrawingHelper, annotation.annotationUID, '2', [lastPoint, firstPoint], options);\n        }\n        else {\n            const handleGroupUID = '0';\n            drawHandlesSvg(svgDrawingHelper, annotation.annotationUID, handleGroupUID, [firstPoint], { color: options.color, handleRadius: 2 });\n        }\n    }\n}\nfunction renderClosedContourBeingEdited(enabledElement, svgDrawingHelper, annotation) {\n    const { fusedCanvasPoints } = this.editData;\n    if (fusedCanvasPoints === undefined) {\n        this.renderClosedContour(enabledElement, svgDrawingHelper, annotation);\n        return;\n    }\n    const options = this._getRenderingOptions(enabledElement, annotation);\n    const polylineUIDToRender = 'preview-1';\n    drawPolylineSvg(svgDrawingHelper, annotation.annotationUID, polylineUIDToRender, fusedCanvasPoints, options);\n}\nfunction renderOpenContourBeingEdited(enabledElement, svgDrawingHelper, annotation) {\n    const { fusedCanvasPoints } = this.editData;\n    if (fusedCanvasPoints === undefined) {\n        this.renderOpenContour(enabledElement, svgDrawingHelper, annotation);\n        return;\n    }\n    const options = this._getRenderingOptions(enabledElement, annotation);\n    const polylineUIDToRender = 'preview-1';\n    drawPolylineSvg(svgDrawingHelper, annotation.annotationUID, polylineUIDToRender, fusedCanvasPoints, options);\n}\nfunction registerRenderMethods(toolInstance) {\n    toolInstance.renderContour = renderContour.bind(toolInstance);\n    toolInstance.renderClosedContour = renderClosedContour.bind(toolInstance);\n    toolInstance.renderOpenContour = renderOpenContour.bind(toolInstance);\n    toolInstance.renderOpenUShapedContour =\n        renderOpenUShapedContour.bind(toolInstance);\n    toolInstance.renderContourBeingDrawn =\n        renderContourBeingDrawn.bind(toolInstance);\n    toolInstance.renderClosedContourBeingEdited =\n        renderClosedContourBeingEdited.bind(toolInstance);\n    toolInstance.renderOpenContourBeingEdited =\n        renderOpenContourBeingEdited.bind(toolInstance);\n    toolInstance._getRenderingOptions = _getRenderingOptions.bind(toolInstance);\n}\nexport default registerRenderMethods;\n//# sourceMappingURL=renderMethods.js.map","import { CONSTANTS, getEnabledElement, triggerEvent, eventTarget, StackViewport, VolumeViewport, utilities as csUtils, } from '@cornerstonejs/core';\nimport { vec3 } from 'gl-matrix';\nimport { Events } from '../../enums';\nimport { AnnotationTool } from '../base';\nimport { addAnnotation, getAnnotations, } from '../../stateManagement/annotation/annotationState';\nimport { polyline } from '../../utilities/math';\nimport { filterAnnotationsForDisplay } from '../../utilities/planar';\nimport throttle from '../../utilities/throttle';\nimport { getViewportIdsWithToolToRender } from '../../utilities/viewportFilters';\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\nimport registerDrawLoop from './planarFreehandROITool/drawLoop';\nimport registerEditLoopCommon from './planarFreehandROITool/editLoopCommon';\nimport registerClosedContourEditLoop from './planarFreehandROITool/closedContourEditLoop';\nimport registerOpenContourEditLoop from './planarFreehandROITool/openContourEditLoop';\nimport registerOpenContourEndEditLoop from './planarFreehandROITool/openContourEndEditLoop';\nimport registerRenderMethods from './planarFreehandROITool/renderMethods';\nimport { drawLinkedTextBox } from '../../drawingSvg';\nimport { getTextBoxCoordsCanvas } from '../../utilities/drawing';\nimport { getIntersectionCoordinatesWithPolyline } from '../../utilities/math/polyline/getIntersectionWithPolyline';\nimport pointInShapeCallback from '../../utilities/pointInShapeCallback';\nimport { isViewportPreScaled } from '../../utilities/viewport/isViewportPreScaled';\nimport { getModalityUnit } from '../../utilities/getModalityUnit';\nconst { pointCanProjectOnLine } = polyline;\nconst { EPSILON } = CONSTANTS;\nconst PARALLEL_THRESHOLD = 1 - EPSILON;\nclass PlanarFreehandROITool extends AnnotationTool {\n    constructor(toolProps = {}, defaultToolProps = {\n        supportedInteractionTypes: ['Mouse', 'Touch'],\n        configuration: {\n            shadow: true,\n            preventHandleOutsideImage: false,\n            alwaysRenderOpenContourHandles: {\n                enabled: false,\n                radius: 2,\n            },\n            allowOpenContours: true,\n            closeContourProximity: 10,\n            checkCanvasEditFallbackProximity: 6,\n            subPixelResolution: 4,\n            interpolation: {\n                interpolateOnAdd: false,\n                interpolateOnEdit: false,\n                knotsRatioPercentageOnAdd: 40,\n                knotsRatioPercentageOnEdit: 40,\n            },\n            calculateStats: false,\n        },\n    }) {\n        super(toolProps, defaultToolProps);\n        this.isDrawing = false;\n        this.isEditingClosed = false;\n        this.isEditingOpen = false;\n        this.addNewAnnotation = (evt) => {\n            const eventDetail = evt.detail;\n            const { currentPoints, element } = eventDetail;\n            const worldPos = currentPoints.world;\n            const enabledElement = getEnabledElement(element);\n            const { viewport, renderingEngine } = enabledElement;\n            const camera = viewport.getCamera();\n            const { viewPlaneNormal, viewUp } = camera;\n            const referencedImageId = this.getReferencedImageId(viewport, worldPos, viewPlaneNormal, viewUp);\n            const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n            const FrameOfReferenceUID = viewport.getFrameOfReferenceUID();\n            const annotation = {\n                highlighted: true,\n                invalidated: true,\n                metadata: {\n                    viewPlaneNormal: [...viewPlaneNormal],\n                    viewUp: [...viewUp],\n                    FrameOfReferenceUID,\n                    referencedImageId,\n                    toolName: this.getToolName(),\n                },\n                data: {\n                    handles: {\n                        points: [],\n                        activeHandleIndex: null,\n                        textBox: {\n                            hasMoved: false,\n                            worldPosition: [0, 0, 0],\n                            worldBoundingBox: {\n                                topLeft: [0, 0, 0],\n                                topRight: [0, 0, 0],\n                                bottomLeft: [0, 0, 0],\n                                bottomRight: [0, 0, 0],\n                            },\n                        },\n                    },\n                    polyline: [[...worldPos]],\n                    label: '',\n                    cachedStats: {},\n                },\n            };\n            addAnnotation(annotation, element);\n            this.activateDraw(evt, annotation, viewportIdsToRender);\n            evt.preventDefault();\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n            return annotation;\n        };\n        this.handleSelectedCallback = (evt, annotation, handle) => {\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n            this.activateOpenContourEndEdit(evt, annotation, viewportIdsToRender, handle);\n        };\n        this.toolSelectedCallback = (evt, annotation) => {\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n            if (annotation.data.isOpenContour) {\n                this.activateOpenContourEdit(evt, annotation, viewportIdsToRender);\n            }\n            else {\n                this.activateClosedContourEdit(evt, annotation, viewportIdsToRender);\n            }\n        };\n        this.isPointNearTool = (element, annotation, canvasCoords, proximity) => {\n            const enabledElement = getEnabledElement(element);\n            const { viewport } = enabledElement;\n            const points = annotation.data.polyline;\n            let previousPoint = viewport.worldToCanvas(points[0]);\n            for (let i = 1; i < points.length; i++) {\n                const p1 = previousPoint;\n                const p2 = viewport.worldToCanvas(points[i]);\n                const distance = pointCanProjectOnLine(canvasCoords, p1, p2, proximity);\n                if (distance === true) {\n                    return true;\n                }\n                previousPoint = p2;\n            }\n            if (annotation.data.isOpenContour) {\n                return false;\n            }\n            const pStart = viewport.worldToCanvas(points[0]);\n            const pEnd = viewport.worldToCanvas(points[points.length - 1]);\n            const distance = pointCanProjectOnLine(canvasCoords, pStart, pEnd, proximity);\n            if (distance === true) {\n                return true;\n            }\n            return false;\n        };\n        this.cancel = (element) => {\n            const isDrawing = this.isDrawing;\n            const isEditingOpen = this.isEditingOpen;\n            const isEditingClosed = this.isEditingClosed;\n            if (isDrawing) {\n                this.cancelDrawing(element);\n            }\n            else if (isEditingOpen) {\n                this.cancelOpenContourEdit(element);\n            }\n            else if (isEditingClosed) {\n                this.cancelClosedContourEdit(element);\n            }\n        };\n        this.triggerAnnotationModified = (annotation, enabledElement) => {\n            const { viewportId, renderingEngineId } = enabledElement;\n            const eventType = Events.ANNOTATION_MODIFIED;\n            const eventDetail = {\n                annotation,\n                viewportId,\n                renderingEngineId,\n            };\n            triggerEvent(eventTarget, eventType, eventDetail);\n        };\n        this.triggerAnnotationCompleted = (annotation) => {\n            const eventType = Events.ANNOTATION_COMPLETED;\n            const eventDetail = {\n                annotation,\n            };\n            triggerEvent(eventTarget, eventType, eventDetail);\n        };\n        this.renderAnnotation = (enabledElement, svgDrawingHelper) => {\n            let renderStatus = false;\n            const { viewport, renderingEngine } = enabledElement;\n            const { element } = viewport;\n            const targetId = this.getTargetId(viewport);\n            let annotations = (getAnnotations(this.getToolName(), element));\n            if (!annotations?.length) {\n                return renderStatus;\n            }\n            annotations = this.filterInteractableAnnotationsForElement(element, annotations);\n            if (!annotations?.length) {\n                return renderStatus;\n            }\n            const isDrawing = this.isDrawing;\n            const isEditingOpen = this.isEditingOpen;\n            const isEditingClosed = this.isEditingClosed;\n            if (!(isDrawing || isEditingOpen || isEditingClosed)) {\n                annotations.forEach((annotation) => {\n                    this.renderContour(enabledElement, svgDrawingHelper, annotation);\n                });\n            }\n            else {\n                const activeAnnotationUID = this.commonData.annotation.annotationUID;\n                annotations.forEach((annotation) => {\n                    if (annotation.annotationUID === activeAnnotationUID) {\n                        if (isDrawing) {\n                            this.renderContourBeingDrawn(enabledElement, svgDrawingHelper, annotation);\n                        }\n                        else if (isEditingClosed) {\n                            this.renderClosedContourBeingEdited(enabledElement, svgDrawingHelper, annotation);\n                        }\n                        else if (isEditingOpen) {\n                            this.renderOpenContourBeingEdited(enabledElement, svgDrawingHelper, annotation);\n                        }\n                        else {\n                            throw new Error(`Unknown ${this.getToolName()} annotation rendering state`);\n                        }\n                    }\n                    else {\n                        this.renderContour(enabledElement, svgDrawingHelper, annotation);\n                    }\n                });\n                renderStatus = true;\n            }\n            if (!this.configuration.calculateStats)\n                return;\n            annotations.forEach((annotation) => {\n                const activeAnnotationUID = this.commonData?.annotation.annotationUID;\n                if (annotation.annotationUID === activeAnnotationUID &&\n                    !this.commonData?.movingTextBox)\n                    return;\n                if (!this.commonData?.movingTextBox) {\n                    const { data } = annotation;\n                    if (!data.cachedStats[targetId] ||\n                        data.cachedStats[targetId].areaUnit === undefined) {\n                        data.cachedStats[targetId] = {\n                            Modality: null,\n                            area: null,\n                            max: null,\n                            mean: null,\n                            stdDev: null,\n                            areaUnit: null,\n                        };\n                        this._calculateCachedStats(annotation, viewport, renderingEngine, enabledElement);\n                    }\n                    else if (annotation.invalidated) {\n                        this._throttledCalculateCachedStats(annotation, viewport, renderingEngine, enabledElement);\n                    }\n                }\n                this._renderStats(annotation, viewport, enabledElement, svgDrawingHelper);\n            });\n            return renderStatus;\n        };\n        this._calculateCachedStats = (annotation, viewport, renderingEngine, enabledElement) => {\n            const data = annotation.data;\n            const { cachedStats, polyline: points } = data;\n            const targetIds = Object.keys(cachedStats);\n            for (let i = 0; i < targetIds.length; i++) {\n                const targetId = targetIds[i];\n                const image = this.getTargetIdImage(targetId, renderingEngine);\n                if (!image) {\n                    continue;\n                }\n                const { imageData, metadata, hasPixelSpacing } = image;\n                const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n                const area = polyline.calculateAreaOfPoints(canvasCoordinates);\n                const worldPosIndex = csUtils.transformWorldToIndex(imageData, points[0]);\n                worldPosIndex[0] = Math.floor(worldPosIndex[0]);\n                worldPosIndex[1] = Math.floor(worldPosIndex[1]);\n                worldPosIndex[2] = Math.floor(worldPosIndex[2]);\n                let iMin = worldPosIndex[0];\n                let iMax = worldPosIndex[0];\n                let jMin = worldPosIndex[1];\n                let jMax = worldPosIndex[1];\n                let kMin = worldPosIndex[2];\n                let kMax = worldPosIndex[2];\n                for (let j = 1; j < points.length; j++) {\n                    const worldPosIndex = csUtils.transformWorldToIndex(imageData, points[j]);\n                    worldPosIndex[0] = Math.floor(worldPosIndex[0]);\n                    worldPosIndex[1] = Math.floor(worldPosIndex[1]);\n                    worldPosIndex[2] = Math.floor(worldPosIndex[2]);\n                    iMin = Math.min(iMin, worldPosIndex[0]);\n                    iMax = Math.max(iMax, worldPosIndex[0]);\n                    jMin = Math.min(jMin, worldPosIndex[1]);\n                    jMax = Math.max(jMax, worldPosIndex[1]);\n                    kMin = Math.min(kMin, worldPosIndex[2]);\n                    kMax = Math.max(kMax, worldPosIndex[2]);\n                }\n                const iDelta = 0.01 * (iMax - iMin);\n                const jDelta = 0.01 * (jMax - jMin);\n                const kDelta = 0.01 * (kMax - kMin);\n                iMin = Math.floor(iMin - iDelta);\n                iMax = Math.ceil(iMax + iDelta);\n                jMin = Math.floor(jMin - jDelta);\n                jMax = Math.ceil(jMax + jDelta);\n                kMin = Math.floor(kMin - kDelta);\n                kMax = Math.ceil(kMax + kDelta);\n                const boundsIJK = [\n                    [iMin, iMax],\n                    [jMin, jMax],\n                    [kMin, kMax],\n                ];\n                const worldPosEnd = imageData.indexToWorld([iMax, jMax, kMax]);\n                const canvasPosEnd = viewport.worldToCanvas(worldPosEnd);\n                let count = 0;\n                let sum = 0;\n                let sumSquares = 0;\n                let max = -Infinity;\n                const statCalculator = ({ value: newValue }) => {\n                    if (newValue > max) {\n                        max = newValue;\n                    }\n                    sum += newValue;\n                    sumSquares += newValue ** 2;\n                    count += 1;\n                };\n                let curRow = 0;\n                let intersections = [];\n                let intersectionCounter = 0;\n                pointInShapeCallback(imageData, (pointLPS, pointIJK) => {\n                    let result = true;\n                    const point = viewport.worldToCanvas(pointLPS);\n                    if (point[1] != curRow) {\n                        intersectionCounter = 0;\n                        curRow = point[1];\n                        intersections = getIntersectionCoordinatesWithPolyline(canvasCoordinates, point, [canvasPosEnd[0], point[1]]);\n                        intersections.sort((function (index) {\n                            return function (a, b) {\n                                return a[index] === b[index]\n                                    ? 0\n                                    : a[index] < b[index]\n                                        ? -1\n                                        : 1;\n                            };\n                        })(0));\n                    }\n                    if (intersections.length && point[0] > intersections[0][0]) {\n                        intersections.shift();\n                        intersectionCounter++;\n                    }\n                    if (intersectionCounter % 2 === 0) {\n                        result = false;\n                    }\n                    return result;\n                }, statCalculator, boundsIJK);\n                const mean = sum / count;\n                let stdDev = sumSquares / count - mean ** 2;\n                stdDev = Math.sqrt(stdDev);\n                cachedStats[targetId] = {\n                    Modality: metadata.Modality,\n                    area,\n                    mean,\n                    max,\n                    stdDev,\n                    areaUnit: hasPixelSpacing ? 'mm' : 'px',\n                };\n            }\n            annotation.invalidated = false;\n            return cachedStats;\n        };\n        this._renderStats = (annotation, viewport, enabledElement, svgDrawingHelper) => {\n            const data = annotation.data;\n            const targetId = this.getTargetId(viewport);\n            const isPreScaled = isViewportPreScaled(viewport, targetId);\n            const isSuvScaled = this.isSuvScaled(viewport, targetId, annotation.metadata.referencedImageId);\n            const textLines = this._getTextLines(data, targetId, isPreScaled, isSuvScaled);\n            if (!textLines || textLines.length === 0)\n                return;\n            const canvasCoordinates = data.polyline.map((p) => viewport.worldToCanvas(p));\n            if (!data.handles.textBox.hasMoved) {\n                const canvasTextBoxCoords = getTextBoxCoordsCanvas(canvasCoordinates);\n                data.handles.textBox.worldPosition =\n                    viewport.canvasToWorld(canvasTextBoxCoords);\n            }\n            const textBoxPosition = viewport.worldToCanvas(data.handles.textBox.worldPosition);\n            const styleSpecifier = {\n                toolGroupId: this.toolGroupId,\n                toolName: this.getToolName(),\n                viewportId: enabledElement.viewport.id,\n            };\n            const textBoxUID = '1';\n            const boundingBox = drawLinkedTextBox(svgDrawingHelper, annotation.annotationUID ?? '', textBoxUID, textLines, textBoxPosition, canvasCoordinates, {}, this.getLinkedTextBoxStyle(styleSpecifier, annotation));\n            const { x: left, y: top, width, height } = boundingBox;\n            data.handles.textBox.worldBoundingBox = {\n                topLeft: viewport.canvasToWorld([left, top]),\n                topRight: viewport.canvasToWorld([left + width, top]),\n                bottomLeft: viewport.canvasToWorld([left, top + height]),\n                bottomRight: viewport.canvasToWorld([left + width, top + height]),\n            };\n        };\n        this._getTextLines = (data, targetId, isPreScaled, isSuvScaled) => {\n            const cachedVolumeStats = data.cachedStats[targetId];\n            const { area, mean, stdDev, max, isEmptyArea, Modality, areaUnit } = cachedVolumeStats;\n            const textLines = [];\n            const unit = getModalityUnit(Modality, isPreScaled, isSuvScaled);\n            if (area) {\n                const areaLine = isEmptyArea\n                    ? `Area: Oblique not supported`\n                    : `Area: ${area.toFixed(2)} ${areaUnit}\\xb2`;\n                textLines.push(areaLine);\n            }\n            if (mean) {\n                textLines.push(`Mean: ${mean.toFixed(2)} ${unit}`);\n            }\n            if (max) {\n                textLines.push(`Max: ${max.toFixed(2)} ${unit}`);\n            }\n            if (stdDev) {\n                textLines.push(`Std Dev: ${stdDev.toFixed(2)} ${unit}`);\n            }\n            return textLines;\n        };\n        registerDrawLoop(this);\n        registerEditLoopCommon(this);\n        registerClosedContourEditLoop(this);\n        registerOpenContourEditLoop(this);\n        registerOpenContourEndEditLoop(this);\n        registerRenderMethods(this);\n        this._throttledCalculateCachedStats = throttle(this._calculateCachedStats, 100, { trailing: true });\n    }\n    filterInteractableAnnotationsForElement(element, annotations) {\n        if (!annotations || !annotations.length) {\n            return;\n        }\n        const enabledElement = getEnabledElement(element);\n        const { viewport } = enabledElement;\n        let annotationsToDisplay;\n        if (viewport instanceof StackViewport) {\n            annotationsToDisplay = filterAnnotationsForDisplay(viewport, annotations);\n        }\n        else if (viewport instanceof VolumeViewport) {\n            const camera = viewport.getCamera();\n            const { spacingInNormalDirection } = csUtils.getTargetVolumeAndSpacingInNormalDir(viewport, camera);\n            annotationsToDisplay = this.filterAnnotationsWithinSlice(annotations, camera, spacingInNormalDirection);\n        }\n        else {\n            throw new Error(`Viewport Type ${viewport.type} not supported`);\n        }\n        return annotationsToDisplay;\n    }\n    filterAnnotationsWithinSlice(annotations, camera, spacingInNormalDirection) {\n        const { viewPlaneNormal } = camera;\n        const annotationsWithParallelNormals = annotations.filter((td) => {\n            const annotationViewPlaneNormal = td.metadata.viewPlaneNormal;\n            const isParallel = Math.abs(vec3.dot(viewPlaneNormal, annotationViewPlaneNormal)) >\n                PARALLEL_THRESHOLD;\n            return annotationViewPlaneNormal && isParallel;\n        });\n        if (!annotationsWithParallelNormals.length) {\n            return [];\n        }\n        const halfSpacingInNormalDirection = spacingInNormalDirection / 2;\n        const { focalPoint } = camera;\n        const annotationsWithinSlice = [];\n        for (const annotation of annotationsWithParallelNormals) {\n            const data = annotation.data;\n            const point = data.polyline[0];\n            if (!annotation.isVisible) {\n                continue;\n            }\n            const dir = vec3.create();\n            vec3.sub(dir, focalPoint, point);\n            const dot = vec3.dot(dir, viewPlaneNormal);\n            if (Math.abs(dot) < halfSpacingInNormalDirection) {\n                annotationsWithinSlice.push(annotation);\n            }\n        }\n        return annotationsWithinSlice;\n    }\n}\nPlanarFreehandROITool.toolName = 'PlanarFreehandROI';\nexport default PlanarFreehandROITool;\n//# sourceMappingURL=PlanarFreehandROITool.js.map","import { Events } from '../../enums';\nimport { getEnabledElement, triggerEvent, eventTarget, utilities as csUtils, } from '@cornerstonejs/core';\nimport { AnnotationTool } from '../base';\nimport { addAnnotation, getAnnotations, removeAnnotation, } from '../../stateManagement/annotation/annotationState';\nimport { isAnnotationLocked } from '../../stateManagement/annotation/annotationLocking';\nimport * as lineSegment from '../../utilities/math/line';\nimport { drawHandles as drawHandlesSvg, drawArrow as drawArrowSvg, drawLinkedTextBox as drawLinkedTextBoxSvg, } from '../../drawingSvg';\nimport { state } from '../../store';\nimport { getViewportIdsWithToolToRender } from '../../utilities/viewportFilters';\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\nimport { resetElementCursor, hideElementCursor, } from '../../cursors/elementCursor';\nclass ArrowAnnotateTool extends AnnotationTool {\n    constructor(toolProps = {}, defaultToolProps = {\n        supportedInteractionTypes: ['Mouse', 'Touch'],\n        configuration: {\n            shadow: true,\n            getTextCallback,\n            changeTextCallback,\n            preventHandleOutsideImage: false,\n            arrowFirst: true,\n        },\n    }) {\n        super(toolProps, defaultToolProps);\n        this.addNewAnnotation = (evt) => {\n            const eventDetail = evt.detail;\n            const { currentPoints, element } = eventDetail;\n            const worldPos = currentPoints.world;\n            const enabledElement = getEnabledElement(element);\n            const { viewport, renderingEngine } = enabledElement;\n            hideElementCursor(element);\n            this.isDrawing = true;\n            const camera = viewport.getCamera();\n            const { viewPlaneNormal, viewUp } = camera;\n            const referencedImageId = this.getReferencedImageId(viewport, worldPos, viewPlaneNormal, viewUp);\n            const { arrowFirst } = this.configuration;\n            const FrameOfReferenceUID = viewport.getFrameOfReferenceUID();\n            const annotation = {\n                highlighted: true,\n                invalidated: true,\n                metadata: {\n                    toolName: this.getToolName(),\n                    viewPlaneNormal: [...viewPlaneNormal],\n                    viewUp: [...viewUp],\n                    FrameOfReferenceUID,\n                    referencedImageId,\n                },\n                data: {\n                    text: '',\n                    handles: {\n                        points: [[...worldPos], [...worldPos]],\n                        activeHandleIndex: null,\n                        arrowFirst,\n                        textBox: {\n                            hasMoved: false,\n                            worldPosition: [0, 0, 0],\n                            worldBoundingBox: {\n                                topLeft: [0, 0, 0],\n                                topRight: [0, 0, 0],\n                                bottomLeft: [0, 0, 0],\n                                bottomRight: [0, 0, 0],\n                            },\n                        },\n                    },\n                    label: '',\n                },\n            };\n            addAnnotation(annotation, element);\n            const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n            this.editData = {\n                annotation,\n                viewportIdsToRender,\n                handleIndex: 1,\n                movingTextBox: false,\n                newAnnotation: true,\n                hasMoved: false,\n            };\n            this._activateDraw(element);\n            evt.preventDefault();\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n            return annotation;\n        };\n        this.isPointNearTool = (element, annotation, canvasCoords, proximity) => {\n            const enabledElement = getEnabledElement(element);\n            const { viewport } = enabledElement;\n            const { data } = annotation;\n            const [point1, point2] = data.handles.points;\n            const canvasPoint1 = viewport.worldToCanvas(point1);\n            const canvasPoint2 = viewport.worldToCanvas(point2);\n            const line = {\n                start: {\n                    x: canvasPoint1[0],\n                    y: canvasPoint1[1],\n                },\n                end: {\n                    x: canvasPoint2[0],\n                    y: canvasPoint2[1],\n                },\n            };\n            const distanceToPoint = lineSegment.distanceToPoint([line.start.x, line.start.y], [line.end.x, line.end.y], [canvasCoords[0], canvasCoords[1]]);\n            if (distanceToPoint <= proximity) {\n                return true;\n            }\n            return false;\n        };\n        this.toolSelectedCallback = (evt, annotation) => {\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            annotation.highlighted = true;\n            const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n            this.editData = {\n                annotation,\n                viewportIdsToRender,\n                movingTextBox: false,\n            };\n            this._activateModify(element);\n            hideElementCursor(element);\n            const enabledElement = getEnabledElement(element);\n            const { renderingEngine } = enabledElement;\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n            evt.preventDefault();\n        };\n        this._endCallback = (evt) => {\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            const { annotation, viewportIdsToRender, newAnnotation, hasMoved } = this.editData;\n            const { data } = annotation;\n            if (newAnnotation && !hasMoved) {\n                return;\n            }\n            data.handles.activeHandleIndex = null;\n            this._deactivateModify(element);\n            this._deactivateDraw(element);\n            resetElementCursor(element);\n            const enabledElement = getEnabledElement(element);\n            const { viewportId, renderingEngineId, renderingEngine } = enabledElement;\n            if (this.isHandleOutsideImage &&\n                this.configuration.preventHandleOutsideImage) {\n                removeAnnotation(annotation.annotationUID);\n            }\n            if (newAnnotation) {\n                this.configuration.getTextCallback((text) => {\n                    if (!text) {\n                        removeAnnotation(annotation.annotationUID);\n                        triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n                        this.editData = null;\n                        this.isDrawing = false;\n                        return;\n                    }\n                    annotation.data.text = text;\n                    const eventType = Events.ANNOTATION_COMPLETED;\n                    const eventDetail = {\n                        annotation,\n                    };\n                    triggerEvent(eventTarget, eventType, eventDetail);\n                    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n                });\n            }\n            else {\n                const eventType = Events.ANNOTATION_MODIFIED;\n                const eventDetail = {\n                    annotation,\n                    viewportId,\n                    renderingEngineId,\n                };\n                triggerEvent(eventTarget, eventType, eventDetail);\n            }\n            this.editData = null;\n            this.isDrawing = false;\n        };\n        this._dragCallback = (evt) => {\n            this.isDrawing = true;\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            const { annotation, viewportIdsToRender, handleIndex, movingTextBox } = this.editData;\n            const { data } = annotation;\n            if (movingTextBox) {\n                const { deltaPoints } = eventDetail;\n                const worldPosDelta = deltaPoints.world;\n                const { textBox } = data.handles;\n                const { worldPosition } = textBox;\n                worldPosition[0] += worldPosDelta[0];\n                worldPosition[1] += worldPosDelta[1];\n                worldPosition[2] += worldPosDelta[2];\n                textBox.hasMoved = true;\n            }\n            else if (handleIndex === undefined) {\n                const { deltaPoints } = eventDetail;\n                const worldPosDelta = deltaPoints.world;\n                const points = data.handles.points;\n                points.forEach((point) => {\n                    point[0] += worldPosDelta[0];\n                    point[1] += worldPosDelta[1];\n                    point[2] += worldPosDelta[2];\n                });\n                annotation.invalidated = true;\n            }\n            else {\n                const { currentPoints } = eventDetail;\n                const worldPos = currentPoints.world;\n                data.handles.points[handleIndex] = [...worldPos];\n                annotation.invalidated = true;\n            }\n            this.editData.hasMoved = true;\n            const enabledElement = getEnabledElement(element);\n            const { renderingEngine } = enabledElement;\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n        };\n        this.touchTapCallback = (evt) => {\n            if (evt.detail.taps == 2) {\n                this.doubleClickCallback(evt);\n            }\n        };\n        this.doubleClickCallback = (evt) => {\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            let annotations = getAnnotations(this.getToolName(), element);\n            annotations = this.filterInteractableAnnotationsForElement(element, annotations);\n            if (!annotations?.length) {\n                return;\n            }\n            const clickedAnnotation = annotations.find((annotation) => this.isPointNearTool(element, annotation, eventDetail.currentPoints.canvas, 6));\n            if (!clickedAnnotation) {\n                return;\n            }\n            const annotation = clickedAnnotation;\n            this.configuration.changeTextCallback(clickedAnnotation, evt.detail, this._doneChangingTextCallback.bind(this, element, annotation));\n            this.editData = null;\n            this.isDrawing = false;\n            evt.stopImmediatePropagation();\n            evt.preventDefault();\n        };\n        this.cancel = (element) => {\n            if (this.isDrawing) {\n                this.isDrawing = false;\n                this._deactivateDraw(element);\n                this._deactivateModify(element);\n                resetElementCursor(element);\n                const { annotation, viewportIdsToRender, newAnnotation } = this.editData;\n                const { data } = annotation;\n                annotation.highlighted = false;\n                data.handles.activeHandleIndex = null;\n                const enabledElement = getEnabledElement(element);\n                const { renderingEngine } = enabledElement;\n                triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n                if (newAnnotation) {\n                    const eventType = Events.ANNOTATION_COMPLETED;\n                    const eventDetail = {\n                        annotation,\n                    };\n                    triggerEvent(eventTarget, eventType, eventDetail);\n                }\n                this.editData = null;\n                return annotation.annotationUID;\n            }\n        };\n        this._activateModify = (element) => {\n            state.isInteractingWithTool = true;\n            element.addEventListener(Events.MOUSE_UP, this._endCallback);\n            element.addEventListener(Events.MOUSE_DRAG, this._dragCallback);\n            element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n            element.addEventListener(Events.TOUCH_TAP, this._endCallback);\n            element.addEventListener(Events.TOUCH_END, this._endCallback);\n            element.addEventListener(Events.TOUCH_DRAG, this._dragCallback);\n        };\n        this._deactivateModify = (element) => {\n            state.isInteractingWithTool = false;\n            element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n            element.removeEventListener(Events.MOUSE_DRAG, this._dragCallback);\n            element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n            element.removeEventListener(Events.TOUCH_TAP, this._endCallback);\n            element.removeEventListener(Events.TOUCH_DRAG, this._dragCallback);\n            element.removeEventListener(Events.TOUCH_END, this._endCallback);\n        };\n        this._activateDraw = (element) => {\n            state.isInteractingWithTool = true;\n            element.addEventListener(Events.MOUSE_UP, this._endCallback);\n            element.addEventListener(Events.MOUSE_DRAG, this._dragCallback);\n            element.addEventListener(Events.MOUSE_MOVE, this._dragCallback);\n            element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n            element.addEventListener(Events.TOUCH_TAP, this._endCallback);\n            element.addEventListener(Events.TOUCH_END, this._endCallback);\n            element.addEventListener(Events.TOUCH_DRAG, this._dragCallback);\n        };\n        this._deactivateDraw = (element) => {\n            state.isInteractingWithTool = false;\n            element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n            element.removeEventListener(Events.MOUSE_DRAG, this._dragCallback);\n            element.removeEventListener(Events.MOUSE_MOVE, this._dragCallback);\n            element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n            element.removeEventListener(Events.TOUCH_TAP, this._endCallback);\n            element.removeEventListener(Events.TOUCH_END, this._endCallback);\n            element.removeEventListener(Events.TOUCH_DRAG, this._dragCallback);\n        };\n        this.renderAnnotation = (enabledElement, svgDrawingHelper) => {\n            let renderStatus = false;\n            const { viewport } = enabledElement;\n            const { element } = viewport;\n            let annotations = getAnnotations(this.getToolName(), element);\n            if (!annotations?.length) {\n                return renderStatus;\n            }\n            annotations = this.filterInteractableAnnotationsForElement(element, annotations);\n            if (!annotations?.length) {\n                return renderStatus;\n            }\n            const styleSpecifier = {\n                toolGroupId: this.toolGroupId,\n                toolName: this.getToolName(),\n                viewportId: enabledElement.viewport.id,\n            };\n            for (let i = 0; i < annotations.length; i++) {\n                const annotation = annotations[i];\n                const { annotationUID, data } = annotation;\n                const { handles, text } = data;\n                const { points, activeHandleIndex } = handles;\n                styleSpecifier.annotationUID = annotationUID;\n                const lineWidth = this.getStyle('lineWidth', styleSpecifier, annotation);\n                const lineDash = this.getStyle('lineDash', styleSpecifier, annotation);\n                const color = this.getStyle('color', styleSpecifier, annotation);\n                const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n                let activeHandleCanvasCoords;\n                if (!isAnnotationLocked(annotation) &&\n                    !this.editData &&\n                    activeHandleIndex !== null) {\n                    activeHandleCanvasCoords = [canvasCoordinates[activeHandleIndex]];\n                }\n                if (activeHandleCanvasCoords) {\n                    const handleGroupUID = '0';\n                    drawHandlesSvg(svgDrawingHelper, annotationUID, handleGroupUID, canvasCoordinates, {\n                        color,\n                        lineWidth,\n                    });\n                }\n                const arrowUID = '1';\n                if (this.configuration.arrowFirst) {\n                    drawArrowSvg(svgDrawingHelper, annotationUID, arrowUID, canvasCoordinates[1], canvasCoordinates[0], {\n                        color,\n                        width: lineWidth,\n                        lineDash: lineDash,\n                    });\n                }\n                else {\n                    drawArrowSvg(svgDrawingHelper, annotationUID, arrowUID, canvasCoordinates[0], canvasCoordinates[1], {\n                        color,\n                        width: lineWidth,\n                        lineDash: lineDash,\n                    });\n                }\n                renderStatus = true;\n                if (!viewport.getRenderingEngine()) {\n                    console.warn('Rendering Engine has been destroyed');\n                    return renderStatus;\n                }\n                if (!text) {\n                    continue;\n                }\n                if (!data.handles.textBox.hasMoved) {\n                    const canvasTextBoxCoords = canvasCoordinates[1];\n                    data.handles.textBox.worldPosition =\n                        viewport.canvasToWorld(canvasTextBoxCoords);\n                }\n                const textBoxPosition = viewport.worldToCanvas(data.handles.textBox.worldPosition);\n                const textBoxUID = '1';\n                const boundingBox = drawLinkedTextBoxSvg(svgDrawingHelper, annotationUID, textBoxUID, [text], textBoxPosition, canvasCoordinates, {}, this.getLinkedTextBoxStyle(styleSpecifier, annotation));\n                const { x: left, y: top, width, height } = boundingBox;\n                data.handles.textBox.worldBoundingBox = {\n                    topLeft: viewport.canvasToWorld([left, top]),\n                    topRight: viewport.canvasToWorld([left + width, top]),\n                    bottomLeft: viewport.canvasToWorld([left, top + height]),\n                    bottomRight: viewport.canvasToWorld([left + width, top + height]),\n                };\n            }\n            return renderStatus;\n        };\n    }\n    handleSelectedCallback(evt, annotation, handle) {\n        const eventDetail = evt.detail;\n        const { element } = eventDetail;\n        const { data } = annotation;\n        annotation.highlighted = true;\n        let movingTextBox = false;\n        let handleIndex;\n        if (handle.worldPosition) {\n            movingTextBox = true;\n        }\n        else {\n            handleIndex = data.handles.points.findIndex((p) => p === handle);\n        }\n        const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n        this.editData = {\n            annotation,\n            viewportIdsToRender,\n            handleIndex,\n            movingTextBox,\n        };\n        this._activateModify(element);\n        hideElementCursor(element);\n        const enabledElement = getEnabledElement(element);\n        const { renderingEngine } = enabledElement;\n        triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n        evt.preventDefault();\n    }\n    _doneChangingTextCallback(element, annotation, updatedText) {\n        annotation.data.text = updatedText;\n        const { renderingEngine, viewportId, renderingEngineId } = getEnabledElement(element);\n        const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n        triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n        const eventType = Events.ANNOTATION_MODIFIED;\n        triggerEvent(eventTarget, eventType, {\n            annotation,\n            viewportId,\n            renderingEngineId,\n        });\n    }\n    _isInsideVolume(index1, index2, dimensions) {\n        return (csUtils.indexWithinDimensions(index1, dimensions) &&\n            csUtils.indexWithinDimensions(index2, dimensions));\n    }\n}\nfunction getTextCallback(doneChangingTextCallback) {\n    return doneChangingTextCallback(prompt('Enter your annotation:'));\n}\nfunction changeTextCallback(data, eventData, doneChangingTextCallback) {\n    return doneChangingTextCallback(prompt('Enter your annotation:'));\n}\nArrowAnnotateTool.toolName = 'ArrowAnnotate';\nexport default ArrowAnnotateTool;\n//# sourceMappingURL=ArrowAnnotateTool.js.map","import { Events } from '../../enums';\nimport { getEnabledElement, triggerEvent, eventTarget, } from '@cornerstonejs/core';\nimport { AnnotationTool } from '../base';\nimport throttle from '../../utilities/throttle';\nimport { addAnnotation, getAnnotations, removeAnnotation, } from '../../stateManagement/annotation/annotationState';\nimport { isAnnotationLocked } from '../../stateManagement/annotation/annotationLocking';\nimport * as lineSegment from '../../utilities/math/line';\nimport angleBetweenLines from '../../utilities/math/angle/angleBetweenLines';\nimport { drawHandles as drawHandlesSvg, drawLine as drawLineSvg, drawLinkedTextBox as drawLinkedTextBoxSvg, } from '../../drawingSvg';\nimport { state } from '../../store';\nimport { getViewportIdsWithToolToRender } from '../../utilities/viewportFilters';\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\nimport { resetElementCursor, hideElementCursor, } from '../../cursors/elementCursor';\nclass AngleTool extends AnnotationTool {\n    constructor(toolProps = {}, defaultToolProps = {\n        supportedInteractionTypes: ['Mouse', 'Touch'],\n        configuration: {\n            shadow: true,\n            preventHandleOutsideImage: false,\n        },\n    }) {\n        super(toolProps, defaultToolProps);\n        this.addNewAnnotation = (evt) => {\n            if (this.angleStartedNotYetCompleted) {\n                return;\n            }\n            this.angleStartedNotYetCompleted = true;\n            const eventDetail = evt.detail;\n            const { currentPoints, element } = eventDetail;\n            const worldPos = currentPoints.world;\n            const enabledElement = getEnabledElement(element);\n            const { viewport, renderingEngine } = enabledElement;\n            hideElementCursor(element);\n            this.isDrawing = true;\n            const camera = viewport.getCamera();\n            const { viewPlaneNormal, viewUp } = camera;\n            const referencedImageId = this.getReferencedImageId(viewport, worldPos, viewPlaneNormal, viewUp);\n            const FrameOfReferenceUID = viewport.getFrameOfReferenceUID();\n            const annotation = {\n                highlighted: true,\n                invalidated: true,\n                metadata: {\n                    toolName: this.getToolName(),\n                    viewPlaneNormal: [...viewPlaneNormal],\n                    viewUp: [...viewUp],\n                    FrameOfReferenceUID,\n                    referencedImageId,\n                },\n                data: {\n                    handles: {\n                        points: [[...worldPos], [...worldPos]],\n                        activeHandleIndex: null,\n                        textBox: {\n                            hasMoved: false,\n                            worldPosition: [0, 0, 0],\n                            worldBoundingBox: {\n                                topLeft: [0, 0, 0],\n                                topRight: [0, 0, 0],\n                                bottomLeft: [0, 0, 0],\n                                bottomRight: [0, 0, 0],\n                            },\n                        },\n                    },\n                    label: '',\n                    cachedStats: {},\n                },\n            };\n            addAnnotation(annotation, element);\n            const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n            this.editData = {\n                annotation,\n                viewportIdsToRender,\n                handleIndex: 1,\n                movingTextBox: false,\n                newAnnotation: true,\n                hasMoved: false,\n            };\n            this._activateDraw(element);\n            evt.preventDefault();\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n            return annotation;\n        };\n        this.isPointNearTool = (element, annotation, canvasCoords, proximity) => {\n            const enabledElement = getEnabledElement(element);\n            const { viewport } = enabledElement;\n            const { data } = annotation;\n            const [point1, point2, point3] = data.handles.points;\n            const canvasPoint1 = viewport.worldToCanvas(point1);\n            const canvasPoint2 = viewport.worldToCanvas(point2);\n            const canvasPoint3 = viewport.worldToCanvas(point3);\n            const line1 = {\n                start: {\n                    x: canvasPoint1[0],\n                    y: canvasPoint1[1],\n                },\n                end: {\n                    x: canvasPoint2[0],\n                    y: canvasPoint2[1],\n                },\n            };\n            const line2 = {\n                start: {\n                    x: canvasPoint2[0],\n                    y: canvasPoint2[1],\n                },\n                end: {\n                    x: canvasPoint3[0],\n                    y: canvasPoint3[1],\n                },\n            };\n            const distanceToPoint = lineSegment.distanceToPoint([line1.start.x, line1.start.y], [line1.end.x, line1.end.y], [canvasCoords[0], canvasCoords[1]]);\n            const distanceToPoint2 = lineSegment.distanceToPoint([line2.start.x, line2.start.y], [line2.end.x, line2.end.y], [canvasCoords[0], canvasCoords[1]]);\n            if (distanceToPoint <= proximity || distanceToPoint2 <= proximity) {\n                return true;\n            }\n            return false;\n        };\n        this.toolSelectedCallback = (evt, annotation) => {\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            annotation.highlighted = true;\n            const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n            this.editData = {\n                annotation,\n                viewportIdsToRender,\n                movingTextBox: false,\n            };\n            this._activateModify(element);\n            hideElementCursor(element);\n            const enabledElement = getEnabledElement(element);\n            const { renderingEngine } = enabledElement;\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n            evt.preventDefault();\n        };\n        this._endCallback = (evt) => {\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            const { annotation, viewportIdsToRender, newAnnotation, hasMoved } = this.editData;\n            const { data } = annotation;\n            if (newAnnotation && !hasMoved) {\n                return;\n            }\n            if (this.angleStartedNotYetCompleted && data.handles.points.length === 2) {\n                this.editData.handleIndex = 2;\n                return;\n            }\n            this.angleStartedNotYetCompleted = false;\n            data.handles.activeHandleIndex = null;\n            this._deactivateModify(element);\n            this._deactivateDraw(element);\n            resetElementCursor(element);\n            const enabledElement = getEnabledElement(element);\n            const { renderingEngine } = enabledElement;\n            if (this.isHandleOutsideImage &&\n                this.configuration.preventHandleOutsideImage) {\n                removeAnnotation(annotation.annotationUID);\n            }\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n            if (newAnnotation) {\n                const eventType = Events.ANNOTATION_COMPLETED;\n                const eventDetail = {\n                    annotation,\n                };\n                triggerEvent(eventTarget, eventType, eventDetail);\n            }\n            this.editData = null;\n            this.isDrawing = false;\n        };\n        this._dragCallback = (evt) => {\n            this.isDrawing = true;\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            const { annotation, viewportIdsToRender, handleIndex, movingTextBox } = this.editData;\n            const { data } = annotation;\n            if (movingTextBox) {\n                const { deltaPoints } = eventDetail;\n                const worldPosDelta = deltaPoints.world;\n                const { textBox } = data.handles;\n                const { worldPosition } = textBox;\n                worldPosition[0] += worldPosDelta[0];\n                worldPosition[1] += worldPosDelta[1];\n                worldPosition[2] += worldPosDelta[2];\n                textBox.hasMoved = true;\n            }\n            else if (handleIndex === undefined) {\n                const { deltaPoints } = eventDetail;\n                const worldPosDelta = deltaPoints.world;\n                const points = data.handles.points;\n                points.forEach((point) => {\n                    point[0] += worldPosDelta[0];\n                    point[1] += worldPosDelta[1];\n                    point[2] += worldPosDelta[2];\n                });\n                annotation.invalidated = true;\n            }\n            else {\n                const { currentPoints } = eventDetail;\n                const worldPos = currentPoints.world;\n                data.handles.points[handleIndex] = [...worldPos];\n                annotation.invalidated = true;\n            }\n            this.editData.hasMoved = true;\n            const enabledElement = getEnabledElement(element);\n            const { renderingEngine } = enabledElement;\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n        };\n        this.cancel = (element) => {\n            if (this.isDrawing) {\n                this.isDrawing = false;\n                this._deactivateDraw(element);\n                this._deactivateModify(element);\n                resetElementCursor(element);\n                const { annotation, viewportIdsToRender, newAnnotation } = this.editData;\n                const { data } = annotation;\n                annotation.highlighted = false;\n                data.handles.activeHandleIndex = null;\n                const enabledElement = getEnabledElement(element);\n                const { renderingEngine } = enabledElement;\n                triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n                if (newAnnotation) {\n                    const eventType = Events.ANNOTATION_COMPLETED;\n                    const eventDetail = {\n                        annotation,\n                    };\n                    triggerEvent(eventTarget, eventType, eventDetail);\n                }\n                this.editData = null;\n                this.angleStartedNotYetCompleted = false;\n                return annotation.annotationUID;\n            }\n        };\n        this._activateModify = (element) => {\n            state.isInteractingWithTool = true;\n            element.addEventListener(Events.MOUSE_UP, this._endCallback);\n            element.addEventListener(Events.MOUSE_DRAG, this._dragCallback);\n            element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n            element.addEventListener(Events.TOUCH_TAP, this._endCallback);\n            element.addEventListener(Events.TOUCH_END, this._endCallback);\n            element.addEventListener(Events.TOUCH_DRAG, this._dragCallback);\n        };\n        this._deactivateModify = (element) => {\n            state.isInteractingWithTool = false;\n            element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n            element.removeEventListener(Events.MOUSE_DRAG, this._dragCallback);\n            element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n            element.removeEventListener(Events.TOUCH_TAP, this._endCallback);\n            element.removeEventListener(Events.TOUCH_END, this._endCallback);\n            element.removeEventListener(Events.TOUCH_DRAG, this._dragCallback);\n        };\n        this._activateDraw = (element) => {\n            state.isInteractingWithTool = true;\n            element.addEventListener(Events.MOUSE_UP, this._endCallback);\n            element.addEventListener(Events.MOUSE_DRAG, this._dragCallback);\n            element.addEventListener(Events.MOUSE_MOVE, this._dragCallback);\n            element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n            element.addEventListener(Events.TOUCH_TAP, this._endCallback);\n            element.addEventListener(Events.TOUCH_END, this._endCallback);\n            element.addEventListener(Events.TOUCH_DRAG, this._dragCallback);\n        };\n        this._deactivateDraw = (element) => {\n            state.isInteractingWithTool = false;\n            element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n            element.removeEventListener(Events.MOUSE_DRAG, this._dragCallback);\n            element.removeEventListener(Events.MOUSE_MOVE, this._dragCallback);\n            element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n            element.removeEventListener(Events.TOUCH_TAP, this._endCallback);\n            element.removeEventListener(Events.TOUCH_END, this._endCallback);\n            element.removeEventListener(Events.TOUCH_DRAG, this._dragCallback);\n        };\n        this.renderAnnotation = (enabledElement, svgDrawingHelper) => {\n            let renderStatus = false;\n            const { viewport } = enabledElement;\n            const { element } = viewport;\n            let annotations = getAnnotations(this.getToolName(), element);\n            if (!annotations?.length) {\n                return renderStatus;\n            }\n            annotations = this.filterInteractableAnnotationsForElement(element, annotations);\n            if (!annotations?.length) {\n                return renderStatus;\n            }\n            const targetId = this.getTargetId(viewport);\n            const renderingEngine = viewport.getRenderingEngine();\n            const styleSpecifier = {\n                toolGroupId: this.toolGroupId,\n                toolName: this.getToolName(),\n                viewportId: enabledElement.viewport.id,\n            };\n            for (let i = 0; i < annotations.length; i++) {\n                const annotation = annotations[i];\n                const { annotationUID, data } = annotation;\n                const { points, activeHandleIndex } = data.handles;\n                styleSpecifier.annotationUID = annotationUID;\n                const lineWidth = this.getStyle('lineWidth', styleSpecifier, annotation);\n                const lineDash = this.getStyle('lineDash', styleSpecifier, annotation);\n                const color = this.getStyle('color', styleSpecifier, annotation);\n                const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n                if (!data.cachedStats[targetId]) {\n                    data.cachedStats[targetId] = {\n                        angle: null,\n                    };\n                    this._calculateCachedStats(annotation, renderingEngine, enabledElement);\n                }\n                else if (annotation.invalidated) {\n                    this._throttledCalculateCachedStats(annotation, renderingEngine, enabledElement);\n                }\n                let activeHandleCanvasCoords;\n                if (!isAnnotationLocked(annotation) &&\n                    !this.editData &&\n                    activeHandleIndex !== null) {\n                    activeHandleCanvasCoords = [canvasCoordinates[activeHandleIndex]];\n                }\n                if (!viewport.getRenderingEngine()) {\n                    console.warn('Rendering Engine has been destroyed');\n                    return renderStatus;\n                }\n                if (activeHandleCanvasCoords) {\n                    const handleGroupUID = '0';\n                    drawHandlesSvg(svgDrawingHelper, annotationUID, handleGroupUID, canvasCoordinates, {\n                        color,\n                        lineDash,\n                        lineWidth,\n                    });\n                }\n                let lineUID = '1';\n                drawLineSvg(svgDrawingHelper, annotationUID, lineUID, canvasCoordinates[0], canvasCoordinates[1], {\n                    color,\n                    width: lineWidth,\n                    lineDash,\n                });\n                renderStatus = true;\n                if (canvasCoordinates.length !== 3) {\n                    return renderStatus;\n                }\n                lineUID = '2';\n                drawLineSvg(svgDrawingHelper, annotationUID, lineUID, canvasCoordinates[1], canvasCoordinates[2], {\n                    color,\n                    width: lineWidth,\n                    lineDash,\n                });\n                if (!data.cachedStats[targetId]?.angle) {\n                    continue;\n                }\n                const textLines = this._getTextLines(data, targetId);\n                if (!data.handles.textBox.hasMoved) {\n                    const canvasTextBoxCoords = canvasCoordinates[1];\n                    data.handles.textBox.worldPosition =\n                        viewport.canvasToWorld(canvasTextBoxCoords);\n                }\n                const textBoxPosition = viewport.worldToCanvas(data.handles.textBox.worldPosition);\n                const textBoxUID = '1';\n                const boundingBox = drawLinkedTextBoxSvg(svgDrawingHelper, annotationUID, textBoxUID, textLines, textBoxPosition, canvasCoordinates, {}, this.getLinkedTextBoxStyle(styleSpecifier, annotation));\n                const { x: left, y: top, width, height } = boundingBox;\n                data.handles.textBox.worldBoundingBox = {\n                    topLeft: viewport.canvasToWorld([left, top]),\n                    topRight: viewport.canvasToWorld([left + width, top]),\n                    bottomLeft: viewport.canvasToWorld([left, top + height]),\n                    bottomRight: viewport.canvasToWorld([left + width, top + height]),\n                };\n            }\n            return renderStatus;\n        };\n        this._throttledCalculateCachedStats = throttle(this._calculateCachedStats, 100, { trailing: true });\n    }\n    handleSelectedCallback(evt, annotation, handle) {\n        const eventDetail = evt.detail;\n        const { element } = eventDetail;\n        const { data } = annotation;\n        annotation.highlighted = true;\n        let movingTextBox = false;\n        let handleIndex;\n        if (handle.worldPosition) {\n            movingTextBox = true;\n        }\n        else {\n            handleIndex = data.handles.points.findIndex((p) => p === handle);\n        }\n        const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n        this.editData = {\n            annotation,\n            viewportIdsToRender,\n            handleIndex,\n            movingTextBox,\n        };\n        this._activateModify(element);\n        hideElementCursor(element);\n        const enabledElement = getEnabledElement(element);\n        const { renderingEngine } = enabledElement;\n        triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n        evt.preventDefault();\n    }\n    _getTextLines(data, targetId) {\n        const cachedVolumeStats = data.cachedStats[targetId];\n        const { angle } = cachedVolumeStats;\n        if (angle === undefined) {\n            return;\n        }\n        const textLines = [`${angle.toFixed(2)} ${String.fromCharCode(176)}`];\n        return textLines;\n    }\n    _calculateCachedStats(annotation, renderingEngine, enabledElement) {\n        const data = annotation.data;\n        const { viewportId, renderingEngineId } = enabledElement;\n        if (data.handles.points.length !== 3) {\n            return;\n        }\n        const worldPos1 = data.handles.points[0];\n        const worldPos2 = data.handles.points[1];\n        const worldPos3 = data.handles.points[2];\n        const { cachedStats } = data;\n        const targetIds = Object.keys(cachedStats);\n        for (let i = 0; i < targetIds.length; i++) {\n            const targetId = targetIds[i];\n            const angle = angleBetweenLines([worldPos1, worldPos2], [worldPos2, worldPos3]);\n            cachedStats[targetId] = {\n                angle,\n            };\n        }\n        annotation.invalidated = false;\n        const eventType = Events.ANNOTATION_MODIFIED;\n        const eventDetail = {\n            annotation,\n            viewportId,\n            renderingEngineId,\n        };\n        triggerEvent(eventTarget, eventType, eventDetail);\n        return cachedStats;\n    }\n}\nAngleTool.toolName = 'Angle';\nexport default AngleTool;\n//# sourceMappingURL=AngleTool.js.map","const midPoint = (...args) => {\n    const ret = args[0].length === 2 ? [0, 0] : [0, 0, 0];\n    const len = args.length;\n    for (const arg of args) {\n        ret[0] += arg[0] / len;\n        ret[1] += arg[1] / len;\n        if (ret.length === 3)\n            ret[2] += arg[2] / len;\n    }\n    return ret;\n};\nconst midPoint2 = midPoint;\nexport default midPoint;\nexport { midPoint2 };\n//# sourceMappingURL=midPoint.js.map","import { vec3 } from 'gl-matrix';\nimport { Events } from '../../enums';\nimport { getEnabledElement, triggerEvent, eventTarget, } from '@cornerstonejs/core';\nimport { AnnotationTool } from '../base';\nimport throttle from '../../utilities/throttle';\nimport { addAnnotation, getAnnotations, removeAnnotation, } from '../../stateManagement/annotation/annotationState';\nimport { isAnnotationLocked } from '../../stateManagement/annotation/annotationLocking';\nimport * as lineSegment from '../../utilities/math/line';\nimport angleBetweenLines from '../../utilities/math/angle/angleBetweenLines';\nimport { midPoint2 } from '../../utilities/math/midPoint';\nimport { drawHandles as drawHandlesSvg, drawLine as drawLineSvg, drawLinkedTextBox as drawLinkedTextBoxSvg, } from '../../drawingSvg';\nimport { state } from '../../store';\nimport { getViewportIdsWithToolToRender } from '../../utilities/viewportFilters';\nimport { getTextBoxCoordsCanvas } from '../../utilities/drawing';\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\nimport { resetElementCursor, hideElementCursor, } from '../../cursors/elementCursor';\nclass CobbAngleTool extends AnnotationTool {\n    constructor(toolProps = {}, defaultToolProps = {\n        supportedInteractionTypes: ['Mouse', 'Touch'],\n        configuration: {\n            shadow: true,\n            preventHandleOutsideImage: false,\n        },\n    }) {\n        super(toolProps, defaultToolProps);\n        this.addNewAnnotation = (evt) => {\n            if (this.angleStartedNotYetCompleted) {\n                return;\n            }\n            this.angleStartedNotYetCompleted = true;\n            const eventDetail = evt.detail;\n            const { currentPoints, element } = eventDetail;\n            const worldPos = currentPoints.world;\n            const enabledElement = getEnabledElement(element);\n            const { viewport, renderingEngine } = enabledElement;\n            hideElementCursor(element);\n            this.isDrawing = true;\n            const camera = viewport.getCamera();\n            const { viewPlaneNormal, viewUp } = camera;\n            const referencedImageId = this.getReferencedImageId(viewport, worldPos, viewPlaneNormal, viewUp);\n            const FrameOfReferenceUID = viewport.getFrameOfReferenceUID();\n            const annotation = {\n                highlighted: true,\n                invalidated: true,\n                metadata: {\n                    toolName: this.getToolName(),\n                    viewPlaneNormal: [...viewPlaneNormal],\n                    viewUp: [...viewUp],\n                    FrameOfReferenceUID,\n                    referencedImageId,\n                },\n                data: {\n                    handles: {\n                        points: [[...worldPos], [...worldPos]],\n                        activeHandleIndex: null,\n                        textBox: {\n                            hasMoved: false,\n                            worldPosition: [0, 0, 0],\n                            worldBoundingBox: {\n                                topLeft: [0, 0, 0],\n                                topRight: [0, 0, 0],\n                                bottomLeft: [0, 0, 0],\n                                bottomRight: [0, 0, 0],\n                            },\n                        },\n                    },\n                    label: '',\n                    cachedStats: {},\n                },\n            };\n            addAnnotation(annotation, element);\n            const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n            this.editData = {\n                annotation,\n                viewportIdsToRender,\n                handleIndex: 1,\n                movingTextBox: false,\n                newAnnotation: true,\n                hasMoved: false,\n            };\n            this._activateDraw(element);\n            evt.preventDefault();\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n            return annotation;\n        };\n        this.isPointNearTool = (element, annotation, canvasCoords, proximity) => {\n            const enabledElement = getEnabledElement(element);\n            const { viewport } = enabledElement;\n            const { data } = annotation;\n            const [point1, point2, point3, point4] = data.handles.points;\n            const canvasPoint1 = viewport.worldToCanvas(point1);\n            const canvasPoint2 = viewport.worldToCanvas(point2);\n            const canvasPoint3 = viewport.worldToCanvas(point3);\n            const canvasPoint4 = viewport.worldToCanvas(point4);\n            const line1 = {\n                start: {\n                    x: canvasPoint1[0],\n                    y: canvasPoint1[1],\n                },\n                end: {\n                    x: canvasPoint2[0],\n                    y: canvasPoint2[1],\n                },\n            };\n            const line2 = {\n                start: {\n                    x: canvasPoint3[0],\n                    y: canvasPoint3[1],\n                },\n                end: {\n                    x: canvasPoint4[0],\n                    y: canvasPoint4[1],\n                },\n            };\n            const distanceToPoint = lineSegment.distanceToPoint([line1.start.x, line1.start.y], [line1.end.x, line1.end.y], [canvasCoords[0], canvasCoords[1]]);\n            const distanceToPoint2 = lineSegment.distanceToPoint([line2.start.x, line2.start.y], [line2.end.x, line2.end.y], [canvasCoords[0], canvasCoords[1]]);\n            if (distanceToPoint <= proximity || distanceToPoint2 <= proximity) {\n                return true;\n            }\n            return false;\n        };\n        this.toolSelectedCallback = (evt, annotation, interactionType) => {\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            annotation.highlighted = true;\n            const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n            this.editData = {\n                annotation,\n                viewportIdsToRender,\n                movingTextBox: false,\n            };\n            this._activateModify(element);\n            hideElementCursor(element);\n            const enabledElement = getEnabledElement(element);\n            const { renderingEngine } = enabledElement;\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n            evt.preventDefault();\n        };\n        this._mouseUpCallback = (evt) => {\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            const { annotation, viewportIdsToRender, newAnnotation, hasMoved } = this.editData;\n            const { data } = annotation;\n            if (newAnnotation && !hasMoved) {\n                return;\n            }\n            if (this.angleStartedNotYetCompleted && data.handles.points.length < 4) {\n                resetElementCursor(element);\n                this.editData.handleIndex = data.handles.points.length;\n                return;\n            }\n            this.angleStartedNotYetCompleted = false;\n            data.handles.activeHandleIndex = null;\n            this._deactivateModify(element);\n            this._deactivateDraw(element);\n            resetElementCursor(element);\n            const enabledElement = getEnabledElement(element);\n            const { renderingEngine } = enabledElement;\n            if (this.isHandleOutsideImage &&\n                this.configuration.preventHandleOutsideImage) {\n                removeAnnotation(annotation.annotationUID);\n            }\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n            if (newAnnotation) {\n                const eventType = Events.ANNOTATION_COMPLETED;\n                const eventDetail = {\n                    annotation,\n                };\n                triggerEvent(eventTarget, eventType, eventDetail);\n            }\n            this.editData = null;\n            this.isDrawing = false;\n        };\n        this._mouseDownCallback = (evt) => {\n            const { annotation, handleIndex } = this.editData;\n            const eventDetail = evt.detail;\n            const { element, currentPoints } = eventDetail;\n            const worldPos = currentPoints.world;\n            const { data } = annotation;\n            if (handleIndex === 1) {\n                data.handles.points[1] = worldPos;\n                this.editData.hasMoved =\n                    data.handles.points[1][0] !== data.handles.points[0][0] ||\n                        data.handles.points[1][1] !== data.handles.points[0][0];\n                return;\n            }\n            if (handleIndex === 3) {\n                data.handles.points[3] = worldPos;\n                this.editData.hasMoved =\n                    data.handles.points[3][0] !== data.handles.points[2][0] ||\n                        data.handles.points[3][1] !== data.handles.points[2][0];\n                this.angleStartedNotYetCompleted = false;\n                return;\n            }\n            this.editData.hasMoved = false;\n            hideElementCursor(element);\n            data.handles.points[2] = data.handles.points[3] = worldPos;\n            this.editData.handleIndex = data.handles.points.length - 1;\n        };\n        this._mouseDragCallback = (evt) => {\n            this.isDrawing = true;\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            const { annotation, viewportIdsToRender, handleIndex, movingTextBox } = this.editData;\n            const { data } = annotation;\n            if (movingTextBox) {\n                const { deltaPoints } = eventDetail;\n                const worldPosDelta = deltaPoints.world;\n                const { textBox } = data.handles;\n                const { worldPosition } = textBox;\n                worldPosition[0] += worldPosDelta[0];\n                worldPosition[1] += worldPosDelta[1];\n                worldPosition[2] += worldPosDelta[2];\n                textBox.hasMoved = true;\n            }\n            else if (handleIndex === undefined) {\n                const { deltaPoints } = eventDetail;\n                const worldPosDelta = deltaPoints.world;\n                const points = data.handles.points;\n                points.forEach((point) => {\n                    point[0] += worldPosDelta[0];\n                    point[1] += worldPosDelta[1];\n                    point[2] += worldPosDelta[2];\n                });\n                annotation.invalidated = true;\n            }\n            else {\n                const { currentPoints } = eventDetail;\n                const worldPos = currentPoints.world;\n                data.handles.points[handleIndex] = [...worldPos];\n                annotation.invalidated = true;\n            }\n            this.editData.hasMoved = true;\n            const enabledElement = getEnabledElement(element);\n            const { renderingEngine } = enabledElement;\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n        };\n        this.cancel = (element) => {\n            if (this.isDrawing) {\n                this.isDrawing = false;\n                this._deactivateDraw(element);\n                this._deactivateModify(element);\n                resetElementCursor(element);\n                const { annotation, viewportIdsToRender, newAnnotation } = this.editData;\n                const { data } = annotation;\n                annotation.highlighted = false;\n                data.handles.activeHandleIndex = null;\n                const enabledElement = getEnabledElement(element);\n                const { renderingEngine } = enabledElement;\n                triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n                if (newAnnotation) {\n                    const eventType = Events.ANNOTATION_COMPLETED;\n                    const eventDetail = {\n                        annotation,\n                    };\n                    triggerEvent(eventTarget, eventType, eventDetail);\n                }\n                this.editData = null;\n                this.angleStartedNotYetCompleted = false;\n                return annotation.annotationUID;\n            }\n        };\n        this._activateModify = (element) => {\n            state.isInteractingWithTool = true;\n            element.addEventListener(Events.MOUSE_UP, this._mouseUpCallback);\n            element.addEventListener(Events.MOUSE_DRAG, this._mouseDragCallback);\n            element.addEventListener(Events.MOUSE_CLICK, this._mouseUpCallback);\n        };\n        this._deactivateModify = (element) => {\n            state.isInteractingWithTool = false;\n            element.removeEventListener(Events.MOUSE_UP, this._mouseUpCallback);\n            element.removeEventListener(Events.MOUSE_DRAG, this._mouseDragCallback);\n            element.removeEventListener(Events.MOUSE_CLICK, this._mouseUpCallback);\n        };\n        this._activateDraw = (element) => {\n            state.isInteractingWithTool = true;\n            element.addEventListener(Events.MOUSE_UP, this._mouseUpCallback);\n            element.addEventListener(Events.MOUSE_DRAG, this._mouseDragCallback);\n            element.addEventListener(Events.MOUSE_MOVE, this._mouseDragCallback);\n            element.addEventListener(Events.MOUSE_CLICK, this._mouseUpCallback);\n            element.addEventListener(Events.MOUSE_DOWN, this._mouseDownCallback);\n        };\n        this._deactivateDraw = (element) => {\n            state.isInteractingWithTool = false;\n            element.removeEventListener(Events.MOUSE_UP, this._mouseUpCallback);\n            element.removeEventListener(Events.MOUSE_DRAG, this._mouseDragCallback);\n            element.removeEventListener(Events.MOUSE_MOVE, this._mouseDragCallback);\n            element.removeEventListener(Events.MOUSE_CLICK, this._mouseUpCallback);\n            element.removeEventListener(Events.MOUSE_DOWN, this._mouseDownCallback);\n        };\n        this.renderAnnotation = (enabledElement, svgDrawingHelper) => {\n            let renderStatus = false;\n            const { viewport } = enabledElement;\n            const { element } = viewport;\n            let annotations = getAnnotations(this.getToolName(), element);\n            if (!annotations?.length) {\n                return renderStatus;\n            }\n            annotations = this.filterInteractableAnnotationsForElement(element, annotations);\n            if (!annotations?.length) {\n                return renderStatus;\n            }\n            const targetId = this.getTargetId(viewport);\n            const renderingEngine = viewport.getRenderingEngine();\n            const styleSpecifier = {\n                toolGroupId: this.toolGroupId,\n                toolName: this.getToolName(),\n                viewportId: enabledElement.viewport.id,\n            };\n            for (let i = 0; i < annotations.length; i++) {\n                const annotation = annotations[i];\n                const { annotationUID, data } = annotation;\n                const { points, activeHandleIndex } = data.handles;\n                styleSpecifier.annotationUID = annotationUID;\n                const lineWidth = this.getStyle('lineWidth', styleSpecifier, annotation);\n                const lineDash = this.getStyle('lineDash', styleSpecifier, annotation);\n                const color = this.getStyle('color', styleSpecifier, annotation);\n                const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n                if (!data.cachedStats[targetId]) {\n                    data.cachedStats[targetId] = {\n                        angle: null,\n                    };\n                    this._calculateCachedStats(annotation, renderingEngine, enabledElement);\n                }\n                else if (annotation.invalidated) {\n                    this._throttledCalculateCachedStats(annotation, renderingEngine, enabledElement);\n                }\n                let activeHandleCanvasCoords;\n                if (!isAnnotationLocked(annotation) &&\n                    !this.editData &&\n                    activeHandleIndex !== null) {\n                    activeHandleCanvasCoords = [canvasCoordinates[activeHandleIndex]];\n                }\n                if (!viewport.getRenderingEngine()) {\n                    console.warn('Rendering Engine has been destroyed');\n                    return renderStatus;\n                }\n                if (activeHandleCanvasCoords) {\n                    const handleGroupUID = '0';\n                    drawHandlesSvg(svgDrawingHelper, annotationUID, handleGroupUID, canvasCoordinates, {\n                        color,\n                        lineDash,\n                        lineWidth,\n                    });\n                }\n                let lineUID = '1';\n                drawLineSvg(svgDrawingHelper, annotationUID, lineUID, canvasCoordinates[0], canvasCoordinates[1], {\n                    color,\n                    width: lineWidth,\n                    lineDash,\n                });\n                renderStatus = true;\n                if (canvasCoordinates.length < 4) {\n                    return renderStatus;\n                }\n                lineUID = '2';\n                drawLineSvg(svgDrawingHelper, annotationUID, lineUID, canvasCoordinates[2], canvasCoordinates[3], {\n                    color,\n                    width: lineWidth,\n                    lineDash,\n                });\n                lineUID = '3';\n                const mid1 = midPoint2(canvasCoordinates[0], canvasCoordinates[1]);\n                const mid2 = midPoint2(canvasCoordinates[2], canvasCoordinates[3]);\n                drawLineSvg(svgDrawingHelper, annotationUID, lineUID, mid1, mid2, {\n                    color,\n                    lineWidth: '1',\n                    lineDash: '1,4',\n                });\n                if (!data.cachedStats[targetId]?.angle) {\n                    continue;\n                }\n                const textLines = this._getTextLines(data, targetId);\n                if (!data.handles.textBox.hasMoved) {\n                    const canvasTextBoxCoords = getTextBoxCoordsCanvas(canvasCoordinates);\n                    data.handles.textBox.worldPosition =\n                        viewport.canvasToWorld(canvasTextBoxCoords);\n                }\n                const textBoxPosition = viewport.worldToCanvas(data.handles.textBox.worldPosition);\n                const textBoxUID = '1';\n                const boundingBox = drawLinkedTextBoxSvg(svgDrawingHelper, annotationUID, textBoxUID, textLines, textBoxPosition, canvasCoordinates, {}, this.getLinkedTextBoxStyle(styleSpecifier, annotation));\n                const { x: left, y: top, width, height } = boundingBox;\n                data.handles.textBox.worldBoundingBox = {\n                    topLeft: viewport.canvasToWorld([left, top]),\n                    topRight: viewport.canvasToWorld([left + width, top]),\n                    bottomLeft: viewport.canvasToWorld([left, top + height]),\n                    bottomRight: viewport.canvasToWorld([left + width, top + height]),\n                };\n            }\n            return renderStatus;\n        };\n        this._throttledCalculateCachedStats = throttle(this._calculateCachedStats, 100, { trailing: true });\n    }\n    handleSelectedCallback(evt, annotation, handle, interactionType = 'mouse') {\n        const eventDetail = evt.detail;\n        const { element } = eventDetail;\n        const { data } = annotation;\n        annotation.highlighted = true;\n        let movingTextBox = false;\n        let handleIndex;\n        if (handle.worldPosition) {\n            movingTextBox = true;\n        }\n        else {\n            handleIndex = data.handles.points.findIndex((p) => p === handle);\n        }\n        const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n        this.editData = {\n            annotation,\n            viewportIdsToRender,\n            handleIndex,\n            movingTextBox,\n        };\n        this._activateModify(element);\n        hideElementCursor(element);\n        const enabledElement = getEnabledElement(element);\n        const { renderingEngine } = enabledElement;\n        triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n        evt.preventDefault();\n    }\n    _getTextLines(data, targetId) {\n        const cachedVolumeStats = data.cachedStats[targetId];\n        const { angle } = cachedVolumeStats;\n        if (angle === undefined) {\n            return;\n        }\n        const textLines = [`${angle.toFixed(2)} ${String.fromCharCode(176)}`];\n        return textLines;\n    }\n    _calculateCachedStats(annotation, renderingEngine, enabledElement) {\n        const data = annotation.data;\n        const { viewportId, renderingEngineId } = enabledElement;\n        if (data.handles.points.length !== 4) {\n            return;\n        }\n        const seg1 = [null, null];\n        const seg2 = [null, null];\n        let minDist = Number.MAX_VALUE;\n        for (let i = 0; i < 2; i += 1) {\n            for (let j = 2; j < 4; j += 1) {\n                const dist = vec3.distance(data.handles.points[i], data.handles.points[j]);\n                if (dist < minDist) {\n                    minDist = dist;\n                    seg1[1] = data.handles.points[i];\n                    seg1[0] = data.handles.points[(i + 1) % 2];\n                    seg2[0] = data.handles.points[j];\n                    seg2[1] = data.handles.points[2 + ((j - 1) % 2)];\n                }\n            }\n        }\n        const { cachedStats } = data;\n        const targetIds = Object.keys(cachedStats);\n        for (let i = 0; i < targetIds.length; i++) {\n            const targetId = targetIds[i];\n            const angle = angleBetweenLines(seg1, seg2);\n            cachedStats[targetId] = {\n                angle,\n            };\n        }\n        annotation.invalidated = false;\n        const eventType = Events.ANNOTATION_MODIFIED;\n        const eventDetail = {\n            annotation,\n            viewportId,\n            renderingEngineId,\n        };\n        triggerEvent(eventTarget, eventType, eventDetail);\n        return cachedStats;\n    }\n}\nCobbAngleTool.toolName = 'CobbAngle';\nexport default CobbAngleTool;\n//# sourceMappingURL=CobbAngleTool.js.map","import { getEnabledElement, StackViewport, VolumeViewport, utilities, getEnabledElementByIds, } from '@cornerstonejs/core';\nimport { addAnnotation, getAnnotations, } from '../stateManagement/annotation/annotationState';\nimport { isAnnotationVisible } from '../stateManagement/annotation/annotationVisibility';\nimport { drawLine } from '../drawingSvg';\nimport { getViewportIdsWithToolToRender } from '../utilities/viewportFilters';\nimport triggerAnnotationRenderForViewportIds from '../utilities/triggerAnnotationRenderForViewportIds';\nimport { vec3 } from 'gl-matrix';\nimport AnnotationDisplayTool from './base/AnnotationDisplayTool';\nimport vtkMath from '@kitware/vtk.js/Common/Core/Math';\nimport { hideElementCursor, resetElementCursor, } from '../cursors/elementCursor';\nimport { getToolGroup } from '../store/ToolGroupManager';\nclass ReferenceCursors extends AnnotationDisplayTool {\n    constructor(toolProps = {}, defaultToolProps = {\n        supportedInteractionTypes: ['Mouse', 'Touch'],\n        configuration: {\n            shadow: true,\n            preventHandleOutsideImage: false,\n            displayThreshold: 5,\n            positionSync: true,\n            disableCursor: false,\n        },\n    }) {\n        super(toolProps, defaultToolProps);\n        this.isDrawing = false;\n        this.isHandleOutsideImage = false;\n        this._elementWithCursor = null;\n        this._currentCursorWorldPosition = null;\n        this._currentCanvasPosition = null;\n        this._disableCursorEnabled = false;\n        this.mouseMoveCallback = (evt) => {\n            const { detail } = evt;\n            const { element, currentPoints } = detail;\n            this._currentCursorWorldPosition = currentPoints.world;\n            this._currentCanvasPosition = currentPoints.canvas;\n            this._elementWithCursor = element;\n            const annotation = this.getActiveAnnotation(element);\n            if (annotation === null) {\n                this.createInitialAnnotation(currentPoints.world, element);\n                return false;\n            }\n            this.updateAnnotationPosition(element, annotation);\n            return false;\n        };\n        this.createInitialAnnotation = (worldPos, element) => {\n            const enabledElement = getEnabledElement(element);\n            if (!enabledElement)\n                throw new Error('No enabled element found');\n            const { viewport, renderingEngine } = enabledElement;\n            this.isDrawing = true;\n            const camera = viewport.getCamera();\n            const { viewPlaneNormal, viewUp } = camera;\n            if (!viewPlaneNormal || !viewUp)\n                throw new Error('Camera not found');\n            const referencedImageId = this.getReferencedImageId(viewport, worldPos, viewPlaneNormal, viewUp);\n            const FrameOfReferenceUID = viewport.getFrameOfReferenceUID();\n            const annotation = {\n                highlighted: true,\n                invalidated: true,\n                metadata: {\n                    toolName: this.getToolName(),\n                    viewPlaneNormal: [...viewPlaneNormal],\n                    viewUp: [...viewUp],\n                    FrameOfReferenceUID,\n                    referencedImageId,\n                },\n                data: {\n                    label: '',\n                    handles: {\n                        points: [[...worldPos]],\n                        activeHandleIndex: null,\n                        textBox: {\n                            hasMoved: false,\n                            worldPosition: [0, 0, 0],\n                            worldBoundingBox: {\n                                topLeft: [0, 0, 0],\n                                topRight: [0, 0, 0],\n                                bottomLeft: [0, 0, 0],\n                                bottomRight: [0, 0, 0],\n                            },\n                        },\n                    },\n                },\n            };\n            const annotations = getAnnotations(this.getToolName(), element);\n            if (annotations.length > 0)\n                return null;\n            const annotationId = addAnnotation(annotation, element);\n            if (annotationId === null)\n                return;\n            const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName(), false);\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n        };\n        this.onCameraModified = (evt) => {\n            const eventDetail = evt.detail;\n            const { element, previousCamera, camera } = eventDetail;\n            const enabledElement = getEnabledElement(element);\n            const viewport = enabledElement.viewport;\n            if (element !== this._elementWithCursor)\n                return;\n            const oldFocalPoint = previousCamera.focalPoint;\n            const cameraNormal = camera.viewPlaneNormal;\n            const newFocalPoint = camera.focalPoint;\n            const deltaCameraFocalPoint = [0, 0, 0];\n            vtkMath.subtract(newFocalPoint, oldFocalPoint, deltaCameraFocalPoint);\n            if (deltaCameraFocalPoint.reduce((a, b) => a + b, 0) === 0)\n                return;\n            const dotProduct = vtkMath.dot(deltaCameraFocalPoint, cameraNormal);\n            if (Math.abs(dotProduct) < 1e-2)\n                return;\n            if (!this._currentCanvasPosition)\n                return;\n            const newWorldPos = viewport.canvasToWorld(this._currentCanvasPosition);\n            this._currentCursorWorldPosition = newWorldPos;\n            this.updateAnnotationPosition(element, this.getActiveAnnotation(element));\n        };\n        this.renderAnnotation = (enabledElement, svgDrawingHelper) => {\n            let renderStatus = false;\n            const { viewport, FrameOfReferenceUID } = enabledElement;\n            const isElementWithCursor = this._elementWithCursor === viewport.element;\n            if (this.configuration.positionSync && !isElementWithCursor) {\n                this.updateViewportImage(viewport);\n            }\n            const { element } = viewport;\n            let annotations = getAnnotations(this.getToolName(), element);\n            if (!annotations?.length) {\n                return renderStatus;\n            }\n            annotations = this.filterInteractableAnnotationsForElement(element, annotations);\n            if (!annotations?.length) {\n                return renderStatus;\n            }\n            const styleSpecifier = {\n                toolGroupId: this.toolGroupId,\n                toolName: this.getToolName(),\n                viewportId: enabledElement.viewport.id,\n            };\n            for (let i = 0; i < annotations.length; i++) {\n                const annotation = annotations[i];\n                const { annotationUID, data } = annotation;\n                const { handles } = data;\n                const { points } = handles;\n                if (!annotationUID)\n                    return renderStatus;\n                styleSpecifier.annotationUID = annotationUID;\n                const lineWidthBase = parseFloat(this.getStyle('lineWidth', styleSpecifier, annotation));\n                const lineWidth = typeof lineWidthBase === 'number' && isElementWithCursor\n                    ? lineWidthBase\n                    : lineWidthBase;\n                const lineDash = this.getStyle('lineDash', styleSpecifier, annotation);\n                const color = this.getStyle('color', styleSpecifier, annotation);\n                if (points[0].some((e) => isNaN(e)))\n                    return renderStatus;\n                const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n                if (!viewport.getRenderingEngine()) {\n                    console.warn('Rendering Engine has been destroyed');\n                    return renderStatus;\n                }\n                if (!isAnnotationVisible(annotationUID)) {\n                    continue;\n                }\n                const crosshairUIDs = {\n                    upper: 'upper',\n                    right: 'right',\n                    lower: 'lower',\n                    left: 'left',\n                };\n                const [x, y] = canvasCoordinates[0];\n                const centerSpace = isElementWithCursor ? 20 : 7;\n                const lineLength = isElementWithCursor ? 5 : 7;\n                drawLine(svgDrawingHelper, annotationUID, crosshairUIDs.upper, [x, y - (centerSpace / 2 + lineLength)], [x, y - centerSpace / 2], { color, lineDash, lineWidth });\n                drawLine(svgDrawingHelper, annotationUID, crosshairUIDs.lower, [x, y + (centerSpace / 2 + lineLength)], [x, y + centerSpace / 2], { color, lineDash, lineWidth });\n                drawLine(svgDrawingHelper, annotationUID, crosshairUIDs.right, [x + (centerSpace / 2 + lineLength), y], [x + centerSpace / 2, y], { color, lineDash, lineWidth });\n                drawLine(svgDrawingHelper, annotationUID, crosshairUIDs.left, [x - (centerSpace / 2 + lineLength), y], [x - centerSpace / 2, y], { color, lineDash, lineWidth });\n                renderStatus = true;\n            }\n            return renderStatus;\n        };\n        this._disableCursorEnabled = this.configuration.disableCursor;\n    }\n    onSetToolActive() {\n        this._disableCursorEnabled = this.configuration.disableCursor;\n        if (!this._disableCursorEnabled)\n            return;\n        const viewportIds = getToolGroup(this.toolGroupId).viewportsInfo;\n        if (!viewportIds)\n            return;\n        const enabledElements = viewportIds.map((e) => getEnabledElementByIds(e.viewportId, e.renderingEngineId));\n        enabledElements.forEach((element) => {\n            if (element)\n                hideElementCursor(element.viewport.element);\n        });\n    }\n    onSetToolDisabled() {\n        if (!this._disableCursorEnabled)\n            return;\n        const viewportIds = getToolGroup(this.toolGroupId).viewportsInfo;\n        if (!viewportIds)\n            return;\n        const enabledElements = viewportIds.map((e) => getEnabledElementByIds(e.viewportId, e.renderingEngineId));\n        enabledElements.forEach((element) => {\n            if (element)\n                resetElementCursor(element.viewport.element);\n        });\n    }\n    getActiveAnnotation(element) {\n        const annotations = getAnnotations(this.getToolName(), element);\n        if (!annotations.length) {\n            return null;\n        }\n        const targetAnnotation = annotations[0];\n        return targetAnnotation;\n    }\n    updateAnnotationPosition(element, annotation) {\n        const worldPos = this._currentCursorWorldPosition;\n        if (!worldPos)\n            return;\n        if (!annotation.data?.handles?.points)\n            return;\n        annotation.data.handles.points = [[...worldPos]];\n        annotation.invalidated = true;\n        const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName(), false);\n        const enabledElement = getEnabledElement(element);\n        if (!enabledElement)\n            return;\n        const { renderingEngine } = enabledElement;\n        triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n    }\n    filterInteractableAnnotationsForElement(element, annotations) {\n        if (!(annotations instanceof Array) || annotations.length === 0)\n            return [];\n        const annotation = annotations[0];\n        const viewport = getEnabledElement(element)?.viewport;\n        if (!viewport)\n            return [];\n        const camera = viewport.getCamera();\n        const { viewPlaneNormal, focalPoint } = camera;\n        if (!viewPlaneNormal || !focalPoint)\n            return [];\n        const points = annotation.data?.handles?.points;\n        if (!(points instanceof Array) || points.length !== 1)\n            return [];\n        const worldPos = points[0];\n        const plane = utilities.planar.planeEquation(viewPlaneNormal, focalPoint);\n        const distance = utilities.planar.planeDistanceToPoint(plane, worldPos);\n        return distance < this.configuration.displayThreshold ? [annotation] : [];\n    }\n    updateViewportImage(viewport) {\n        const currentMousePosition = this._currentCursorWorldPosition;\n        if (!currentMousePosition || currentMousePosition.some((e) => isNaN(e)))\n            return;\n        if (viewport instanceof StackViewport) {\n            const closestIndex = utilities.getClosestStackImageIndexForPoint(currentMousePosition, viewport);\n            if (closestIndex === null)\n                return;\n            if (closestIndex !== viewport.getCurrentImageIdIndex())\n                viewport.setImageIdIndex(closestIndex);\n        }\n        else if (viewport instanceof VolumeViewport) {\n            const { focalPoint, viewPlaneNormal } = viewport.getCamera();\n            if (!focalPoint || !viewPlaneNormal)\n                return;\n            const plane = utilities.planar.planeEquation(viewPlaneNormal, focalPoint);\n            const currentDistance = utilities.planar.planeDistanceToPoint(plane, currentMousePosition, true);\n            if (Math.abs(currentDistance) < 0.5)\n                return;\n            const normalizedViewPlane = vec3.normalize(vec3.create(), vec3.fromValues(...viewPlaneNormal));\n            const scaledPlaneNormal = vec3.scale(vec3.create(), normalizedViewPlane, currentDistance);\n            const newFocalPoint = vec3.add(vec3.create(), vec3.fromValues(...focalPoint), scaledPlaneNormal);\n            const isInBounds = true;\n            if (isInBounds) {\n                viewport.setCamera({ focalPoint: newFocalPoint });\n                const renderingEngine = viewport.getRenderingEngine();\n                if (renderingEngine)\n                    renderingEngine.renderViewport(viewport.id);\n            }\n        }\n    }\n}\nReferenceCursors.toolName = 'ReferenceCursors';\nexport default ReferenceCursors;\n//# sourceMappingURL=ReferenceCursors.js.map","import AnnotationDisplayTool from './base/AnnotationDisplayTool';\nimport { vec3 } from 'gl-matrix';\nimport { getEnabledElementByIds, getRenderingEngines, utilities as csUtils, } from '@cornerstonejs/core';\nimport { addAnnotation, getAnnotations, } from '../stateManagement/annotation/annotationState';\nimport { drawLine as drawLineSvg, drawTextBox as drawTextBoxSvg, } from '../drawingSvg';\nimport { getToolGroup } from '../store/ToolGroupManager';\nconst SCALEOVERLAYTOOL_ID = 'scaleoverlay-viewport';\nconst viewportsWithAnnotations = [];\nclass ScaleOverlayTool extends AnnotationDisplayTool {\n    constructor(toolProps = {}, defaultToolProps = {\n        configuration: {\n            viewportId: '',\n            scaleLocation: 'bottom',\n        },\n    }) {\n        super(toolProps, defaultToolProps);\n        this.editData = {};\n        this._init = () => {\n            const renderingEngines = getRenderingEngines();\n            const renderingEngine = renderingEngines[0];\n            if (!renderingEngine) {\n                return;\n            }\n            const viewportIds = getToolGroup(this.toolGroupId).viewportsInfo;\n            if (!viewportIds)\n                return;\n            const enabledElements = viewportIds.map((e) => getEnabledElementByIds(e.viewportId, e.renderingEngineId));\n            let { viewport } = enabledElements[0];\n            const { FrameOfReferenceUID } = enabledElements[0];\n            if (this.configuration.viewportId) {\n                enabledElements.forEach((element) => {\n                    if (element.viewport.id == this.configuration.viewportId) {\n                        viewport = element.viewport;\n                    }\n                });\n            }\n            if (!viewport) {\n                return;\n            }\n            const { viewUp, viewPlaneNormal } = viewport.getCamera();\n            const viewportCanvasCornersInWorld = csUtils.getViewportImageCornersInWorld(viewport);\n            let annotation = this.editData.annotation;\n            const annotations = getAnnotations(this.getToolName(), viewport.element);\n            if (annotations.length) {\n                annotation = annotations.filter((thisAnnotation) => thisAnnotation.data.viewportId == viewport.id)[0];\n            }\n            if (!viewportsWithAnnotations.includes(viewport.id)) {\n                const newAnnotation = {\n                    metadata: {\n                        toolName: this.getToolName(),\n                        viewPlaneNormal: [...viewPlaneNormal],\n                        viewUp: [...viewUp],\n                        FrameOfReferenceUID,\n                        referencedImageId: null,\n                    },\n                    data: {\n                        handles: {\n                            points: viewportCanvasCornersInWorld,\n                        },\n                        viewportId: viewport.id,\n                    },\n                };\n                viewportsWithAnnotations.push(viewport.id);\n                addAnnotation(newAnnotation, viewport.element);\n                annotation = newAnnotation;\n            }\n            else if (this.editData.annotation.data.viewportId == viewport.id) {\n                this.editData.annotation.data.handles.points =\n                    viewportCanvasCornersInWorld;\n                this.editData.annotation.data.viewportId = viewport.id;\n            }\n            this.editData = {\n                viewport,\n                renderingEngine,\n                annotation,\n            };\n        };\n        this.onSetToolEnabled = () => {\n            this._init();\n        };\n        this.onCameraModified = (evt) => {\n            this.configuration.viewportId = evt.detail.viewportId;\n            this._init();\n        };\n        this.computeScaleSize = (worldWidthViewport, worldHeightViewport, location) => {\n            const scaleSizes = [\n                16000, 8000, 4000, 2000, 1000, 500, 250, 100, 50, 25, 10, 5, 2,\n            ];\n            let currentScaleSize;\n            if (location == 'top' || location == 'bottom') {\n                currentScaleSize = scaleSizes.filter((scaleSize) => scaleSize < worldWidthViewport * 0.6 &&\n                    scaleSize > worldWidthViewport * 0.2);\n            }\n            else {\n                currentScaleSize = scaleSizes.filter((scaleSize) => scaleSize < worldHeightViewport * 0.6 &&\n                    scaleSize > worldHeightViewport * 0.2);\n            }\n            return currentScaleSize[0];\n        };\n        this.computeEndScaleTicks = (canvasCoordinates, location) => {\n            const locationTickOffset = {\n                bottom: [\n                    [0, -10],\n                    [0, -10],\n                ],\n                top: [\n                    [0, 10],\n                    [0, 10],\n                ],\n                left: [\n                    [0, 0],\n                    [10, 0],\n                ],\n                right: [\n                    [0, 0],\n                    [-10, 0],\n                ],\n            };\n            const endTick1 = [\n                [\n                    canvasCoordinates[1][0] + locationTickOffset[location][0][0],\n                    canvasCoordinates[1][1] + locationTickOffset[location][0][0],\n                ],\n                [\n                    canvasCoordinates[1][0] + locationTickOffset[location][1][0],\n                    canvasCoordinates[1][1] + locationTickOffset[location][1][1],\n                ],\n            ];\n            const endTick2 = [\n                [\n                    canvasCoordinates[0][0] + locationTickOffset[location][0][0],\n                    canvasCoordinates[0][1] + locationTickOffset[location][0][0],\n                ],\n                [\n                    canvasCoordinates[0][0] + locationTickOffset[location][1][0],\n                    canvasCoordinates[0][1] + locationTickOffset[location][1][1],\n                ],\n            ];\n            return {\n                endTick1: endTick1,\n                endTick2: endTick2,\n            };\n        };\n        this.computeInnerScaleTicks = (scaleSize, location, annotationUID, leftTick, rightTick) => {\n            let canvasScaleSize;\n            if (location == 'bottom' || location == 'top') {\n                canvasScaleSize = rightTick[0][0] - leftTick[0][0];\n            }\n            else if (location == 'left' || location == 'right') {\n                canvasScaleSize = rightTick[0][1] - leftTick[0][1];\n            }\n            const tickIds = [];\n            const tickUIDs = [];\n            const tickCoordinates = [];\n            let numberSmallTicks = scaleSize;\n            if (scaleSize >= 50) {\n                numberSmallTicks = scaleSize / 10;\n            }\n            const tickSpacing = canvasScaleSize / numberSmallTicks;\n            for (let i = 0; i < numberSmallTicks - 1; i++) {\n                const locationOffset = {\n                    bottom: [\n                        [tickSpacing * (i + 1), 0],\n                        [tickSpacing * (i + 1), 5],\n                    ],\n                    top: [\n                        [tickSpacing * (i + 1), 0],\n                        [tickSpacing * (i + 1), -5],\n                    ],\n                    left: [\n                        [0, tickSpacing * (i + 1)],\n                        [-5, tickSpacing * (i + 1)],\n                    ],\n                    right: [\n                        [0, tickSpacing * (i + 1)],\n                        [5, tickSpacing * (i + 1)],\n                    ],\n                };\n                tickIds.push(`${annotationUID}-tick${i}`);\n                tickUIDs.push(`tick${i}`);\n                if ((i + 1) % 5 == 0) {\n                    tickCoordinates.push([\n                        [\n                            leftTick[0][0] + locationOffset[location][0][0],\n                            leftTick[0][1] + locationOffset[location][0][1],\n                        ],\n                        [\n                            leftTick[1][0] + locationOffset[location][0][0],\n                            leftTick[1][1] + locationOffset[location][0][1],\n                        ],\n                    ]);\n                }\n                else {\n                    tickCoordinates.push([\n                        [\n                            leftTick[0][0] + locationOffset[location][0][0],\n                            leftTick[0][1] + locationOffset[location][0][1],\n                        ],\n                        [\n                            leftTick[1][0] + locationOffset[location][1][0],\n                            leftTick[1][1] + locationOffset[location][1][1],\n                        ],\n                    ]);\n                }\n            }\n            return { tickIds, tickUIDs, tickCoordinates };\n        };\n        this.computeWorldScaleCoordinates = (scaleSize, location, pointSet) => {\n            let worldCoordinates;\n            let topBottomVec = vec3.subtract(vec3.create(), pointSet[0], pointSet[1]);\n            topBottomVec = vec3.normalize(vec3.create(), topBottomVec);\n            let topRightVec = vec3.subtract(vec3.create(), pointSet[2], pointSet[0]);\n            topRightVec = vec3.normalize(vec3.create(), topRightVec);\n            const midpointLocation = {\n                bottom: [pointSet[1], pointSet[2]],\n                top: [pointSet[0], pointSet[3]],\n                right: [pointSet[2], pointSet[3]],\n                left: [pointSet[0], pointSet[1]],\n            };\n            const midpoint = vec3\n                .add(vec3.create(), midpointLocation[location][0], midpointLocation[location][0])\n                .map((i) => i / 2);\n            const offset = scaleSize /\n                2 /\n                Math.sqrt(Math.pow(topBottomVec[0], 2) +\n                    Math.pow(topBottomVec[1], 2) +\n                    Math.pow(topBottomVec[2], 2));\n            if (location == 'top' || location == 'bottom') {\n                worldCoordinates = [\n                    vec3.subtract(vec3.create(), midpoint, topRightVec.map((i) => i * offset)),\n                    vec3.add(vec3.create(), midpoint, topRightVec.map((i) => i * offset)),\n                ];\n            }\n            else if (location == 'left' || location == 'right') {\n                worldCoordinates = [\n                    vec3.add(vec3.create(), midpoint, topBottomVec.map((i) => i * offset)),\n                    vec3.subtract(vec3.create(), midpoint, topBottomVec.map((i) => i * offset)),\n                ];\n            }\n            return worldCoordinates;\n        };\n        this.computeCanvasScaleCoordinates = (canvasSize, canvasCoordinates, vscaleBounds, hscaleBounds, location) => {\n            let scaleCanvasCoordinates;\n            if (location == 'top' || location == 'bottom') {\n                const worldDistanceOnCanvas = canvasCoordinates[0][0] - canvasCoordinates[1][0];\n                scaleCanvasCoordinates = [\n                    [canvasSize.width / 2 - worldDistanceOnCanvas / 2, vscaleBounds.height],\n                    [canvasSize.width / 2 + worldDistanceOnCanvas / 2, vscaleBounds.height],\n                ];\n            }\n            else if (location == 'left' || location == 'right') {\n                const worldDistanceOnCanvas = canvasCoordinates[0][1] - canvasCoordinates[1][1];\n                scaleCanvasCoordinates = [\n                    [hscaleBounds.width, canvasSize.height / 2 - worldDistanceOnCanvas / 2],\n                    [hscaleBounds.width, canvasSize.height / 2 + worldDistanceOnCanvas / 2],\n                ];\n            }\n            return scaleCanvasCoordinates;\n        };\n        this.computeScaleBounds = (canvasSize, horizontalReduction, verticalReduction, location) => {\n            const hReduction = horizontalReduction * Math.min(1000, canvasSize.width);\n            const vReduction = verticalReduction * Math.min(1000, canvasSize.height);\n            const locationBounds = {\n                bottom: [-vReduction, -hReduction],\n                top: [vReduction, hReduction],\n                left: [vReduction, hReduction],\n                right: [-vReduction, -hReduction],\n            };\n            const canvasBounds = {\n                bottom: [canvasSize.height, canvasSize.width],\n                top: [0, canvasSize.width],\n                left: [canvasSize.height, 0],\n                right: [canvasSize.height, canvasSize.width],\n            };\n            return {\n                height: canvasBounds[location][0] + locationBounds[location][0],\n                width: canvasBounds[location][1] + locationBounds[location][1],\n            };\n        };\n    }\n    renderAnnotation(enabledElement, svgDrawingHelper) {\n        if (!this.editData.viewport) {\n            return;\n        }\n        const location = this.configuration.scaleLocation;\n        const { viewport } = enabledElement;\n        const annotations = getAnnotations(this.getToolName(), viewport.element);\n        const annotation = annotations.filter((thisAnnotation) => thisAnnotation.data.viewportId == viewport.id)[0];\n        const canvas = enabledElement.viewport.canvas;\n        const renderStatus = false;\n        if (!viewport) {\n            return renderStatus;\n        }\n        const styleSpecifier = {\n            toolGroupId: this.toolGroupId,\n            toolName: this.getToolName(),\n            viewportId: enabledElement.viewport.id,\n        };\n        const canvasSize = {\n            width: canvas.width,\n            height: canvas.height,\n        };\n        const topLeft = annotation.data.handles.points[0];\n        const topRight = annotation.data.handles.points[1];\n        const bottomLeft = annotation.data.handles.points[2];\n        const bottomRight = annotation.data.handles.points[3];\n        const pointSet1 = [topLeft, bottomLeft, topRight, bottomRight];\n        const worldWidthViewport = vec3.distance(bottomLeft, bottomRight);\n        const worldHeightViewport = vec3.distance(topLeft, bottomLeft);\n        const hscaleBounds = this.computeScaleBounds(canvasSize, 0.05, 0.05, location);\n        const vscaleBounds = this.computeScaleBounds(canvasSize, 0.05, 0.05, location);\n        const scaleSize = this.computeScaleSize(worldWidthViewport, worldHeightViewport, location);\n        const canvasCoordinates = this.computeWorldScaleCoordinates(scaleSize, location, pointSet1).map((world) => viewport.worldToCanvas(world));\n        const scaleCanvasCoordinates = this.computeCanvasScaleCoordinates(canvasSize, canvasCoordinates, vscaleBounds, hscaleBounds, location);\n        const scaleTicks = this.computeEndScaleTicks(scaleCanvasCoordinates, location);\n        const { annotationUID } = annotation;\n        styleSpecifier.annotationUID = annotationUID;\n        const lineWidth = this.getStyle('lineWidth', styleSpecifier, annotation);\n        const lineDash = this.getStyle('lineDash', styleSpecifier, annotation);\n        const color = this.getStyle('color', styleSpecifier, annotation);\n        const shadow = this.getStyle('shadow', styleSpecifier, annotation);\n        const scaleId = `${annotationUID}-scaleline`;\n        const scaleLineUID = '1';\n        drawLineSvg(svgDrawingHelper, annotationUID, scaleLineUID, scaleCanvasCoordinates[0], scaleCanvasCoordinates[1], {\n            color,\n            width: lineWidth,\n            lineDash,\n            shadow,\n        }, scaleId);\n        const leftTickId = `${annotationUID}-left`;\n        const leftTickUID = '2';\n        drawLineSvg(svgDrawingHelper, annotationUID, leftTickUID, scaleTicks.endTick1[0], scaleTicks.endTick1[1], {\n            color,\n            width: lineWidth,\n            lineDash,\n            shadow,\n        }, leftTickId);\n        const rightTickId = `${annotationUID}-right`;\n        const rightTickUID = '3';\n        drawLineSvg(svgDrawingHelper, annotationUID, rightTickUID, scaleTicks.endTick2[0], scaleTicks.endTick2[1], {\n            color,\n            width: lineWidth,\n            lineDash,\n            shadow,\n        }, rightTickId);\n        const locationTextOffest = {\n            bottom: [-10, -42],\n            top: [-12, -35],\n            left: [-40, -20],\n            right: [-50, -20],\n        };\n        const textCanvasCoordinates = [\n            scaleCanvasCoordinates[0][0] + locationTextOffest[location][0],\n            scaleCanvasCoordinates[0][1] + locationTextOffest[location][1],\n        ];\n        const textBoxLines = this._getTextLines(scaleSize);\n        const { tickIds, tickUIDs, tickCoordinates } = this.computeInnerScaleTicks(scaleSize, location, annotationUID, scaleTicks.endTick1, scaleTicks.endTick2);\n        for (let i = 0; i < tickUIDs.length; i++) {\n            drawLineSvg(svgDrawingHelper, annotationUID, tickUIDs[i], tickCoordinates[i][0], tickCoordinates[i][1], {\n                color,\n                width: lineWidth,\n                lineDash,\n                shadow,\n            }, tickIds[i]);\n        }\n        const textUID = 'text0';\n        drawTextBoxSvg(svgDrawingHelper, annotationUID, textUID, textBoxLines, [textCanvasCoordinates[0], textCanvasCoordinates[1]], {\n            fontFamily: 'Helvetica Neue, Helvetica, Arial, sans-serif',\n            fontSize: '14px',\n            lineDash: '2,3',\n            lineWidth: '1',\n            shadow: true,\n            color: color,\n        });\n        return renderStatus;\n    }\n    _getTextLines(scaleSize) {\n        let scaleSizeDisplayValue;\n        let scaleSizeUnits;\n        if (scaleSize >= 50) {\n            scaleSizeDisplayValue = scaleSize / 10;\n            scaleSizeUnits = ' cm';\n        }\n        else {\n            scaleSizeDisplayValue = scaleSize;\n            scaleSizeUnits = ' mm';\n        }\n        const textLines = [scaleSizeDisplayValue.toString().concat(scaleSizeUnits)];\n        return textLines;\n    }\n}\nScaleOverlayTool.toolName = 'ScaleOverlay';\nexport default ScaleOverlayTool;\n//# sourceMappingURL=ScaleOverlayTool.js.map","import { utilities as csUtils } from '@cornerstonejs/core';\nimport { getBoundingBoxAroundShape } from '../../../utilities/boundingBox';\nimport { pointInShapeCallback } from '../../../utilities';\nimport { triggerSegmentationDataModified } from '../../../stateManagement/segmentation/triggerSegmentationEvents';\nconst { transformWorldToIndex } = csUtils;\nfunction fillRectangle(enabledElement, operationData, inside = true) {\n    const { volume: segmentation, points, segmentsLocked, segmentIndex, segmentationId, constraintFn, } = operationData;\n    const { imageData, dimensions } = segmentation;\n    const scalarData = segmentation.getScalarData();\n    let rectangleCornersIJK = points.map((world) => {\n        return transformWorldToIndex(imageData, world);\n    });\n    rectangleCornersIJK = rectangleCornersIJK.map((point) => {\n        return point.map((coord) => {\n            return Math.round(coord);\n        });\n    });\n    const boundsIJK = getBoundingBoxAroundShape(rectangleCornersIJK, dimensions);\n    if (boundsIJK.every(([min, max]) => min !== max)) {\n        throw new Error('Oblique segmentation tools are not supported yet');\n    }\n    const pointInRectangle = () => true;\n    const callback = ({ value, index, pointIJK }) => {\n        if (segmentsLocked.includes(value)) {\n            return;\n        }\n        if (!constraintFn) {\n            scalarData[index] = segmentIndex;\n            return;\n        }\n        if (constraintFn(pointIJK)) {\n            scalarData[index] = segmentIndex;\n        }\n    };\n    pointInShapeCallback(imageData, pointInRectangle, callback, boundsIJK);\n    triggerSegmentationDataModified(segmentationId);\n}\nexport function fillInsideRectangle(enabledElement, operationData) {\n    fillRectangle(enabledElement, operationData, true);\n}\nexport function fillOutsideRectangle(enabledElement, operationData) {\n    fillRectangle(enabledElement, operationData, false);\n}\n//# sourceMappingURL=fillRectangle.js.map","import { utilities as csUtils } from '@cornerstonejs/core';\nimport { getBoundingBoxAroundShape } from '../../../utilities/boundingBox';\nimport { triggerSegmentationDataModified } from '../../../stateManagement/segmentation/triggerSegmentationEvents';\nimport { pointInShapeCallback } from '../../../utilities';\nconst { transformWorldToIndex } = csUtils;\nfunction eraseRectangle(enabledElement, operationData, inside = true) {\n    const { volume: segmentation, points, segmentsLocked, segmentationId, } = operationData;\n    const { imageData, dimensions } = segmentation;\n    const scalarData = segmentation.getScalarData();\n    const rectangleCornersIJK = points.map((world) => {\n        return transformWorldToIndex(imageData, world);\n    });\n    const boundsIJK = getBoundingBoxAroundShape(rectangleCornersIJK, dimensions);\n    if (boundsIJK.every(([min, max]) => min !== max)) {\n        throw new Error('Oblique segmentation tools are not supported yet');\n    }\n    const pointInShape = () => true;\n    const callback = ({ value, index }) => {\n        if (segmentsLocked.includes(value)) {\n            return;\n        }\n        scalarData[index] = 0;\n    };\n    pointInShapeCallback(imageData, pointInShape, callback, boundsIJK);\n    triggerSegmentationDataModified(segmentationId);\n}\nexport function eraseInsideRectangle(enabledElement, operationData) {\n    eraseRectangle(enabledElement, operationData, true);\n}\nexport function eraseOutsideRectangle(enabledElement, operationData) {\n    eraseRectangle(enabledElement, operationData, false);\n}\n//# sourceMappingURL=eraseRectangle.js.map","import { cache, getEnabledElement, StackViewport } from '@cornerstonejs/core';\nimport { BaseTool } from '../base';\nimport { fillInsideRectangle } from './strategies/fillRectangle';\nimport { eraseInsideRectangle } from './strategies/eraseRectangle';\nimport { getViewportIdsWithToolToRender } from '../../utilities/viewportFilters';\nimport { Events } from '../../enums';\nimport { drawRect as drawRectSvg } from '../../drawingSvg';\nimport { resetElementCursor, hideElementCursor, } from '../../cursors/elementCursor';\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\nimport { config as segmentationConfig, segmentLocking, segmentIndex as segmentIndexController, activeSegmentation, } from '../../stateManagement/segmentation';\nimport { getSegmentation } from '../../stateManagement/segmentation/segmentationState';\nclass RectangleScissorsTool extends BaseTool {\n    constructor(toolProps = {}, defaultToolProps = {\n        supportedInteractionTypes: ['Mouse', 'Touch'],\n        configuration: {\n            strategies: {\n                FILL_INSIDE: fillInsideRectangle,\n                ERASE_INSIDE: eraseInsideRectangle,\n            },\n            defaultStrategy: 'FILL_INSIDE',\n            activeStrategy: 'FILL_INSIDE',\n        },\n    }) {\n        super(toolProps, defaultToolProps);\n        this.preMouseDownCallback = (evt) => {\n            const eventDetail = evt.detail;\n            const { currentPoints, element } = eventDetail;\n            const worldPos = currentPoints.world;\n            const enabledElement = getEnabledElement(element);\n            const { viewport, renderingEngine } = enabledElement;\n            this.isDrawing = true;\n            const camera = viewport.getCamera();\n            const { viewPlaneNormal, viewUp } = camera;\n            const toolGroupId = this.toolGroupId;\n            const activeSegmentationRepresentation = activeSegmentation.getActiveSegmentationRepresentation(toolGroupId);\n            if (!activeSegmentationRepresentation) {\n                throw new Error('No active segmentation detected, create one before using scissors tool');\n            }\n            const { segmentationRepresentationUID, segmentationId, type } = activeSegmentationRepresentation;\n            const segmentIndex = segmentIndexController.getActiveSegmentIndex(segmentationId);\n            const segmentsLocked = segmentLocking.getLockedSegments(segmentationId);\n            const segmentColor = segmentationConfig.color.getColorForSegmentIndex(toolGroupId, segmentationRepresentationUID, segmentIndex);\n            const { representationData } = getSegmentation(segmentationId);\n            const { volumeId } = representationData[type];\n            const segmentation = cache.getVolume(volumeId);\n            const annotation = {\n                highlighted: true,\n                invalidated: true,\n                metadata: {\n                    viewPlaneNormal: [...viewPlaneNormal],\n                    viewUp: [...viewUp],\n                    FrameOfReferenceUID: viewport.getFrameOfReferenceUID(),\n                    referencedImageId: '',\n                    toolName: this.getToolName(),\n                    segmentColor,\n                },\n                data: {\n                    handles: {\n                        points: [\n                            [...worldPos],\n                            [...worldPos],\n                            [...worldPos],\n                            [...worldPos],\n                        ],\n                        activeHandleIndex: null,\n                    },\n                },\n            };\n            const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n            this.editData = {\n                annotation,\n                segmentation,\n                segmentIndex,\n                segmentsLocked,\n                segmentColor,\n                segmentationId,\n                viewportIdsToRender,\n                handleIndex: 3,\n                movingTextBox: false,\n                newAnnotation: true,\n                hasMoved: false,\n            };\n            this._activateDraw(element);\n            hideElementCursor(element);\n            evt.preventDefault();\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n            return true;\n        };\n        this._dragCallback = (evt) => {\n            this.isDrawing = true;\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            const { annotation, viewportIdsToRender, handleIndex } = this.editData;\n            const { data } = annotation;\n            const { currentPoints } = eventDetail;\n            const enabledElement = getEnabledElement(element);\n            const { worldToCanvas, canvasToWorld } = enabledElement.viewport;\n            const worldPos = currentPoints.world;\n            const { points } = data.handles;\n            points[handleIndex] = [...worldPos];\n            let bottomLeftCanvas;\n            let bottomRightCanvas;\n            let topLeftCanvas;\n            let topRightCanvas;\n            let bottomLeftWorld;\n            let bottomRightWorld;\n            let topLeftWorld;\n            let topRightWorld;\n            switch (handleIndex) {\n                case 0:\n                case 3:\n                    bottomLeftCanvas = worldToCanvas(points[0]);\n                    topRightCanvas = worldToCanvas(points[3]);\n                    bottomRightCanvas = [topRightCanvas[0], bottomLeftCanvas[1]];\n                    topLeftCanvas = [bottomLeftCanvas[0], topRightCanvas[1]];\n                    bottomRightWorld = canvasToWorld(bottomRightCanvas);\n                    topLeftWorld = canvasToWorld(topLeftCanvas);\n                    points[1] = bottomRightWorld;\n                    points[2] = topLeftWorld;\n                    break;\n                case 1:\n                case 2:\n                    bottomRightCanvas = worldToCanvas(points[1]);\n                    topLeftCanvas = worldToCanvas(points[2]);\n                    bottomLeftCanvas = [\n                        topLeftCanvas[0],\n                        bottomRightCanvas[1],\n                    ];\n                    topRightCanvas = [bottomRightCanvas[0], topLeftCanvas[1]];\n                    bottomLeftWorld = canvasToWorld(bottomLeftCanvas);\n                    topRightWorld = canvasToWorld(topRightCanvas);\n                    points[0] = bottomLeftWorld;\n                    points[3] = topRightWorld;\n                    break;\n            }\n            annotation.invalidated = true;\n            this.editData.hasMoved = true;\n            const { renderingEngine } = enabledElement;\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n        };\n        this._endCallback = (evt) => {\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            const { annotation, newAnnotation, hasMoved, segmentation, segmentationId, segmentIndex, segmentsLocked, } = this.editData;\n            const { data } = annotation;\n            if (newAnnotation && !hasMoved) {\n                return;\n            }\n            data.handles.activeHandleIndex = null;\n            this._deactivateDraw(element);\n            resetElementCursor(element);\n            const enabledElement = getEnabledElement(element);\n            const { viewport } = enabledElement;\n            this.editData = null;\n            this.isDrawing = false;\n            if (viewport instanceof StackViewport) {\n                throw new Error('Not implemented yet');\n            }\n            const operationData = {\n                points: data.handles.points,\n                volume: segmentation,\n                segmentationId,\n                segmentIndex,\n                segmentsLocked,\n            };\n            this.applyActiveStrategy(enabledElement, operationData);\n        };\n        this._activateDraw = (element) => {\n            element.addEventListener(Events.MOUSE_UP, this._endCallback);\n            element.addEventListener(Events.MOUSE_DRAG, this._dragCallback);\n            element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n            element.addEventListener(Events.TOUCH_END, this._endCallback);\n            element.addEventListener(Events.TOUCH_DRAG, this._dragCallback);\n            element.addEventListener(Events.TOUCH_TAP, this._endCallback);\n        };\n        this._deactivateDraw = (element) => {\n            element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n            element.removeEventListener(Events.MOUSE_DRAG, this._dragCallback);\n            element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n            element.removeEventListener(Events.TOUCH_TAP, this._endCallback);\n            element.removeEventListener(Events.TOUCH_END, this._endCallback);\n            element.removeEventListener(Events.TOUCH_DRAG, this._dragCallback);\n        };\n        this.renderAnnotation = (enabledElement, svgDrawingHelper) => {\n            let renderStatus = false;\n            if (!this.editData) {\n                return renderStatus;\n            }\n            const { viewport } = enabledElement;\n            const { annotation } = this.editData;\n            const toolMetadata = annotation.metadata;\n            const annotationUID = annotation.annotationUID;\n            const data = annotation.data;\n            const { points } = data.handles;\n            const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n            const color = `rgb(${toolMetadata.segmentColor.slice(0, 3)})`;\n            if (!viewport.getRenderingEngine()) {\n                console.warn('Rendering Engine has been destroyed');\n                return renderStatus;\n            }\n            const rectangleUID = '0';\n            drawRectSvg(svgDrawingHelper, annotationUID, rectangleUID, canvasCoordinates[0], canvasCoordinates[3], {\n                color,\n            });\n            renderStatus = true;\n            return renderStatus;\n        };\n    }\n}\nRectangleScissorsTool.toolName = 'RectangleScissor';\nexport default RectangleScissorsTool;\n//# sourceMappingURL=RectangleScissorsTool.js.map","import { cache, getEnabledElement, StackViewport } from '@cornerstonejs/core';\nimport { BaseTool } from '../base';\nimport { fillInsideCircle } from './strategies/fillCircle';\nimport { Events } from '../../enums';\nimport { drawCircle as drawCircleSvg } from '../../drawingSvg';\nimport { resetElementCursor, hideElementCursor, } from '../../cursors/elementCursor';\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\nimport { segmentLocking, activeSegmentation, segmentIndex as segmentIndexController, config as segmentationConfig, } from '../../stateManagement/segmentation';\nimport { getSegmentation } from '../../stateManagement/segmentation/segmentationState';\nclass CircleScissorsTool extends BaseTool {\n    constructor(toolProps = {}, defaultToolProps = {\n        supportedInteractionTypes: ['Mouse', 'Touch'],\n        configuration: {\n            strategies: {\n                FILL_INSIDE: fillInsideCircle,\n            },\n            defaultStrategy: 'FILL_INSIDE',\n            activeStrategy: 'FILL_INSIDE',\n        },\n    }) {\n        super(toolProps, defaultToolProps);\n        this.preMouseDownCallback = (evt) => {\n            const eventDetail = evt.detail;\n            const { currentPoints, element } = eventDetail;\n            const worldPos = currentPoints.world;\n            const canvasPos = currentPoints.canvas;\n            const enabledElement = getEnabledElement(element);\n            const { viewport, renderingEngine } = enabledElement;\n            this.isDrawing = true;\n            const camera = viewport.getCamera();\n            const { viewPlaneNormal, viewUp } = camera;\n            const toolGroupId = this.toolGroupId;\n            const activeSegmentationRepresentation = activeSegmentation.getActiveSegmentationRepresentation(toolGroupId);\n            if (!activeSegmentationRepresentation) {\n                throw new Error('No active segmentation detected, create one before using scissors tool');\n            }\n            const { segmentationRepresentationUID, segmentationId, type } = activeSegmentationRepresentation;\n            const segmentIndex = segmentIndexController.getActiveSegmentIndex(segmentationId);\n            const segmentsLocked = segmentLocking.getLockedSegments(segmentationId);\n            const segmentColor = segmentationConfig.color.getColorForSegmentIndex(toolGroupId, segmentationRepresentationUID, segmentIndex);\n            const { representationData } = getSegmentation(segmentationId);\n            const { volumeId } = representationData[type];\n            const segmentation = cache.getVolume(volumeId);\n            const annotation = {\n                invalidated: true,\n                highlighted: true,\n                metadata: {\n                    viewPlaneNormal: [...viewPlaneNormal],\n                    viewUp: [...viewUp],\n                    FrameOfReferenceUID: viewport.getFrameOfReferenceUID(),\n                    referencedImageId: '',\n                    toolName: this.getToolName(),\n                    segmentColor,\n                },\n                data: {\n                    handles: {\n                        points: [[...worldPos], [...worldPos], [...worldPos], [...worldPos]],\n                        activeHandleIndex: null,\n                    },\n                    isDrawing: true,\n                    cachedStats: {},\n                },\n            };\n            const viewportIdsToRender = [viewport.id];\n            this.editData = {\n                annotation,\n                segmentation,\n                centerCanvas: canvasPos,\n                segmentIndex,\n                segmentationId,\n                segmentsLocked,\n                segmentColor,\n                viewportIdsToRender,\n                handleIndex: 3,\n                movingTextBox: false,\n                newAnnotation: true,\n                hasMoved: false,\n            };\n            this._activateDraw(element);\n            hideElementCursor(element);\n            evt.preventDefault();\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n            return true;\n        };\n        this._dragCallback = (evt) => {\n            this.isDrawing = true;\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            const { currentPoints } = eventDetail;\n            const currentCanvasPoints = currentPoints.canvas;\n            const enabledElement = getEnabledElement(element);\n            const { renderingEngine, viewport } = enabledElement;\n            const { canvasToWorld } = viewport;\n            const { annotation, viewportIdsToRender, centerCanvas } = this.editData;\n            const { data } = annotation;\n            const dX = Math.abs(currentCanvasPoints[0] - centerCanvas[0]);\n            const dY = Math.abs(currentCanvasPoints[1] - centerCanvas[1]);\n            const radius = Math.sqrt(dX * dX + dY * dY);\n            const bottomCanvas = [\n                centerCanvas[0],\n                centerCanvas[1] + radius,\n            ];\n            const topCanvas = [centerCanvas[0], centerCanvas[1] - radius];\n            const leftCanvas = [\n                centerCanvas[0] - radius,\n                centerCanvas[1],\n            ];\n            const rightCanvas = [\n                centerCanvas[0] + radius,\n                centerCanvas[1],\n            ];\n            data.handles.points = [\n                canvasToWorld(bottomCanvas),\n                canvasToWorld(topCanvas),\n                canvasToWorld(leftCanvas),\n                canvasToWorld(rightCanvas),\n            ];\n            annotation.invalidated = true;\n            this.editData.hasMoved = true;\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n        };\n        this._endCallback = (evt) => {\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            const { annotation, newAnnotation, hasMoved, segmentation, segmentIndex, segmentsLocked, segmentationId, } = this.editData;\n            const { data } = annotation;\n            const { viewPlaneNormal, viewUp } = annotation.metadata;\n            if (newAnnotation && !hasMoved) {\n                return;\n            }\n            data.handles.activeHandleIndex = null;\n            this._deactivateDraw(element);\n            resetElementCursor(element);\n            const enabledElement = getEnabledElement(element);\n            const { viewport } = enabledElement;\n            this.editData = null;\n            this.isDrawing = false;\n            if (viewport instanceof StackViewport) {\n                throw new Error('Not implemented yet');\n            }\n            const operationData = {\n                points: data.handles.points,\n                volume: segmentation,\n                segmentIndex,\n                segmentsLocked,\n                viewPlaneNormal,\n                segmentationId,\n                viewUp,\n            };\n            this.applyActiveStrategy(enabledElement, operationData);\n        };\n        this._activateDraw = (element) => {\n            element.addEventListener(Events.MOUSE_UP, this._endCallback);\n            element.addEventListener(Events.MOUSE_DRAG, this._dragCallback);\n            element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n            element.addEventListener(Events.TOUCH_TAP, this._endCallback);\n            element.addEventListener(Events.TOUCH_DRAG, this._dragCallback);\n            element.addEventListener(Events.TOUCH_END, this._endCallback);\n        };\n        this._deactivateDraw = (element) => {\n            element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n            element.removeEventListener(Events.MOUSE_DRAG, this._dragCallback);\n            element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n            element.removeEventListener(Events.TOUCH_END, this._endCallback);\n            element.removeEventListener(Events.TOUCH_DRAG, this._dragCallback);\n            element.removeEventListener(Events.TOUCH_TAP, this._endCallback);\n        };\n        this.renderAnnotation = (enabledElement, svgDrawingHelper) => {\n            let renderStatus = false;\n            if (!this.editData) {\n                return renderStatus;\n            }\n            const { viewport } = enabledElement;\n            const { viewportIdsToRender } = this.editData;\n            if (!viewportIdsToRender.includes(viewport.id)) {\n                return renderStatus;\n            }\n            const { annotation } = this.editData;\n            const toolMetadata = annotation.metadata;\n            const annotationUID = annotation.annotationUID;\n            const data = annotation.data;\n            const { points } = data.handles;\n            const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n            const bottom = canvasCoordinates[0];\n            const top = canvasCoordinates[1];\n            const center = [\n                Math.floor((bottom[0] + top[0]) / 2),\n                Math.floor((bottom[1] + top[1]) / 2),\n            ];\n            const radius = Math.abs(bottom[1] - Math.floor((bottom[1] + top[1]) / 2));\n            const color = `rgb(${toolMetadata.segmentColor.slice(0, 3)})`;\n            if (!viewport.getRenderingEngine()) {\n                console.warn('Rendering Engine has been destroyed');\n                return renderStatus;\n            }\n            const circleUID = '0';\n            drawCircleSvg(svgDrawingHelper, annotationUID, circleUID, center, radius, {\n                color,\n            });\n            renderStatus = true;\n            return renderStatus;\n        };\n    }\n}\nCircleScissorsTool.toolName = 'CircleScissor';\nexport default CircleScissorsTool;\n//# sourceMappingURL=CircleScissorsTool.js.map","import { cache, getEnabledElement, StackViewport } from '@cornerstonejs/core';\nimport { BaseTool } from '../base';\nimport { fillInsideSphere } from './strategies/fillSphere';\nimport { Events } from '../../enums';\nimport { drawCircle as drawCircleSvg } from '../../drawingSvg';\nimport { resetElementCursor, hideElementCursor, } from '../../cursors/elementCursor';\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\nimport { config as segmentationConfig, segmentLocking, segmentIndex as segmentIndexController, activeSegmentation, } from '../../stateManagement/segmentation';\nimport { getSegmentation } from '../../stateManagement/segmentation/segmentationState';\nclass SphereScissorsTool extends BaseTool {\n    constructor(toolProps = {}, defaultToolProps = {\n        supportedInteractionTypes: ['Mouse', 'Touch'],\n        configuration: {\n            strategies: {\n                FILL_INSIDE: fillInsideSphere,\n            },\n            defaultStrategy: 'FILL_INSIDE',\n            activeStrategy: 'FILL_INSIDE',\n        },\n    }) {\n        super(toolProps, defaultToolProps);\n        this.preMouseDownCallback = (evt) => {\n            const eventDetail = evt.detail;\n            const { currentPoints, element } = eventDetail;\n            const worldPos = currentPoints.world;\n            const canvasPos = currentPoints.canvas;\n            const enabledElement = getEnabledElement(element);\n            const { viewport, renderingEngine } = enabledElement;\n            this.isDrawing = true;\n            const camera = viewport.getCamera();\n            const { viewPlaneNormal, viewUp } = camera;\n            const toolGroupId = this.toolGroupId;\n            const activeSegmentationRepresentation = activeSegmentation.getActiveSegmentationRepresentation(toolGroupId);\n            if (!activeSegmentationRepresentation) {\n                throw new Error('No active segmentation detected, create one before using scissors tool');\n            }\n            const { segmentationRepresentationUID, segmentationId, type } = activeSegmentationRepresentation;\n            const segmentIndex = segmentIndexController.getActiveSegmentIndex(segmentationId);\n            const segmentsLocked = segmentLocking.getLockedSegments(segmentationId);\n            const segmentColor = segmentationConfig.color.getColorForSegmentIndex(toolGroupId, segmentationRepresentationUID, segmentIndex);\n            const { representationData } = getSegmentation(segmentationId);\n            const { volumeId } = representationData[type];\n            const segmentation = cache.getVolume(volumeId);\n            this.isDrawing = true;\n            const annotation = {\n                metadata: {\n                    viewPlaneNormal: [...viewPlaneNormal],\n                    viewUp: [...viewUp],\n                    FrameOfReferenceUID: viewport.getFrameOfReferenceUID(),\n                    referencedImageId: '',\n                    toolName: this.getToolName(),\n                    segmentColor,\n                },\n                data: {\n                    invalidated: true,\n                    handles: {\n                        points: [[...worldPos], [...worldPos], [...worldPos], [...worldPos]],\n                        activeHandleIndex: null,\n                    },\n                    cachedStats: {},\n                    highlighted: true,\n                },\n            };\n            const viewportIdsToRender = [viewport.id];\n            this.editData = {\n                annotation,\n                segmentation,\n                centerCanvas: canvasPos,\n                segmentIndex,\n                segmentsLocked,\n                segmentColor,\n                segmentationId,\n                toolGroupId,\n                viewportIdsToRender,\n                handleIndex: 3,\n                movingTextBox: false,\n                newAnnotation: true,\n                hasMoved: false,\n            };\n            this._activateDraw(element);\n            hideElementCursor(element);\n            evt.preventDefault();\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n            return true;\n        };\n        this._dragCallback = (evt) => {\n            this.isDrawing = true;\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            const { currentPoints } = eventDetail;\n            const currentCanvasPoints = currentPoints.canvas;\n            const enabledElement = getEnabledElement(element);\n            const { renderingEngine, viewport } = enabledElement;\n            const { canvasToWorld } = viewport;\n            const { annotation, viewportIdsToRender, centerCanvas } = this.editData;\n            const { data } = annotation;\n            const dX = Math.abs(currentCanvasPoints[0] - centerCanvas[0]);\n            const dY = Math.abs(currentCanvasPoints[1] - centerCanvas[1]);\n            const radius = Math.sqrt(dX * dX + dY * dY);\n            const bottomCanvas = [\n                centerCanvas[0],\n                centerCanvas[1] + radius,\n            ];\n            const topCanvas = [centerCanvas[0], centerCanvas[1] - radius];\n            const leftCanvas = [\n                centerCanvas[0] - radius,\n                centerCanvas[1],\n            ];\n            const rightCanvas = [\n                centerCanvas[0] + radius,\n                centerCanvas[1],\n            ];\n            data.handles.points = [\n                canvasToWorld(bottomCanvas),\n                canvasToWorld(topCanvas),\n                canvasToWorld(leftCanvas),\n                canvasToWorld(rightCanvas),\n            ];\n            annotation.invalidated = true;\n            this.editData.hasMoved = true;\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n        };\n        this._endCallback = (evt) => {\n            const eventDetail = evt.detail;\n            const { element } = eventDetail;\n            const { annotation, newAnnotation, hasMoved, segmentation, segmentIndex, segmentsLocked, segmentationId, } = this.editData;\n            const { data } = annotation;\n            const { viewPlaneNormal, viewUp } = annotation.metadata;\n            if (newAnnotation && !hasMoved) {\n                return;\n            }\n            annotation.highlighted = false;\n            data.handles.activeHandleIndex = null;\n            this._deactivateDraw(element);\n            resetElementCursor(element);\n            const enabledElement = getEnabledElement(element);\n            const { viewport } = enabledElement;\n            this.editData = null;\n            this.isDrawing = false;\n            if (viewport instanceof StackViewport) {\n                throw new Error('Not implemented yet');\n            }\n            const operationData = {\n                points: data.handles.points,\n                volume: segmentation,\n                segmentIndex,\n                segmentsLocked,\n                segmentationId,\n                viewPlaneNormal,\n                viewUp,\n            };\n            this.applyActiveStrategy(enabledElement, operationData);\n        };\n        this._activateDraw = (element) => {\n            element.addEventListener(Events.MOUSE_UP, this._endCallback);\n            element.addEventListener(Events.MOUSE_DRAG, this._dragCallback);\n            element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n            element.addEventListener(Events.TOUCH_END, this._endCallback);\n            element.addEventListener(Events.TOUCH_TAP, this._endCallback);\n            element.addEventListener(Events.TOUCH_DRAG, this._dragCallback);\n        };\n        this._deactivateDraw = (element) => {\n            element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n            element.removeEventListener(Events.MOUSE_DRAG, this._dragCallback);\n            element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n            element.removeEventListener(Events.TOUCH_END, this._endCallback);\n            element.removeEventListener(Events.TOUCH_DRAG, this._dragCallback);\n            element.removeEventListener(Events.TOUCH_TAP, this._endCallback);\n        };\n        this.renderAnnotation = (enabledElement, svgDrawingHelper) => {\n            let renderStatus = false;\n            if (!this.editData) {\n                return renderStatus;\n            }\n            const { viewport } = enabledElement;\n            const { viewportIdsToRender } = this.editData;\n            if (!viewportIdsToRender.includes(viewport.id)) {\n                return renderStatus;\n            }\n            const { annotation } = this.editData;\n            const toolMetadata = annotation.metadata;\n            const annotationUID = annotation.annotationUID;\n            const data = annotation.data;\n            const { points } = data.handles;\n            const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n            const bottom = canvasCoordinates[0];\n            const top = canvasCoordinates[1];\n            const center = [\n                Math.floor((bottom[0] + top[0]) / 2),\n                Math.floor((bottom[1] + top[1]) / 2),\n            ];\n            const radius = Math.abs(bottom[1] - Math.floor((bottom[1] + top[1]) / 2));\n            const color = `rgb(${toolMetadata.segmentColor.slice(0, 3)})`;\n            if (!viewport.getRenderingEngine()) {\n                console.warn('Rendering Engine has been destroyed');\n                return renderStatus;\n            }\n            const circleUID = '0';\n            drawCircleSvg(svgDrawingHelper, annotationUID, circleUID, center, radius, {\n                color,\n            });\n            renderStatus = true;\n            return renderStatus;\n        };\n    }\n}\nSphereScissorsTool.toolName = 'SphereScissor';\nexport default SphereScissorsTool;\n//# sourceMappingURL=SphereScissorsTool.js.map","import { getEnabledElement, cache, StackViewport, triggerEvent, eventTarget, utilities as csUtils, } from '@cornerstonejs/core';\nimport { addAnnotation, getAnnotations } from '../../stateManagement';\nimport { isAnnotationLocked } from '../../stateManagement/annotation/annotationLocking';\nimport { Events } from '../../enums';\nimport { drawHandles as drawHandlesSvg, drawRect as drawRectSvg, } from '../../drawingSvg';\nimport { getViewportIdsWithToolToRender } from '../../utilities/viewportFilters';\nimport { hideElementCursor } from '../../cursors/elementCursor';\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\nimport { isAnnotationVisible } from '../../stateManagement/annotation/annotationVisibility';\nimport RectangleROITool from '../annotation/RectangleROITool';\nclass RectangleROIThresholdTool extends RectangleROITool {\n    constructor(toolProps = {}, defaultToolProps = {\n        supportedInteractionTypes: ['Mouse', 'Touch'],\n        configuration: {\n            shadow: true,\n            preventHandleOutsideImage: false,\n        },\n    }) {\n        super(toolProps, defaultToolProps);\n        this.addNewAnnotation = (evt) => {\n            const eventDetail = evt.detail;\n            const { currentPoints, element } = eventDetail;\n            const worldPos = currentPoints.world;\n            const enabledElement = getEnabledElement(element);\n            const { viewport, renderingEngine } = enabledElement;\n            this.isDrawing = true;\n            const camera = viewport.getCamera();\n            const { viewPlaneNormal, viewUp } = camera;\n            const targetId = this.getTargetId(viewport);\n            let referencedImageId, volumeId;\n            if (viewport instanceof StackViewport) {\n                referencedImageId = targetId.split('imageId:')[1];\n            }\n            else {\n                volumeId = targetId.split('volumeId:')[1];\n                const imageVolume = cache.getVolume(volumeId);\n                referencedImageId = csUtils.getClosestImageId(imageVolume, worldPos, viewPlaneNormal);\n            }\n            const FrameOfReferenceUID = viewport.getFrameOfReferenceUID();\n            const annotation = {\n                highlighted: true,\n                invalidated: true,\n                metadata: {\n                    viewPlaneNormal: [...viewPlaneNormal],\n                    enabledElement,\n                    viewUp: [...viewUp],\n                    FrameOfReferenceUID,\n                    referencedImageId,\n                    toolName: this.getToolName(),\n                    volumeId,\n                },\n                data: {\n                    label: '',\n                    handles: {\n                        textBox: {\n                            hasMoved: false,\n                            worldPosition: null,\n                            worldBoundingBox: null,\n                        },\n                        points: [\n                            [...worldPos],\n                            [...worldPos],\n                            [...worldPos],\n                            [...worldPos],\n                        ],\n                        activeHandleIndex: null,\n                    },\n                    segmentationId: null,\n                },\n            };\n            addAnnotation(annotation, element);\n            const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n            this.editData = {\n                annotation,\n                viewportIdsToRender,\n                handleIndex: 3,\n                newAnnotation: true,\n                hasMoved: false,\n            };\n            this._activateDraw(element);\n            hideElementCursor(element);\n            evt.preventDefault();\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n            return annotation;\n        };\n        this.renderAnnotation = (enabledElement, svgDrawingHelper) => {\n            let renderStatus = false;\n            const { viewport, renderingEngineId } = enabledElement;\n            const { element } = viewport;\n            let annotations = getAnnotations(this.getToolName(), element);\n            if (!annotations?.length) {\n                return renderStatus;\n            }\n            annotations = this.filterInteractableAnnotationsForElement(element, annotations);\n            if (!annotations?.length) {\n                return renderStatus;\n            }\n            const styleSpecifier = {\n                toolGroupId: this.toolGroupId,\n                toolName: this.getToolName(),\n                viewportId: enabledElement.viewport.id,\n            };\n            for (let i = 0; i < annotations.length; i++) {\n                const annotation = annotations[i];\n                const { annotationUID, data } = annotation;\n                const { points, activeHandleIndex } = data.handles;\n                const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n                styleSpecifier.annotationUID = annotationUID;\n                const lineWidth = this.getStyle('lineWidth', styleSpecifier, annotation);\n                const lineDash = this.getStyle('lineDash', styleSpecifier, annotation);\n                const color = this.getStyle('color', styleSpecifier, annotation);\n                if (!viewport.getRenderingEngine()) {\n                    console.warn('Rendering Engine has been destroyed');\n                    return renderStatus;\n                }\n                const eventType = Events.ANNOTATION_MODIFIED;\n                const eventDetail = {\n                    annotation,\n                    viewportId: viewport.id,\n                    renderingEngineId,\n                };\n                triggerEvent(eventTarget, eventType, eventDetail);\n                let activeHandleCanvasCoords;\n                if (!isAnnotationVisible(annotationUID)) {\n                    continue;\n                }\n                if (!isAnnotationLocked(annotation) &&\n                    !this.editData &&\n                    activeHandleIndex !== null) {\n                    activeHandleCanvasCoords = [canvasCoordinates[activeHandleIndex]];\n                }\n                if (activeHandleCanvasCoords) {\n                    const handleGroupUID = '0';\n                    drawHandlesSvg(svgDrawingHelper, annotationUID, handleGroupUID, activeHandleCanvasCoords, {\n                        color,\n                    });\n                }\n                const rectangleUID = '0';\n                drawRectSvg(svgDrawingHelper, annotationUID, rectangleUID, canvasCoordinates[0], canvasCoordinates[3], {\n                    color,\n                    lineDash,\n                    lineWidth,\n                });\n                renderStatus = true;\n            }\n            return renderStatus;\n        };\n    }\n}\nRectangleROIThresholdTool.toolName = 'RectangleROIThreshold';\nexport default RectangleROIThresholdTool;\n//# sourceMappingURL=RectangleROIThresholdTool.js.map","import { getEnabledElement, cache, StackViewport, metaData, triggerEvent, eventTarget, utilities as csUtils, } from '@cornerstonejs/core';\nimport { vec3 } from 'gl-matrix';\nimport { Events } from '../../enums';\nimport { addAnnotation, getAnnotations } from '../../stateManagement';\nimport { isAnnotationLocked } from '../../stateManagement/annotation/annotationLocking';\nimport { drawHandles as drawHandlesSvg, drawRect as drawRectSvg, } from '../../drawingSvg';\nimport { getViewportIdsWithToolToRender } from '../../utilities/viewportFilters';\nimport throttle from '../../utilities/throttle';\nimport { isAnnotationVisible } from '../../stateManagement/annotation/annotationVisibility';\nimport { hideElementCursor } from '../../cursors/elementCursor';\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\nimport RectangleROITool from '../annotation/RectangleROITool';\nconst { transformWorldToIndex } = csUtils;\nclass RectangleROIStartEndThresholdTool extends RectangleROITool {\n    constructor(toolProps = {}, defaultToolProps = {\n        configuration: {\n            numSlicesToPropagate: 10,\n        },\n    }) {\n        super(toolProps, defaultToolProps);\n        this.addNewAnnotation = (evt) => {\n            const eventDetail = evt.detail;\n            const { currentPoints, element } = eventDetail;\n            const worldPos = currentPoints.world;\n            const enabledElement = getEnabledElement(element);\n            const { viewport, renderingEngine } = enabledElement;\n            this.isDrawing = true;\n            const camera = viewport.getCamera();\n            const { viewPlaneNormal, viewUp } = camera;\n            let referencedImageId, imageVolume, volumeId;\n            if (viewport instanceof StackViewport) {\n                throw new Error('Stack Viewport Not implemented');\n            }\n            else {\n                const targetId = this.getTargetId(viewport);\n                volumeId = targetId.split('volumeId:')[1];\n                imageVolume = cache.getVolume(volumeId);\n                referencedImageId = csUtils.getClosestImageId(imageVolume, worldPos, viewPlaneNormal);\n            }\n            if (!referencedImageId) {\n                throw new Error('This tool does not work on non-acquisition planes');\n            }\n            const startIndex = viewport.getCurrentImageIdIndex();\n            const spacingInNormal = csUtils.getSpacingInNormalDirection(imageVolume, viewPlaneNormal);\n            const endIndex = this._getEndSliceIndex(imageVolume, worldPos, spacingInNormal, viewPlaneNormal);\n            const FrameOfReferenceUID = viewport.getFrameOfReferenceUID();\n            const annotation = {\n                highlighted: true,\n                invalidated: true,\n                metadata: {\n                    viewPlaneNormal: [...viewPlaneNormal],\n                    enabledElement,\n                    viewUp: [...viewUp],\n                    FrameOfReferenceUID,\n                    referencedImageId,\n                    toolName: this.getToolName(),\n                    volumeId,\n                    spacingInNormal,\n                },\n                data: {\n                    label: '',\n                    startSlice: startIndex,\n                    endSlice: endIndex,\n                    cachedStats: {\n                        projectionPoints: [],\n                        projectionPointsImageIds: [referencedImageId],\n                    },\n                    handles: {\n                        textBox: {\n                            hasMoved: false,\n                            worldPosition: null,\n                            worldBoundingBox: null,\n                        },\n                        points: [\n                            [...worldPos],\n                            [...worldPos],\n                            [...worldPos],\n                            [...worldPos],\n                        ],\n                        activeHandleIndex: null,\n                    },\n                    labelmapUID: null,\n                },\n            };\n            this._computeProjectionPoints(annotation, imageVolume);\n            addAnnotation(annotation, element);\n            const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n            this.editData = {\n                annotation,\n                viewportIdsToRender,\n                handleIndex: 3,\n                newAnnotation: true,\n                hasMoved: false,\n            };\n            this._activateDraw(element);\n            hideElementCursor(element);\n            evt.preventDefault();\n            triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n            return annotation;\n        };\n        this.renderAnnotation = (enabledElement, svgDrawingHelper) => {\n            let renderStatus = false;\n            const { viewport } = enabledElement;\n            const annotations = getAnnotations(this.getToolName(), viewport.element);\n            if (!annotations?.length) {\n                return renderStatus;\n            }\n            const sliceIndex = viewport.getCurrentImageIdIndex();\n            const styleSpecifier = {\n                toolGroupId: this.toolGroupId,\n                toolName: this.getToolName(),\n                viewportId: enabledElement.viewport.id,\n            };\n            for (let i = 0; i < annotations.length; i++) {\n                const annotation = annotations[i];\n                const { annotationUID, data } = annotation;\n                const { startSlice, endSlice } = data;\n                const { points, activeHandleIndex } = data.handles;\n                const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n                styleSpecifier.annotationUID = annotationUID;\n                const lineWidth = this.getStyle('lineWidth', styleSpecifier, annotation);\n                const lineDash = this.getStyle('lineDash', styleSpecifier, annotation);\n                const color = this.getStyle('color', styleSpecifier, annotation);\n                if (sliceIndex < Math.min(startSlice, endSlice) ||\n                    sliceIndex > Math.max(startSlice, endSlice)) {\n                    continue;\n                }\n                if (annotation.invalidated) {\n                    this._throttledCalculateCachedStats(annotation, enabledElement);\n                }\n                let firstOrLastSlice = false;\n                if (sliceIndex === startSlice || sliceIndex === endSlice) {\n                    firstOrLastSlice = true;\n                }\n                if (!viewport.getRenderingEngine()) {\n                    console.warn('Rendering Engine has been destroyed');\n                    return renderStatus;\n                }\n                let activeHandleCanvasCoords;\n                if (!isAnnotationVisible(annotationUID)) {\n                    continue;\n                }\n                if (!isAnnotationLocked(annotation) &&\n                    !this.editData &&\n                    activeHandleIndex !== null &&\n                    firstOrLastSlice) {\n                    activeHandleCanvasCoords = [canvasCoordinates[activeHandleIndex]];\n                }\n                if (activeHandleCanvasCoords) {\n                    const handleGroupUID = '0';\n                    drawHandlesSvg(svgDrawingHelper, annotationUID, handleGroupUID, activeHandleCanvasCoords, {\n                        color,\n                    });\n                }\n                let lineDashToUse = lineDash;\n                if (!firstOrLastSlice) {\n                    lineDashToUse = 2;\n                }\n                const rectangleUID = '0';\n                drawRectSvg(svgDrawingHelper, annotationUID, rectangleUID, canvasCoordinates[0], canvasCoordinates[3], {\n                    color,\n                    lineDash: lineDashToUse,\n                    lineWidth,\n                });\n                renderStatus = true;\n            }\n            return renderStatus;\n        };\n        this._throttledCalculateCachedStats = throttle(this._calculateCachedStatsTool, 100, { trailing: true });\n    }\n    _computeProjectionPoints(annotation, imageVolume) {\n        const { data, metadata } = annotation;\n        const { viewPlaneNormal, spacingInNormal } = metadata;\n        const { imageData } = imageVolume;\n        const { startSlice, endSlice } = data;\n        const { points } = data.handles;\n        const startIJK = transformWorldToIndex(imageData, points[0]);\n        if (startIJK[2] !== startSlice) {\n            throw new Error('Start slice does not match');\n        }\n        const endIJK = vec3.fromValues(startIJK[0], startIJK[1], endSlice);\n        const startWorld = vec3.create();\n        imageData.indexToWorldVec3(startIJK, startWorld);\n        const endWorld = vec3.create();\n        imageData.indexToWorldVec3(endIJK, endWorld);\n        const distance = vec3.distance(startWorld, endWorld);\n        const newProjectionPoints = [];\n        for (let dist = 0; dist < distance; dist += spacingInNormal) {\n            newProjectionPoints.push(points.map((point) => {\n                const newPoint = vec3.create();\n                vec3.scaleAndAdd(newPoint, point, viewPlaneNormal, dist);\n                return Array.from(newPoint);\n            }));\n        }\n        data.cachedStats.projectionPoints = newProjectionPoints;\n        const projectionPointsImageIds = [];\n        for (const RectanglePoints of newProjectionPoints) {\n            const imageId = csUtils.getClosestImageId(imageVolume, RectanglePoints[0], viewPlaneNormal);\n            projectionPointsImageIds.push(imageId);\n        }\n        data.cachedStats.projectionPointsImageIds = projectionPointsImageIds;\n    }\n    _calculateCachedStatsTool(annotation, enabledElement) {\n        const data = annotation.data;\n        const { viewportId, renderingEngineId, viewport } = enabledElement;\n        const { cachedStats } = data;\n        const volumeId = this.getTargetId(viewport);\n        const imageVolume = cache.getVolume(volumeId.split('volumeId:')[1]);\n        this._computeProjectionPoints(annotation, imageVolume);\n        annotation.invalidated = false;\n        const eventType = Events.ANNOTATION_MODIFIED;\n        const eventDetail = {\n            annotation,\n            viewportId,\n            renderingEngineId,\n        };\n        triggerEvent(eventTarget, eventType, eventDetail);\n        return cachedStats;\n    }\n    _getEndSliceIndex(imageVolume, worldPos, spacingInNormal, viewPlaneNormal) {\n        const numSlicesToPropagate = this.configuration.numSlicesToPropagate;\n        const endPos = vec3.create();\n        vec3.scaleAndAdd(endPos, worldPos, viewPlaneNormal, numSlicesToPropagate * spacingInNormal);\n        const halfSpacingInNormalDirection = spacingInNormal / 2;\n        const { imageIds } = imageVolume;\n        let imageIdIndex;\n        for (let i = 0; i < imageIds.length; i++) {\n            const imageId = imageIds[i];\n            const { imagePositionPatient } = metaData.get('imagePlaneModule', imageId);\n            const dir = vec3.create();\n            vec3.sub(dir, endPos, imagePositionPatient);\n            const dot = vec3.dot(dir, viewPlaneNormal);\n            if (Math.abs(dot) < halfSpacingInNormalDirection) {\n                imageIdIndex = i;\n            }\n        }\n        return imageIdIndex;\n    }\n}\nRectangleROIStartEndThresholdTool.toolName = 'RectangleROIStartEndThreshold';\nexport default RectangleROIStartEndThresholdTool;\n//# sourceMappingURL=RectangleROIStartEndThresholdTool.js.map","function floodFill(getter, seed, options = {}) {\n    const onFlood = options.onFlood;\n    const onBoundary = options.onBoundary;\n    const equals = options.equals || defaultEquals;\n    const diagonals = options.diagonals || false;\n    const startNode = get(seed);\n    const permutations = prunedPermutations();\n    const stack = [];\n    const flooded = [];\n    const visits = {};\n    const bounds = {};\n    stack.push({ currentArgs: seed });\n    while (stack.length > 0) {\n        flood(stack.pop());\n    }\n    return {\n        flooded,\n        boundaries: boundaries(),\n    };\n    function flood(job) {\n        const getArgs = job.currentArgs;\n        const prevArgs = job.previousArgs;\n        if (visited(getArgs)) {\n            return;\n        }\n        markAsVisited(getArgs);\n        if (member(getArgs)) {\n            markAsFlooded(getArgs);\n            pushAdjacent(getArgs);\n        }\n        else {\n            markAsBoundary(prevArgs);\n        }\n    }\n    function visited(key) {\n        return visits[key] === true;\n    }\n    function markAsVisited(key) {\n        visits[key] = true;\n    }\n    function member(getArgs) {\n        const node = safely(get, [getArgs]);\n        return safely(equals, [node, startNode]);\n    }\n    function markAsFlooded(getArgs) {\n        flooded.push(getArgs);\n        if (onFlood) {\n            onFlood(...getArgs);\n        }\n    }\n    function markAsBoundary(prevArgs) {\n        bounds[prevArgs] = prevArgs;\n        if (onBoundary) {\n            onBoundary(...prevArgs);\n        }\n    }\n    function pushAdjacent(getArgs) {\n        for (let i = 0; i < permutations.length; i += 1) {\n            const perm = permutations[i];\n            const nextArgs = getArgs.slice(0);\n            for (let j = 0; j < getArgs.length; j += 1) {\n                nextArgs[j] += perm[j];\n            }\n            stack.push({\n                currentArgs: nextArgs,\n                previousArgs: getArgs,\n            });\n        }\n    }\n    function get(getArgs) {\n        return getter(...getArgs);\n    }\n    function safely(f, args) {\n        try {\n            return f(...args);\n        }\n        catch (error) {\n            return;\n        }\n    }\n    function prunedPermutations() {\n        const permutations = permute(seed.length);\n        return permutations.filter(function (perm) {\n            const count = countNonZeroes(perm);\n            return count !== 0 && (count === 1 || diagonals);\n        });\n    }\n    function permute(length) {\n        const perms = [];\n        const permutation = function (string) {\n            return string.split('').map(function (c) {\n                return parseInt(c, 10) - 1;\n            });\n        };\n        for (let i = 0; i < Math.pow(3, length); i += 1) {\n            const string = lpad(i.toString(3), '0', length);\n            perms.push(permutation(string));\n        }\n        return perms;\n    }\n    function boundaries() {\n        const array = [];\n        for (const key in bounds) {\n            if (bounds[key] !== undefined) {\n                array.unshift(bounds[key]);\n            }\n        }\n        return array;\n    }\n}\nfunction defaultEquals(a, b) {\n    return a === b;\n}\nfunction countNonZeroes(array) {\n    let count = 0;\n    for (let i = 0; i < array.length; i += 1) {\n        if (array[i] !== 0) {\n            count += 1;\n        }\n    }\n    return count;\n}\nfunction lpad(string, character, length) {\n    const array = new Array(length + 1);\n    const pad = array.join(character);\n    return (pad + string).slice(-length);\n}\nexport default floodFill;\n//# sourceMappingURL=floodFill.js.map","import { cache, getEnabledElement, utilities as csUtils, } from '@cornerstonejs/core';\nimport { BaseTool } from '../base';\nimport { triggerSegmentationDataModified } from '../../stateManagement/segmentation/triggerSegmentationEvents';\nimport { segmentLocking, activeSegmentation, segmentIndex as segmentIndexController, } from '../../stateManagement/segmentation';\nimport floodFill from '../../utilities/segmentation/floodFill';\nimport { getSegmentation } from '../../stateManagement/segmentation/segmentationState';\nconst { transformWorldToIndex, isEqual } = csUtils;\nclass PaintFillTool extends BaseTool {\n    constructor(toolProps = {}, defaultToolProps = {\n        supportedInteractionTypes: ['Mouse', 'Touch'],\n    }) {\n        super(toolProps, defaultToolProps);\n        this.preMouseDownCallback = (evt) => {\n            const eventDetail = evt.detail;\n            const { currentPoints, element } = eventDetail;\n            const worldPos = currentPoints.world;\n            const enabledElement = getEnabledElement(element);\n            const { viewport } = enabledElement;\n            const camera = viewport.getCamera();\n            const { viewPlaneNormal } = camera;\n            const toolGroupId = this.toolGroupId;\n            const activeSegmentationRepresentation = activeSegmentation.getActiveSegmentationRepresentation(toolGroupId);\n            if (!activeSegmentationRepresentation) {\n                throw new Error('No active segmentation detected, create one before using scissors tool');\n            }\n            const { segmentationId, type } = activeSegmentationRepresentation;\n            const segmentIndex = segmentIndexController.getActiveSegmentIndex(segmentationId);\n            const segmentsLocked = segmentLocking.getLockedSegments(segmentationId);\n            const { representationData } = getSegmentation(segmentationId);\n            const { volumeId } = representationData[type];\n            const segmentation = cache.getVolume(volumeId);\n            const { dimensions, direction } = segmentation;\n            const scalarData = segmentation.getScalarData();\n            const index = transformWorldToIndex(segmentation.imageData, worldPos);\n            const fixedDimension = this.getFixedDimension(viewPlaneNormal, direction);\n            if (fixedDimension === undefined) {\n                console.warn('Oblique paint fill not yet supported');\n                return;\n            }\n            const { floodFillGetter, getLabelValue, getScalarDataPositionFromPlane, inPlaneSeedPoint, fixedDimensionValue, } = this.generateHelpers(scalarData, dimensions, index, fixedDimension);\n            if (index[0] < 0 ||\n                index[0] >= dimensions[0] ||\n                index[1] < 0 ||\n                index[1] >= dimensions[1] ||\n                index[2] < 0 ||\n                index[2] >= dimensions[2]) {\n                return;\n            }\n            const clickedLabelValue = getLabelValue(index[0], index[1], index[2]);\n            if (segmentsLocked.includes(clickedLabelValue)) {\n                return;\n            }\n            const floodFillResult = floodFill(floodFillGetter, inPlaneSeedPoint);\n            const { flooded } = floodFillResult;\n            flooded.forEach((index) => {\n                const scalarDataPosition = getScalarDataPositionFromPlane(index[0], index[1]);\n                scalarData[scalarDataPosition] = segmentIndex;\n            });\n            const framesModified = this.getFramesModified(fixedDimension, fixedDimensionValue, floodFillResult);\n            triggerSegmentationDataModified(segmentationId, framesModified);\n            return true;\n        };\n        this.getFramesModified = (fixedDimension, fixedDimensionValue, floodFillResult) => {\n            const { boundaries } = floodFillResult;\n            if (fixedDimension === 2) {\n                return [fixedDimensionValue];\n            }\n            let minJ = Infinity;\n            let maxJ = -Infinity;\n            for (let b = 0; b < boundaries.length; b++) {\n                const j = boundaries[b][1];\n                if (j < minJ)\n                    minJ = j;\n                if (j > maxJ)\n                    maxJ = j;\n            }\n            const framesModified = [];\n            for (let frame = minJ; frame <= maxJ; frame++) {\n                framesModified.push(frame);\n            }\n            return framesModified;\n        };\n        this.generateHelpers = (scalarData, dimensions, seedIndex3D, fixedDimension = 2) => {\n            let fixedDimensionValue;\n            let inPlaneSeedPoint;\n            switch (fixedDimension) {\n                case 0:\n                    fixedDimensionValue = seedIndex3D[0];\n                    inPlaneSeedPoint = [seedIndex3D[1], seedIndex3D[2]];\n                    break;\n                case 1:\n                    fixedDimensionValue = seedIndex3D[1];\n                    inPlaneSeedPoint = [seedIndex3D[0], seedIndex3D[2]];\n                    break;\n                case 2:\n                    fixedDimensionValue = seedIndex3D[2];\n                    inPlaneSeedPoint = [seedIndex3D[0], seedIndex3D[1]];\n                    break;\n                default:\n                    throw new Error(`Invalid fixedDimension: ${fixedDimension}`);\n            }\n            const getScalarDataPosition = (x, y, z) => {\n                return z * dimensions[1] * dimensions[0] + y * dimensions[0] + x;\n            };\n            const getLabelValue = (x, y, z) => {\n                return scalarData[getScalarDataPosition(x, y, z)];\n            };\n            const floodFillGetter = this.generateFloodFillGetter(dimensions, fixedDimension, fixedDimensionValue, getLabelValue);\n            const getScalarDataPositionFromPlane = this.generateGetScalarDataPositionFromPlane(getScalarDataPosition, fixedDimension, fixedDimensionValue);\n            return {\n                getScalarDataPositionFromPlane,\n                getLabelValue,\n                floodFillGetter,\n                inPlaneSeedPoint,\n                fixedDimensionValue,\n            };\n        };\n        this.generateFloodFillGetter = (dimensions, fixedDimension, fixedDimensionValue, getLabelValue) => {\n            let floodFillGetter;\n            switch (fixedDimension) {\n                case 0:\n                    floodFillGetter = (y, z) => {\n                        if (y >= dimensions[1] || y < 0 || z >= dimensions[2] || z < 0) {\n                            return;\n                        }\n                        return getLabelValue(fixedDimensionValue, y, z);\n                    };\n                    break;\n                case 1:\n                    floodFillGetter = (x, z) => {\n                        if (x >= dimensions[0] || x < 0 || z >= dimensions[2] || z < 0) {\n                            return;\n                        }\n                        return getLabelValue(x, fixedDimensionValue, z);\n                    };\n                    break;\n                case 2:\n                    floodFillGetter = (x, y) => {\n                        if (x >= dimensions[0] || x < 0 || y >= dimensions[1] || y < 0) {\n                            return;\n                        }\n                        return getLabelValue(x, y, fixedDimensionValue);\n                    };\n                    break;\n                default:\n                    throw new Error(`Invalid fixedDimension: ${fixedDimension}`);\n            }\n            return floodFillGetter;\n        };\n        this.generateGetScalarDataPositionFromPlane = (getScalarDataPosition, fixedDimension, fixedDimensionValue) => {\n            let getScalarDataPositionFromPlane;\n            switch (fixedDimension) {\n                case 0:\n                    getScalarDataPositionFromPlane = (y, z) => {\n                        return getScalarDataPosition(fixedDimensionValue, y, z);\n                    };\n                    break;\n                case 1:\n                    getScalarDataPositionFromPlane = (x, z) => {\n                        return getScalarDataPosition(x, fixedDimensionValue, z);\n                    };\n                    break;\n                case 2:\n                    getScalarDataPositionFromPlane = (x, y) => {\n                        return getScalarDataPosition(x, y, fixedDimensionValue);\n                    };\n                    break;\n                default:\n                    throw new Error(`Invalid fixedDimension: ${fixedDimension}`);\n            }\n            return getScalarDataPositionFromPlane;\n        };\n    }\n    getFixedDimension(viewPlaneNormal, direction) {\n        const xDirection = direction.slice(0, 3);\n        const yDirection = direction.slice(3, 6);\n        const zDirection = direction.slice(6, 9);\n        const absoluteOfViewPlaneNormal = [\n            Math.abs(viewPlaneNormal[0]),\n            Math.abs(viewPlaneNormal[1]),\n            Math.abs(viewPlaneNormal[2]),\n        ];\n        const absoluteOfXDirection = [\n            Math.abs(xDirection[0]),\n            Math.abs(xDirection[1]),\n            Math.abs(xDirection[2]),\n        ];\n        if (isEqual(absoluteOfViewPlaneNormal, absoluteOfXDirection)) {\n            return 0;\n        }\n        const absoluteOfYDirection = [\n            Math.abs(yDirection[0]),\n            Math.abs(yDirection[1]),\n            Math.abs(yDirection[2]),\n        ];\n        if (isEqual(absoluteOfViewPlaneNormal, absoluteOfYDirection)) {\n            return 1;\n        }\n        const absoluteOfZDirection = [\n            Math.abs(zDirection[0]),\n            Math.abs(zDirection[1]),\n            Math.abs(zDirection[2]),\n        ];\n        if (isEqual(absoluteOfViewPlaneNormal, absoluteOfZDirection)) {\n            return 2;\n        }\n    }\n}\nPaintFillTool.toolName = 'PaintFill';\nexport default PaintFillTool;\n//# sourceMappingURL=PaintFillTool.js.map","import { utilities as csUtils } from '@cornerstonejs/core';\nimport getBoundingBoxAroundShape from '../boundingBox/getBoundingBoxAroundShape';\nimport extend2DBoundingBoxInViewAxis from '../boundingBox/extend2DBoundingBoxInViewAxis';\nfunction getBoundsIJKFromRectangleAnnotations(annotations, referenceVolume, options = {}) {\n    const AllBoundsIJK = [];\n    annotations.forEach((annotation) => {\n        const { data } = annotation;\n        const { points } = data.handles;\n        const { imageData, dimensions } = referenceVolume;\n        let pointsToUse = points;\n        if (data.cachedStats?.projectionPoints) {\n            const { projectionPoints } = data.cachedStats;\n            pointsToUse = [].concat(...projectionPoints);\n        }\n        const rectangleCornersIJK = pointsToUse.map((world) => csUtils.transformWorldToIndex(imageData, world));\n        let boundsIJK = getBoundingBoxAroundShape(rectangleCornersIJK, dimensions);\n        if (options.numSlicesToProject && !data.cachedStats?.projectionPoints) {\n            boundsIJK = extend2DBoundingBoxInViewAxis(boundsIJK, options.numSlicesToProject);\n        }\n        AllBoundsIJK.push(boundsIJK);\n    });\n    if (AllBoundsIJK.length === 1) {\n        return AllBoundsIJK[0];\n    }\n    const boundsIJK = AllBoundsIJK.reduce((accumulator, currentValue) => {\n        return {\n            iMin: Math.min(accumulator.iMin, currentValue.iMin),\n            jMin: Math.min(accumulator.jMin, currentValue.jMin),\n            kMin: Math.min(accumulator.kMin, currentValue.kMin),\n            iMax: Math.max(accumulator.iMax, currentValue.iMax),\n            jMax: Math.max(accumulator.jMax, currentValue.jMax),\n            kMax: Math.max(accumulator.kMax, currentValue.kMax),\n        };\n    }, {\n        iMin: Infinity,\n        jMin: Infinity,\n        kMin: Infinity,\n        iMax: -Infinity,\n        jMax: -Infinity,\n        kMax: -Infinity,\n    });\n    return boundsIJK;\n}\nexport default getBoundsIJKFromRectangleAnnotations;\n//# sourceMappingURL=getBoundsIJKFromRectangleAnnotations.js.map","import { state } from '../../stateManagement/annotation';\nimport { RectangleROIStartEndThresholdTool, RectangleROIThresholdTool, } from '../../tools';\nimport thresholdVolumeByRange from './thresholdVolumeByRange';\nimport getBoundsIJKFromRectangleAnnotations from '../rectangleROITool/getBoundsIJKFromRectangleAnnotations';\nfunction rectangleROIThresholdVolumeByRange(annotationUIDs, segmentationVolume, thresholdVolumeInformation, options) {\n    const annotations = annotationUIDs.map((annotationUID) => {\n        return state.getAnnotation(annotationUID);\n    });\n    _validateAnnotations(annotations);\n    let boundsIJK;\n    for (let i = 0; i < thresholdVolumeInformation.length; i++) {\n        const volumeSize = thresholdVolumeInformation[i].volume.getScalarData().length;\n        if (volumeSize === segmentationVolume.getScalarData().length || i === 0) {\n            boundsIJK = getBoundsIJKFromRectangleAnnotations(annotations, thresholdVolumeInformation[i].volume, options);\n        }\n    }\n    const outputSegmentationVolume = thresholdVolumeByRange(segmentationVolume, thresholdVolumeInformation, { ...options, boundsIJK });\n    return outputSegmentationVolume;\n}\nfunction _validateAnnotations(annotations) {\n    const validToolNames = [\n        RectangleROIThresholdTool.toolName,\n        RectangleROIStartEndThresholdTool.toolName,\n    ];\n    for (const annotation of annotations) {\n        const name = annotation.metadata.toolName;\n        if (!validToolNames.includes(name)) {\n            throw new Error('rectangleROIThresholdVolumeByRange only supports RectangleROIThreshold and RectangleROIStartEndThreshold annotations');\n        }\n    }\n}\nexport default rectangleROIThresholdVolumeByRange;\n//# sourceMappingURL=rectangleROIThresholdVolumeByRange.js.map","import { volumeLoader, utilities as csUtils } from '@cornerstonejs/core';\nfunction createMergedLabelmapForIndex(labelmaps, segmentIndex = 1, volumeId = 'mergedLabelmap') {\n    labelmaps.forEach(({ direction, dimensions, origin, spacing }) => {\n        if (!csUtils.isEqual(dimensions, labelmaps[0].dimensions) ||\n            !csUtils.isEqual(direction, labelmaps[0].direction) ||\n            !csUtils.isEqual(spacing, labelmaps[0].spacing) ||\n            !csUtils.isEqual(origin, labelmaps[0].origin)) {\n            throw new Error('labelmaps must have the same size and shape');\n        }\n    });\n    const labelmap = labelmaps[0];\n    const arrayType = labelmap.getScalarData().constructor;\n    const outputData = new arrayType(labelmap.getScalarData().length);\n    labelmaps.forEach((labelmap) => {\n        const scalarData = labelmap.getScalarData();\n        for (let i = 0; i < scalarData.length; i++) {\n            if (scalarData[i] === segmentIndex) {\n                outputData[i] = segmentIndex;\n            }\n        }\n    });\n    const options = {\n        scalarData: outputData,\n        metadata: labelmap.metadata,\n        spacing: labelmap.spacing,\n        origin: labelmap.origin,\n        direction: labelmap.direction,\n        dimensions: labelmap.dimensions,\n    };\n    const preventCache = true;\n    const mergedVolume = volumeLoader.createLocalVolume(options, volumeId, preventCache);\n    return mergedVolume;\n}\nexport default createMergedLabelmapForIndex;\n//# sourceMappingURL=createMergedLabelmapForIndex.js.map","import { isValidLabelmapConfig } from '../../tools/displayTools/Labelmap/labelmapConfig';\nimport SegmentationRepresentation from '../../enums/SegmentationRepresentations';\nexport default function isValidRepresentationConfig(representationType, config) {\n    switch (representationType) {\n        case SegmentationRepresentation.Labelmap:\n            return isValidLabelmapConfig(config);\n        default:\n            throw new Error(`Unknown representation type: ${representationType}`);\n    }\n}\n//# sourceMappingURL=isValidRepresentationConfig.js.map","import getDefaultLabelmapConfig from '../../tools/displayTools/Labelmap/labelmapConfig';\nimport SegmentationRepresentation from '../../enums/SegmentationRepresentations';\nexport default function getDefaultRepresentationConfig(segmentation) {\n    const { type: representationType } = segmentation;\n    switch (representationType) {\n        case SegmentationRepresentation.Labelmap:\n            return getDefaultLabelmapConfig();\n        default:\n            throw new Error(`Unknown representation type: ${representationType}`);\n    }\n}\n//# sourceMappingURL=getDefaultRepresentationConfig.js.map","import { _cloneDeep } from 'lodash.clonedeep';\nimport { getEnabledElementByIds, volumeLoader, VolumeViewport, utilities as csUtils, } from '@cornerstonejs/core';\nexport default async function createLabelmapVolumeForViewport(input) {\n    const { viewportId, renderingEngineId, options } = input;\n    let { segmentationId } = input;\n    const enabledElement = getEnabledElementByIds(viewportId, renderingEngineId);\n    if (!enabledElement) {\n        throw new Error('element disabled');\n    }\n    const { viewport } = enabledElement;\n    if (!(viewport instanceof VolumeViewport)) {\n        throw new Error('Segmentation only supports VolumeViewport');\n    }\n    const { uid } = viewport.getDefaultActor();\n    if (segmentationId === undefined) {\n        segmentationId = `${uid}-based-segmentation-${options?.volumeId ?? csUtils.uuidv4().slice(0, 8)}`;\n    }\n    if (options) {\n        const properties = _cloneDeep(options);\n        await volumeLoader.createLocalVolume(properties, segmentationId);\n    }\n    else {\n        const { uid: volumeId } = viewport.getDefaultActor();\n        await volumeLoader.createAndCacheDerivedVolume(volumeId, {\n            volumeId: segmentationId,\n        });\n    }\n    return segmentationId;\n}\n//# sourceMappingURL=createLabelmapVolumeForViewport.js.map","import { getToolGroup } from '../../store/ToolGroupManager';\nimport triggerAnnotationRenderForViewportIds from '../triggerAnnotationRenderForViewportIds';\nimport { getRenderingEngine } from '@cornerstonejs/core';\nimport getBrushToolInstances from './utilities';\nexport function setBrushSizeForToolGroup(toolGroupId, brushSize) {\n    const toolGroup = getToolGroup(toolGroupId);\n    if (toolGroup === undefined) {\n        return;\n    }\n    const brushBasedToolInstances = getBrushToolInstances(toolGroupId);\n    brushBasedToolInstances.forEach((tool) => {\n        tool.configuration.brushSize = brushSize;\n        tool.invalidateBrushCursor();\n    });\n    const viewportsInfo = toolGroup.getViewportsInfo();\n    const viewportsInfoArray = Object.keys(viewportsInfo).map((key) => viewportsInfo[key]);\n    if (!viewportsInfoArray.length) {\n        return;\n    }\n    const { renderingEngineId } = viewportsInfoArray[0];\n    const viewportIds = toolGroup.getViewportIds();\n    const renderingEngine = getRenderingEngine(renderingEngineId);\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIds);\n}\nexport function getBrushSizeForToolGroup(toolGroupId) {\n    const toolGroup = getToolGroup(toolGroupId);\n    if (toolGroup === undefined) {\n        return;\n    }\n    const toolInstances = toolGroup._toolInstances;\n    if (!Object.keys(toolInstances).length) {\n        return;\n    }\n    const brushBasedToolInstances = getBrushToolInstances(toolGroupId);\n    const brushToolInstance = brushBasedToolInstances[0];\n    if (!brushToolInstance) {\n        return;\n    }\n    return brushToolInstance.configuration.brushSize;\n}\n//# sourceMappingURL=brushSizeForToolGroup.js.map","import { getToolGroup } from '../../store/ToolGroupManager';\nimport triggerAnnotationRenderForViewportIds from '../triggerAnnotationRenderForViewportIds';\nimport { getRenderingEngine } from '@cornerstonejs/core';\nimport getBrushToolInstances from './utilities';\nexport function setBrushThresholdForToolGroup(toolGroupId, threshold) {\n    const toolGroup = getToolGroup(toolGroupId);\n    if (toolGroup === undefined) {\n        return;\n    }\n    const brushBasedToolInstances = getBrushToolInstances(toolGroupId);\n    brushBasedToolInstances.forEach((tool) => {\n        tool.configuration.strategySpecificConfiguration.THRESHOLD_INSIDE_CIRCLE.threshold =\n            threshold;\n    });\n    const viewportsInfo = toolGroup.getViewportsInfo();\n    if (!viewportsInfo.length) {\n        return;\n    }\n    const { renderingEngineId } = viewportsInfo[0];\n    const viewportIds = toolGroup.getViewportIds();\n    const renderingEngine = getRenderingEngine(renderingEngineId);\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIds);\n}\nexport function getBrushThresholdForToolGroup(toolGroupId) {\n    const toolGroup = getToolGroup(toolGroupId);\n    if (toolGroup === undefined) {\n        return;\n    }\n    const toolInstances = toolGroup._toolInstances;\n    if (!Object.keys(toolInstances).length) {\n        return;\n    }\n    const brushBasedToolInstances = getBrushToolInstances(toolGroupId);\n    const brushToolInstance = brushBasedToolInstances[0];\n    if (!brushToolInstance) {\n        return;\n    }\n    return brushToolInstance.configuration.strategySpecificConfiguration\n        .THRESHOLD_INSIDE_CIRCLE.threshold;\n}\n//# sourceMappingURL=brushThresholdForToolGroup.js.map","import { pointInShapeCallback } from '../../utilities';\nimport { triggerSegmentationDataModified } from '../../stateManagement/segmentation/triggerSegmentationEvents';\nimport { getVoxelOverlap, processVolumes, } from './utilities';\nfunction thresholdSegmentationByRange(segmentationVolume, segmentationIndex, thresholdVolumeInformation, overlapType) {\n    const scalarData = segmentationVolume.getScalarData();\n    const { baseVolumeIdx, volumeInfoList } = processVolumes(segmentationVolume, thresholdVolumeInformation);\n    volumeInfoList.forEach((volumeInfo) => {\n        const { volumeSize } = volumeInfo;\n        if (volumeSize === scalarData.length) {\n            _handleSameSizeVolume(scalarData, segmentationIndex, volumeInfo);\n        }\n        else {\n            _handleDifferentSizeVolume(scalarData, segmentationIndex, volumeInfo, volumeInfoList, baseVolumeIdx, overlapType);\n        }\n    });\n    triggerSegmentationDataModified(segmentationVolume.volumeId);\n    return segmentationVolume;\n}\nfunction _handleDifferentSizeVolume(scalarData, segmentationIndex, volumeInfo, volumeInfoList, baseVolumeIdx, overlapType) {\n    const { imageData, lower, upper, dimensions } = volumeInfo;\n    let total, overlaps, range;\n    for (let i = 0; i < scalarData.length; i++) {\n        if (scalarData[i] === segmentationIndex) {\n            const overlapBounds = getVoxelOverlap(imageData, dimensions, volumeInfoList[baseVolumeIdx].spacing, volumeInfoList[baseVolumeIdx].imageData.getPoint(i));\n            const callbackOverlap = ({ value }) => {\n                total = total + 1;\n                if (value >= range.lower && value <= range.upper) {\n                    overlaps = overlaps + 1;\n                }\n            };\n            total = 0;\n            overlaps = 0;\n            range = { lower, upper };\n            let overlapTest = false;\n            pointInShapeCallback(imageData, () => true, callbackOverlap, overlapBounds);\n            overlapTest = overlapType === 0 ? overlaps > 0 : overlaps === total;\n            scalarData[i] = overlapTest ? segmentationIndex : 0;\n        }\n    }\n    return { total, range, overlaps };\n}\nfunction _handleSameSizeVolume(scalarData, segmentationIndex, volumeInfo) {\n    const { referenceValues, lower, upper } = volumeInfo;\n    for (let i = 0; i < scalarData.length; i++) {\n        if (scalarData[i] === segmentationIndex) {\n            const value = referenceValues[i];\n            scalarData[i] = value >= lower && value <= upper ? segmentationIndex : 0;\n        }\n    }\n}\nexport default thresholdSegmentationByRange;\n//# sourceMappingURL=thresholdSegmentationByRange.js.map","export default function getOrientationStringLPS(vector) {\n    let orientation = '';\n    const orientationX = vector[0] < 0 ? 'R' : 'L';\n    const orientationY = vector[1] < 0 ? 'A' : 'P';\n    const orientationZ = vector[2] < 0 ? 'F' : 'H';\n    const abs = [Math.abs(vector[0]), Math.abs(vector[1]), Math.abs(vector[2])];\n    const MIN = 0.0001;\n    for (let i = 0; i < 3; i++) {\n        if (abs[0] > MIN && abs[0] > abs[1] && abs[0] > abs[2]) {\n            orientation += orientationX;\n            abs[0] = 0;\n        }\n        else if (abs[1] > MIN && abs[1] > abs[0] && abs[1] > abs[2]) {\n            orientation += orientationY;\n            abs[1] = 0;\n        }\n        else if (abs[2] > MIN && abs[2] > abs[0] && abs[2] > abs[1]) {\n            orientation += orientationZ;\n            abs[2] = 0;\n        }\n        else if (abs[0] > MIN && abs[1] > MIN && abs[0] === abs[1]) {\n            orientation += orientationX + orientationY;\n            abs[0] = 0;\n            abs[1] = 0;\n        }\n        else if (abs[0] > MIN && abs[2] > MIN && abs[0] === abs[2]) {\n            orientation += orientationX + orientationZ;\n            abs[0] = 0;\n            abs[2] = 0;\n        }\n        else if (abs[1] > MIN && abs[2] > MIN && abs[1] === abs[2]) {\n            orientation += orientationY + orientationZ;\n            abs[1] = 0;\n            abs[2] = 0;\n        }\n        else {\n            break;\n        }\n    }\n    return orientation;\n}\n//# sourceMappingURL=getOrientationStringLPS.js.map","export default function invertOrientationStringLPS(orientationString) {\n    let inverted = orientationString.replace('H', 'f');\n    inverted = inverted.replace('F', 'h');\n    inverted = inverted.replace('R', 'l');\n    inverted = inverted.replace('L', 'r');\n    inverted = inverted.replace('A', 'p');\n    inverted = inverted.replace('P', 'a');\n    inverted = inverted.toUpperCase();\n    return inverted;\n}\n//# sourceMappingURL=invertOrientationStringLPS.js.map","var Events;\n(function (Events) {\n    Events[\"CLIP_STOPPED\"] = \"CORNERSTONE_CINE_TOOL_STOPPED\";\n    Events[\"CLIP_STARTED\"] = \"CORNERSTONE_CINE_TOOL_STARTED\";\n})(Events || (Events = {}));\nexport default Events;\n//# sourceMappingURL=events.js.map","import { getEnabledElement } from '@cornerstonejs/core';\nconst state = {};\nfunction addToolState(element, data) {\n    const enabledElement = getEnabledElement(element);\n    const { viewportId } = enabledElement;\n    state[viewportId] = data;\n}\nfunction getToolState(element) {\n    const enabledElement = getEnabledElement(element);\n    const { viewportId } = enabledElement;\n    return state[viewportId];\n}\nexport { addToolState, getToolState };\n//# sourceMappingURL=state.js.map","import { glMatrix, vec3 } from 'gl-matrix';\nimport { utilities as csUtils, getEnabledElement, StackViewport, VolumeViewport, cache, BaseVolumeViewport, } from '@cornerstonejs/core';\nimport CINE_EVENTS from './events';\nimport { addToolState, getToolState } from './state';\nimport scroll from '../scroll';\nconst { triggerEvent } = csUtils;\nconst debounced = true;\nconst loop = true;\nconst dynamicVolumesPlayingMap = new Map();\nfunction playClip(element, playClipOptions) {\n    let playClipTimeouts;\n    let playClipIsTimeVarying;\n    if (element === undefined) {\n        throw new Error('playClip: element must not be undefined');\n    }\n    const enabledElement = getEnabledElement(element);\n    if (!enabledElement) {\n        throw new Error('playClip: element must be a valid Cornerstone enabled element');\n    }\n    playClipOptions.dynamicCineEnabled =\n        playClipOptions.dynamicCineEnabled ?? true;\n    const { viewport } = enabledElement;\n    const volume = _getVolumeFromViewport(viewport);\n    const playClipContext = _createCinePlayContext(viewport, playClipOptions);\n    let playClipData = getToolState(element);\n    const isDynamicCinePlaying = playClipOptions.dynamicCineEnabled && volume?.isDynamicVolume();\n    if (isDynamicCinePlaying) {\n        _stopDynamicVolumeCine(element);\n    }\n    if (!playClipData) {\n        playClipData = {\n            intervalId: undefined,\n            framesPerSecond: 30,\n            lastFrameTimeStamp: undefined,\n            ignoreFrameTimeVector: false,\n            usingFrameTimeVector: false,\n            frameTimeVector: playClipOptions.frameTimeVector ?? undefined,\n            speed: playClipOptions.frameTimeVectorSpeedMultiplier ?? 1,\n            reverse: playClipOptions.reverse ?? false,\n            loop: playClipOptions.loop ?? true,\n        };\n        addToolState(element, playClipData);\n    }\n    else {\n        _stopClip(element, isDynamicCinePlaying);\n    }\n    playClipData.dynamicCineEnabled = playClipOptions.dynamicCineEnabled;\n    if (playClipOptions.framesPerSecond < 0 ||\n        playClipOptions.framesPerSecond > 0) {\n        playClipData.framesPerSecond = Number(playClipOptions.framesPerSecond);\n        playClipData.reverse = playClipData.framesPerSecond < 0;\n        playClipData.ignoreFrameTimeVector = true;\n    }\n    if (playClipData.ignoreFrameTimeVector !== true &&\n        playClipData.frameTimeVector &&\n        playClipData.frameTimeVector.length === playClipContext.numScrollSteps &&\n        playClipContext.frameTimeVectorEnabled) {\n        const { timeouts, isTimeVarying } = _getPlayClipTimeouts(playClipData.frameTimeVector, playClipData.speed);\n        playClipTimeouts = timeouts;\n        playClipIsTimeVarying = isTimeVarying;\n    }\n    const playClipAction = () => {\n        const { numScrollSteps, currentStepIndex } = playClipContext;\n        let newStepIndex = currentStepIndex + (playClipData.reverse ? -1 : 1);\n        const newStepIndexOutOfRange = newStepIndex < 0 || newStepIndex >= numScrollSteps;\n        if (!loop && newStepIndexOutOfRange) {\n            _stopClip(element, isDynamicCinePlaying);\n            const eventDetail = { element };\n            triggerEvent(element, CINE_EVENTS.CLIP_STOPPED, eventDetail);\n            return;\n        }\n        if (newStepIndex >= numScrollSteps) {\n            newStepIndex = 0;\n        }\n        else if (newStepIndex < 0) {\n            newStepIndex = numScrollSteps - 1;\n        }\n        const delta = newStepIndex - currentStepIndex;\n        if (delta) {\n            playClipContext.scroll(delta);\n        }\n    };\n    if (isDynamicCinePlaying) {\n        dynamicVolumesPlayingMap.set(volume.volumeId, element);\n    }\n    if (playClipTimeouts &&\n        playClipTimeouts.length > 0 &&\n        playClipIsTimeVarying) {\n        playClipData.usingFrameTimeVector = true;\n        playClipData.intervalId = window.setTimeout(function playClipTimeoutHandler() {\n            playClipData.intervalId = window.setTimeout(playClipTimeoutHandler, playClipTimeouts[playClipContext.currentStepIndex]);\n            playClipAction();\n        }, 0);\n    }\n    else {\n        playClipData.usingFrameTimeVector = false;\n        playClipData.intervalId = window.setInterval(playClipAction, 1000 / Math.abs(playClipData.framesPerSecond));\n    }\n    const eventDetail = {\n        element,\n    };\n    triggerEvent(element, CINE_EVENTS.CLIP_STARTED, eventDetail);\n}\nfunction stopClip(element) {\n    _stopClip(element, true);\n}\nfunction _stopClip(element, stopDynamicCine) {\n    const enabledElement = getEnabledElement(element);\n    if (!enabledElement)\n        return;\n    const { viewport } = enabledElement;\n    const cineToolData = getToolState(viewport.element);\n    if (cineToolData) {\n        _stopClipWithData(cineToolData);\n    }\n    if (stopDynamicCine && viewport instanceof BaseVolumeViewport) {\n        _stopDynamicVolumeCine(element);\n    }\n}\nfunction _stopDynamicVolumeCine(element) {\n    const { viewport } = getEnabledElement(element);\n    const volume = _getVolumeFromViewport(viewport);\n    if (volume?.isDynamicVolume()) {\n        const dynamicCineElement = dynamicVolumesPlayingMap.get(volume.volumeId);\n        dynamicVolumesPlayingMap.delete(volume.volumeId);\n        if (dynamicCineElement && dynamicCineElement !== element) {\n            stopClip(dynamicCineElement);\n        }\n    }\n}\nfunction _getPlayClipTimeouts(vector, speed) {\n    let i;\n    let sample;\n    let delay;\n    let sum = 0;\n    const limit = vector.length;\n    const timeouts = [];\n    let isTimeVarying = false;\n    if (typeof speed !== 'number' || speed <= 0) {\n        speed = 1;\n    }\n    for (i = 1; i < limit; i++) {\n        delay = (Number(vector[i]) / speed) | 0;\n        timeouts.push(delay);\n        if (i === 1) {\n            sample = delay;\n        }\n        else if (delay !== sample) {\n            isTimeVarying = true;\n        }\n        sum += delay;\n    }\n    if (timeouts.length > 0) {\n        if (isTimeVarying) {\n            delay = (sum / timeouts.length) | 0;\n        }\n        else {\n            delay = timeouts[0];\n        }\n        timeouts.push(delay);\n    }\n    return { timeouts, isTimeVarying };\n}\nfunction _stopClipWithData(playClipData) {\n    const id = playClipData.intervalId;\n    if (typeof id !== 'undefined') {\n        playClipData.intervalId = undefined;\n        if (playClipData.usingFrameTimeVector) {\n            clearTimeout(id);\n        }\n        else {\n            clearInterval(id);\n        }\n    }\n}\nfunction _getVolumesFromViewport(viewport) {\n    return viewport\n        .getActors()\n        .map((actor) => cache.getVolume(actor.uid))\n        .filter((volume) => !!volume);\n}\nfunction _getVolumeFromViewport(viewport) {\n    const volumes = _getVolumesFromViewport(viewport);\n    const dynamicVolume = volumes.find((volume) => volume.isDynamicVolume());\n    return dynamicVolume ?? volumes[0];\n}\nfunction _createStackViewportCinePlayContext(viewport) {\n    const imageIds = viewport.getImageIds();\n    return {\n        get numScrollSteps() {\n            return imageIds.length;\n        },\n        get currentStepIndex() {\n            return viewport.getTargetImageIdIndex();\n        },\n        get frameTimeVectorEnabled() {\n            return true;\n        },\n        scroll(delta) {\n            scroll(viewport, { delta, debounceLoading: debounced });\n        },\n    };\n}\nfunction _createVolumeViewportCinePlayContext(viewport, volume) {\n    const { volumeId } = volume;\n    const cachedScrollInfo = {\n        viewPlaneNormal: vec3.create(),\n        scrollInfo: null,\n    };\n    const getScrollInfo = () => {\n        const camera = viewport.getCamera();\n        const updateCache = !cachedScrollInfo.scrollInfo ||\n            !vec3.equals(camera.viewPlaneNormal, cachedScrollInfo.viewPlaneNormal);\n        if (updateCache) {\n            const scrollInfo = csUtils.getVolumeViewportScrollInfo(viewport, volumeId);\n            cachedScrollInfo.viewPlaneNormal = camera.viewPlaneNormal;\n            cachedScrollInfo.scrollInfo = scrollInfo;\n        }\n        return cachedScrollInfo.scrollInfo;\n    };\n    return {\n        get numScrollSteps() {\n            return getScrollInfo().numScrollSteps;\n        },\n        get currentStepIndex() {\n            return getScrollInfo().currentStepIndex;\n        },\n        get frameTimeVectorEnabled() {\n            const camera = viewport.getCamera();\n            const volumeViewPlaneNormal = volume.direction\n                .slice(6, 9)\n                .map((x) => -x);\n            const dot = vec3.dot(volumeViewPlaneNormal, camera.viewPlaneNormal);\n            return glMatrix.equals(dot, 1);\n        },\n        scroll(delta) {\n            getScrollInfo().currentStepIndex += delta;\n            scroll(viewport, { delta });\n        },\n    };\n}\nfunction _createDynamicVolumeViewportCinePlayContext(volume) {\n    return {\n        get numScrollSteps() {\n            return volume.numTimePoints;\n        },\n        get currentStepIndex() {\n            return volume.timePointIndex;\n        },\n        get frameTimeVectorEnabled() {\n            return false;\n        },\n        scroll(delta) {\n            volume.timePointIndex += delta;\n        },\n    };\n}\nfunction _createCinePlayContext(viewport, playClipOptions) {\n    if (viewport instanceof StackViewport) {\n        return _createStackViewportCinePlayContext(viewport);\n    }\n    if (viewport instanceof VolumeViewport) {\n        const volume = _getVolumeFromViewport(viewport);\n        if (playClipOptions.dynamicCineEnabled && volume?.isDynamicVolume()) {\n            return _createDynamicVolumeViewportCinePlayContext(volume);\n        }\n        return _createVolumeViewportCinePlayContext(viewport, volume);\n    }\n    throw new Error('Unknown viewport type');\n}\nexport { playClip, stopClip };\n//# sourceMappingURL=playClip.js.map","import { PlanarFreehandROITool } from '../../tools';\nimport { ToolGroupManager } from '../../store';\nimport interpolateSegmentPoints from './interpolation/interpolateSegmentPoints';\nfunction shouldPreventInterpolation(enabledElement, annotation, knotsRatioPercentage) {\n    if (!annotation?.data?.polyline || knotsRatioPercentage <= 0) {\n        return true;\n    }\n    if (!enabledElement.viewport) {\n        return true;\n    }\n    const { renderingEngineId, viewportId, FrameOfReferenceUID } = enabledElement;\n    const toolGroup = ToolGroupManager.getToolGroupForViewport(viewportId, renderingEngineId);\n    if (annotation.metadata.FrameOfReferenceUID !== FrameOfReferenceUID) {\n        return true;\n    }\n    if (!toolGroup) {\n        return true;\n    }\n    const toolInstance = toolGroup.getToolInstance(annotation.metadata.toolName);\n    if (!(toolInstance instanceof PlanarFreehandROITool)) {\n        return true;\n    }\n    return (toolInstance.isDrawing ||\n        toolInstance.isEditingOpen ||\n        toolInstance.isEditingClosed);\n}\nexport default function interpolateAnnotation(enabledElement, annotation, knotsRatioPercentage) {\n    if (shouldPreventInterpolation(enabledElement, annotation, knotsRatioPercentage)) {\n        return false;\n    }\n    const { viewport } = enabledElement;\n    const canvasPoints = annotation.data.polyline.map(viewport.worldToCanvas);\n    const interpolatedCanvasPoints = (interpolateSegmentPoints(canvasPoints, 0, canvasPoints.length, knotsRatioPercentage));\n    if (interpolatedCanvasPoints === canvasPoints) {\n        return false;\n    }\n    annotation.data.polyline = interpolatedCanvasPoints.map(viewport.canvasToWorld);\n    return true;\n}\n//# sourceMappingURL=interpolateAnnotation.js.map","import interpolateAnnotation from './interpolateAnnotation';\nexport default {\n    interpolateAnnotation,\n};\nexport { interpolateAnnotation };\n//# sourceMappingURL=index.js.map","import { getEnabledElement } from '@cornerstonejs/core';\nconst state = {};\nfunction addToolState(element, data) {\n    const enabledElement = getEnabledElement(element);\n    const { viewportId } = enabledElement;\n    state[viewportId] = data;\n}\nfunction getToolState(element) {\n    const enabledElement = getEnabledElement(element);\n    const { viewportId } = enabledElement;\n    return state[viewportId];\n}\nexport { addToolState, getToolState };\n//# sourceMappingURL=state.js.map","import { getEnabledElement, StackViewport, imageLoader, Enums, eventTarget, imageLoadPoolManager, cache, getConfiguration as getCoreConfiguration, } from '@cornerstonejs/core';\nimport { addToolState, getToolState } from './state';\nconst requestType = Enums.RequestType.Prefetch;\nconst priority = 0;\nconst addToBeginning = true;\nlet configuration = {\n    maxImagesToPrefetch: Infinity,\n    preserveExistingPool: false,\n};\nlet resetPrefetchTimeout;\nconst resetPrefetchDelay = 10;\nfunction range(lowEnd, highEnd) {\n    lowEnd = Math.round(lowEnd) || 0;\n    highEnd = Math.round(highEnd) || 0;\n    const arr = [];\n    let c = highEnd - lowEnd + 1;\n    if (c <= 0) {\n        return arr;\n    }\n    while (c--) {\n        arr[c] = highEnd--;\n    }\n    return arr;\n}\nfunction nearestIndex(arr, x) {\n    let low = 0;\n    let high = arr.length - 1;\n    arr.forEach((v, idx) => {\n        if (v < x) {\n            low = Math.max(idx, low);\n        }\n        else if (v > x) {\n            high = Math.min(idx, high);\n        }\n    });\n    return { low, high };\n}\nfunction getStackData(element) {\n    const enabledElement = getEnabledElement(element);\n    if (!enabledElement) {\n        throw new Error('stackPrefetch: element must be a valid Cornerstone enabled element');\n    }\n    const { viewport } = enabledElement;\n    if (!(viewport instanceof StackViewport)) {\n        throw new Error('stackPrefetch: element must be a StackViewport, VolumeViewport stackPrefetch not yet implemented');\n    }\n    return {\n        currentImageIdIndex: viewport.getCurrentImageIdIndex(),\n        imageIds: viewport.getImageIds(),\n    };\n}\nfunction prefetch(element) {\n    const stackPrefetchData = getToolState(element);\n    if (!stackPrefetchData) {\n        return;\n    }\n    const stackPrefetch = stackPrefetchData || {};\n    const stack = getStackData(element);\n    if (!stack || !stack.imageIds || stack.imageIds.length === 0) {\n        console.warn('CornerstoneTools.stackPrefetch: No images in stack.');\n        return;\n    }\n    if (!stackPrefetch.indicesToRequest ||\n        !stackPrefetch.indicesToRequest.length) {\n        stackPrefetch.enabled = false;\n    }\n    if (stackPrefetch.enabled === false) {\n        return;\n    }\n    function removeFromList(imageIdIndex) {\n        const index = stackPrefetch.indicesToRequest.indexOf(imageIdIndex);\n        if (index > -1) {\n            stackPrefetch.indicesToRequest.splice(index, 1);\n        }\n    }\n    stackPrefetchData.indicesToRequest.sort((a, b) => a - b);\n    const indicesToRequestCopy = stackPrefetch.indicesToRequest.slice();\n    indicesToRequestCopy.forEach(function (imageIdIndex) {\n        const imageId = stack.imageIds[imageIdIndex];\n        if (!imageId) {\n            return;\n        }\n        const imageLoadObject = cache.getImageLoadObject(imageId);\n        if (imageLoadObject) {\n            removeFromList(imageIdIndex);\n        }\n    });\n    if (!stackPrefetch.indicesToRequest.length) {\n        return;\n    }\n    if (!configuration.preserveExistingPool) {\n        imageLoadPoolManager.clearRequestStack(requestType);\n    }\n    const nearest = nearestIndex(stackPrefetch.indicesToRequest, stack.currentImageIdIndex);\n    let imageId;\n    let nextImageIdIndex;\n    const preventCache = false;\n    function doneCallback(image) {\n        console.log('prefetch done: %s', image.imageId);\n        const imageIdIndex = stack.imageIds.indexOf(image.imageId);\n        removeFromList(imageIdIndex);\n    }\n    let lowerIndex = nearest.low;\n    let higherIndex = nearest.high;\n    const imageIdsToPrefetch = [];\n    while (lowerIndex >= 0 ||\n        higherIndex < stackPrefetch.indicesToRequest.length) {\n        const currentIndex = stack.currentImageIdIndex;\n        const shouldSkipLower = currentIndex - stackPrefetch.indicesToRequest[lowerIndex] >\n            configuration.maxImagesToPrefetch;\n        const shouldSkipHigher = stackPrefetch.indicesToRequest[higherIndex] - currentIndex >\n            configuration.maxImagesToPrefetch;\n        const shouldLoadLower = !shouldSkipLower && lowerIndex >= 0;\n        const shouldLoadHigher = !shouldSkipHigher && higherIndex < stackPrefetch.indicesToRequest.length;\n        if (!shouldLoadHigher && !shouldLoadLower) {\n            break;\n        }\n        if (shouldLoadLower) {\n            nextImageIdIndex = stackPrefetch.indicesToRequest[lowerIndex--];\n            imageId = stack.imageIds[nextImageIdIndex];\n            imageIdsToPrefetch.push(imageId);\n        }\n        if (shouldLoadHigher) {\n            nextImageIdIndex = stackPrefetch.indicesToRequest[higherIndex++];\n            imageId = stack.imageIds[nextImageIdIndex];\n            imageIdsToPrefetch.push(imageId);\n        }\n    }\n    const requestFn = (imageId, options) => imageLoader.loadAndCacheImage(imageId, options);\n    const { useNorm16Texture } = getCoreConfiguration().rendering;\n    imageIdsToPrefetch.forEach((imageId) => {\n        const options = {\n            targetBuffer: {\n                type: useNorm16Texture ? undefined : 'Float32Array',\n            },\n            preScale: {\n                enabled: true,\n            },\n            requestType,\n        };\n        imageLoadPoolManager.addRequest(requestFn.bind(null, imageId, options), requestType, {\n            imageId,\n        }, priority);\n    });\n}\nfunction getPromiseRemovedHandler(element) {\n    return function (e) {\n        const eventData = e.detail;\n        let stackData;\n        try {\n            stackData = getStackData(element);\n        }\n        catch (error) {\n            return;\n        }\n        if (!stackData || !stackData.imageIds || stackData.imageIds.length === 0) {\n            return;\n        }\n        const stack = stackData;\n        const imageIdIndex = stack.imageIds.indexOf(eventData.imageId);\n        if (imageIdIndex < 0) {\n            return;\n        }\n        const stackPrefetchData = getToolState(element);\n        if (!stackPrefetchData ||\n            !stackPrefetchData.data ||\n            !stackPrefetchData.data.length) {\n            return;\n        }\n        stackPrefetchData.indicesToRequest.push(imageIdIndex);\n    };\n}\nfunction onImageUpdated(e) {\n    clearTimeout(resetPrefetchTimeout);\n    resetPrefetchTimeout = setTimeout(function () {\n        const element = e.target;\n        try {\n            prefetch(element);\n        }\n        catch (error) {\n            return;\n        }\n    }, resetPrefetchDelay);\n}\nfunction enable(element) {\n    const stack = getStackData(element);\n    if (!stack || !stack.imageIds || stack.imageIds.length === 0) {\n        console.warn('CornerstoneTools.stackPrefetch: No images in stack.');\n        return;\n    }\n    const stackPrefetchData = {\n        indicesToRequest: range(0, stack.imageIds.length - 1),\n        enabled: true,\n        direction: 1,\n    };\n    const indexOfCurrentImage = stackPrefetchData.indicesToRequest.indexOf(stack.currentImageIdIndex);\n    stackPrefetchData.indicesToRequest.splice(indexOfCurrentImage, 1);\n    addToolState(element, stackPrefetchData);\n    prefetch(element);\n    element.removeEventListener(Enums.Events.STACK_NEW_IMAGE, onImageUpdated);\n    element.addEventListener(Enums.Events.STACK_NEW_IMAGE, onImageUpdated);\n    const promiseRemovedHandler = getPromiseRemovedHandler(element);\n    eventTarget.removeEventListener(Enums.Events.IMAGE_CACHE_IMAGE_REMOVED, promiseRemovedHandler);\n    eventTarget.addEventListener(Enums.Events.IMAGE_CACHE_IMAGE_REMOVED, promiseRemovedHandler);\n}\nfunction disable(element) {\n    clearTimeout(resetPrefetchTimeout);\n    element.removeEventListener(Enums.Events.STACK_NEW_IMAGE, onImageUpdated);\n    const promiseRemovedHandler = getPromiseRemovedHandler(element);\n    eventTarget.removeEventListener(Enums.Events.IMAGE_CACHE_IMAGE_REMOVED, promiseRemovedHandler);\n    const stackPrefetchData = getToolState(element);\n    if (stackPrefetchData && stackPrefetchData.data.length) {\n        stackPrefetchData.enabled = false;\n        imageLoadPoolManager.clearRequestStack(requestType);\n    }\n}\nfunction getConfiguration() {\n    return configuration;\n}\nfunction setConfiguration(config) {\n    configuration = config;\n}\nexport { enable, disable, getConfiguration, setConfiguration };\n//# sourceMappingURL=stackPrefetch.js.map","import { utilities, cache } from '@cornerstonejs/core';\nfunction getDataInTime(dynamicVolume, options) {\n    let dataInTime;\n    const frames = options.frameNumbers || [\n        ...Array(dynamicVolume.numTimePoints).keys(),\n    ];\n    if (!options.maskVolumeId && !options.imageCoordinate) {\n        throw new Error('No ROI provided');\n    }\n    if (options.maskVolumeId && options.imageCoordinate) {\n        throw new Error('Please provide only one ROI');\n    }\n    if (options.maskVolumeId) {\n        const segmentationVolume = cache.getVolume(options.maskVolumeId);\n        const indexArray = segmentationVolume\n            .getScalarData()\n            .map((_, i) => i)\n            .filter((i) => segmentationVolume.getScalarData()[i] !== 0);\n        const dataInTime = _getTimePointDataMask(frames, indexArray, dynamicVolume);\n        return dataInTime;\n    }\n    if (options.imageCoordinate) {\n        const dataInTime = _getTimePointDataCoordinate(frames, options.imageCoordinate, dynamicVolume);\n        return dataInTime;\n    }\n    return dataInTime;\n}\nfunction _getTimePointDataCoordinate(frames, coordinate, volume) {\n    const { dimensions, imageData } = volume;\n    const index = imageData.worldToIndex(coordinate);\n    index[0] = Math.floor(index[0]);\n    index[1] = Math.floor(index[1]);\n    index[2] = Math.floor(index[2]);\n    if (!utilities.indexWithinDimensions(index, dimensions)) {\n        throw new Error('outside bounds');\n    }\n    const yMultiple = dimensions[0];\n    const zMultiple = dimensions[0] * dimensions[1];\n    const allScalarData = volume.getScalarDataArrays();\n    const value = [];\n    frames.forEach((frame) => {\n        const activeScalarData = allScalarData[frame];\n        const scalarIndex = index[2] * zMultiple + index[1] * yMultiple + index[0];\n        value.push(activeScalarData[scalarIndex]);\n    });\n    return value;\n}\nfunction _getTimePointDataMask(frames, indexArray, volume) {\n    const allScalarData = volume.getScalarDataArrays();\n    const value = [];\n    for (let i = 0; i < indexArray.length; i++) {\n        const indexValues = [];\n        frames.forEach((frame) => {\n            const activeScalarData = allScalarData[frame];\n            indexValues.push(activeScalarData[indexArray[i]]);\n        });\n        value.push(indexValues);\n    }\n    return value;\n}\nexport default getDataInTime;\n//# sourceMappingURL=getDataInTime.js.map","import { Enums } from '@cornerstonejs/core';\nfunction generateImageFromTimeData(dynamicVolume, operation, frameNumbers) {\n    const frames = frameNumbers || [...Array(dynamicVolume.numTimePoints).keys()];\n    const numFrames = frames.length;\n    if (frames.length <= 1) {\n        throw new Error('Please provide two or more time points');\n    }\n    const typedArrays = dynamicVolume.getScalarDataArrays();\n    const arrayLength = typedArrays[0].length;\n    const finalArray = new Float32Array(arrayLength);\n    if (operation === Enums.DynamicOperatorType.SUM) {\n        for (let i = 0; i < numFrames; i++) {\n            const currentArray = typedArrays[frames[i]];\n            for (let j = 0; j < arrayLength; j++) {\n                finalArray[j] += currentArray[j];\n            }\n        }\n        return finalArray;\n    }\n    if (operation === Enums.DynamicOperatorType.SUBTRACT) {\n        if (frames.length > 2) {\n            throw new Error('Please provide only 2 time points for subtraction.');\n        }\n        for (let j = 0; j < arrayLength; j++) {\n            finalArray[j] += typedArrays[frames[0]][j] - typedArrays[frames[1]][j];\n        }\n        return finalArray;\n    }\n    if (operation === Enums.DynamicOperatorType.AVERAGE) {\n        for (let i = 0; i < numFrames; i++) {\n            const currentArray = typedArrays[frames[i]];\n            for (let j = 0; j < arrayLength; j++) {\n                finalArray[j] += currentArray[j];\n            }\n        }\n        for (let k = 0; k < arrayLength; k++) {\n            finalArray[k] = finalArray[k] / numFrames;\n        }\n        return finalArray;\n    }\n}\nexport default generateImageFromTimeData;\n//# sourceMappingURL=generateImageFromTimeData.js.map","import { getRenderingEngines } from '@cornerstonejs/core';\nimport { triggerAnnotationRenderForViewportIds } from '../../utilities';\nfunction annotationSelectionListener(evt) {\n    const deselectedAnnotation = evt.detail.removed;\n    if (!deselectedAnnotation.length) {\n        return;\n    }\n    const renderingEngines = getRenderingEngines();\n    renderingEngines.forEach((renderingEngine) => {\n        const viewports = renderingEngine.getViewports();\n        const viewportIds = viewports.map((vp) => vp.id);\n        triggerAnnotationRenderForViewportIds(renderingEngine, viewportIds);\n    });\n}\nexport default annotationSelectionListener;\n//# sourceMappingURL=annotationSelectionListener.js.map","import { getRenderingEngine } from '@cornerstonejs/core';\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\nfunction annotationModifiedListener(evt) {\n    const { viewportId, renderingEngineId } = evt.detail;\n    const renderingEngine = getRenderingEngine(renderingEngineId);\n    triggerAnnotationRenderForViewportIds(renderingEngine, [viewportId]);\n}\nexport default annotationModifiedListener;\n//# sourceMappingURL=annotationModifiedListener.js.map","import { Enums } from '@cornerstonejs/core';\nimport triggerAnnotationRender from '../utilities/triggerAnnotationRender';\nconst onImageRendered = function (evt) {\n    triggerAnnotationRender(evt.detail.element);\n};\nconst enable = function (element) {\n    element.addEventListener(Enums.Events.IMAGE_RENDERED, onImageRendered);\n};\nconst disable = function (element) {\n    element.removeEventListener(Enums.Events.IMAGE_RENDERED, onImageRendered);\n};\nexport default {\n    enable,\n    disable,\n};\n//# sourceMappingURL=imageRenderedEventDispatcher.js.map","import { state, ToolGroupManager } from '../../store';\nimport ToolModes from '../../enums/ToolModes';\nconst { Active } = ToolModes;\nexport default function customCallbackHandler(handlerType, customFunction, evt) {\n    if (state.isInteractingWithTool) {\n        return false;\n    }\n    const { renderingEngineId, viewportId } = evt.detail;\n    const toolGroup = ToolGroupManager.getToolGroupForViewport(viewportId, renderingEngineId);\n    if (!toolGroup) {\n        return false;\n    }\n    let activeTool;\n    const toolGroupToolNames = Object.keys(toolGroup.toolOptions);\n    for (let j = 0; j < toolGroupToolNames.length; j++) {\n        const toolName = toolGroupToolNames[j];\n        const tool = toolGroup.toolOptions[toolName];\n        const toolInstance = toolGroup.getToolInstance(toolName);\n        if (tool.mode === Active &&\n            typeof toolInstance[customFunction] === 'function') {\n            activeTool = toolGroup.getToolInstance(toolName);\n            break;\n        }\n    }\n    if (!activeTool) {\n        return;\n    }\n    activeTool[customFunction](evt);\n}\n//# sourceMappingURL=customCallbackHandler.js.map","import customCallbackHandler from '../shared/customCallbackHandler';\nconst mouseClick = customCallbackHandler.bind(null, 'Mouse', 'mouseClickCallback');\nexport default mouseClick;\n//# sourceMappingURL=mouseClick.js.map","import customCallbackHandler from '../shared/customCallbackHandler';\nconst mouseDoubleClick = customCallbackHandler.bind(null, 'Mouse', 'doubleClickCallback');\nexport default mouseDoubleClick;\n//# sourceMappingURL=mouseDoubleClick.js.map","export default function filterToolsWithMoveableHandles(element, ToolAndAnnotations, canvasCoords, interactionType = 'mouse') {\n    const proximity = interactionType === 'touch' ? 36 : 6;\n    const toolsWithMoveableHandles = [];\n    ToolAndAnnotations.forEach(({ tool, annotations }) => {\n        for (const annotation of annotations) {\n            if (annotation.isLocked || !annotation.isVisible) {\n                continue;\n            }\n            const handle = tool.getHandleNearImagePoint(element, annotation, canvasCoords, proximity);\n            if (handle) {\n                toolsWithMoveableHandles.push({\n                    tool,\n                    annotation,\n                    handle,\n                });\n                break;\n            }\n        }\n    });\n    return toolsWithMoveableHandles;\n}\n//# sourceMappingURL=filterToolsWithMoveableHandles.js.map","import { getAnnotations } from '../stateManagement/annotation/annotationState';\nexport default function filterToolsWithAnnotationsForElement(element, tools) {\n    const result = [];\n    for (let i = 0; i < tools.length; i++) {\n        const tool = tools[i];\n        if (!tool) {\n            console.warn('undefined tool in filterToolsWithAnnotationsForElement');\n            continue;\n        }\n        let annotations = getAnnotations(tool.constructor.toolName, element);\n        if (!annotations?.length) {\n            continue;\n        }\n        if (typeof tool.filterInteractableAnnotationsForElement === 'function') {\n            annotations = tool.filterInteractableAnnotationsForElement(element, annotations);\n        }\n        if (annotations.length > 0) {\n            result.push({ tool, annotations });\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=filterToolsWithAnnotationsForElement.js.map","export default function filterMoveableAnnotationTools(element, ToolAndAnnotations, canvasCoords, interactionType = 'mouse') {\n    const proximity = interactionType === 'touch' ? 36 : 6;\n    const moveableAnnotationTools = [];\n    ToolAndAnnotations.forEach(({ tool, annotations }) => {\n        for (const annotation of annotations) {\n            if (annotation.isLocked || !annotation.isVisible) {\n                continue;\n            }\n            const near = tool.isPointNearTool(element, annotation, canvasCoords, proximity, interactionType);\n            if (near) {\n                moveableAnnotationTools.push({\n                    tool,\n                    annotation,\n                });\n                break;\n            }\n        }\n    });\n    return moveableAnnotationTools;\n}\n//# sourceMappingURL=filterMoveableAnnotationTools.js.map","import { KeyboardBindings as kb } from '../../enums';\nconst getMouseModifierKey = (evt) => {\n    if (evt.shiftKey) {\n        if (evt.ctrlKey)\n            return kb.ShiftCtrl;\n        if (evt.altKey)\n            return kb.ShiftAlt;\n        if (evt.metaKey)\n            return kb.ShiftMeta;\n        return kb.Shift;\n    }\n    if (evt.ctrlKey) {\n        if (evt.altKey)\n            return kb.CtrlAlt;\n        if (evt.metaKey)\n            return kb.CtrlMeta;\n        return kb.Ctrl;\n    }\n    if (evt.altKey) {\n        return (evt.metaKey && kb.AltMeta) || kb.Alt;\n    }\n    if (evt.metaKey) {\n        return kb.Meta;\n    }\n    return undefined;\n};\nexport default getMouseModifierKey;\n//# sourceMappingURL=getMouseModifier.js.map","import { ToolGroupManager } from '../../store';\nimport { ToolModes } from '../../enums';\nimport { keyEventListener } from '../../eventListeners';\nimport getMouseModifier from './getMouseModifier';\nconst { Active } = ToolModes;\nexport default function getActiveToolForMouseEvent(evt) {\n    const { renderingEngineId, viewportId } = evt.detail;\n    const mouseEvent = evt.detail.event;\n    const modifierKey = getMouseModifier(mouseEvent) || keyEventListener.getModifierKey();\n    const toolGroup = ToolGroupManager.getToolGroupForViewport(viewportId, renderingEngineId);\n    if (!toolGroup) {\n        return null;\n    }\n    const toolGroupToolNames = Object.keys(toolGroup.toolOptions);\n    const defaultMousePrimary = toolGroup.getDefaultMousePrimary();\n    for (let j = 0; j < toolGroupToolNames.length; j++) {\n        const toolName = toolGroupToolNames[j];\n        const toolOptions = toolGroup.toolOptions[toolName];\n        const correctBinding = toolOptions.bindings.length &&\n            toolOptions.bindings.some((binding) => {\n                return (binding.mouseButton ===\n                    (mouseEvent ? mouseEvent.buttons : defaultMousePrimary) &&\n                    binding.modifierKey === modifierKey);\n            });\n        if (toolOptions.mode === Active && correctBinding) {\n            return toolGroup.getToolInstance(toolName);\n        }\n    }\n}\n//# sourceMappingURL=getActiveToolForMouseEvent.js.map","import { ToolGroupManager } from '../../store';\nexport default function getToolsWithModesForMouseEvent(evt, modesFilter, evtButton) {\n    const { renderingEngineId, viewportId } = evt.detail;\n    const toolGroup = ToolGroupManager.getToolGroupForViewport(viewportId, renderingEngineId);\n    if (!toolGroup) {\n        return [];\n    }\n    const enabledTools = [];\n    const toolGroupToolNames = Object.keys(toolGroup.toolOptions);\n    for (let j = 0; j < toolGroupToolNames.length; j++) {\n        const toolName = toolGroupToolNames[j];\n        const tool = toolGroup.toolOptions[toolName];\n        const correctBinding = evtButton != null &&\n            tool.bindings.length &&\n            tool.bindings.some((binding) => binding.mouseButton === evtButton);\n        if (modesFilter.includes(tool.mode) &&\n            (!evtButton || correctBinding)) {\n            const toolInstance = toolGroup.getToolInstance(toolName);\n            enabledTools.push(toolInstance);\n        }\n    }\n    return enabledTools;\n}\n//# sourceMappingURL=getToolsWithModesForMouseEvent.js.map","import { state } from '../../store';\nimport { ToolModes } from '../../enums';\nimport { setAnnotationSelected, isAnnotationSelected, } from '../../stateManagement/annotation/annotationSelection';\nimport { isAnnotationLocked } from '../../stateManagement/annotation/annotationLocking';\nimport { isAnnotationVisible } from '../../stateManagement/annotation/annotationVisibility';\nimport filterToolsWithMoveableHandles from '../../store/filterToolsWithMoveableHandles';\nimport filterToolsWithAnnotationsForElement from '../../store/filterToolsWithAnnotationsForElement';\nimport filterMoveableAnnotationTools from '../../store/filterMoveableAnnotationTools';\nimport getActiveToolForMouseEvent from '../shared/getActiveToolForMouseEvent';\nimport getToolsWithModesForMouseEvent from '../shared/getToolsWithModesForMouseEvent';\nconst { Active, Passive } = ToolModes;\nexport default function mouseDown(evt) {\n    if (state.isInteractingWithTool) {\n        return;\n    }\n    const activeTool = getActiveToolForMouseEvent(evt);\n    if (activeTool && typeof activeTool.preMouseDownCallback === 'function') {\n        const consumedEvent = activeTool.preMouseDownCallback(evt);\n        if (consumedEvent) {\n            return;\n        }\n    }\n    const isPrimaryClick = evt.detail.event.buttons === 1;\n    const activeToolsWithEventBinding = getToolsWithModesForMouseEvent(evt, [Active], evt.detail.event.buttons);\n    const passiveToolsIfEventWasPrimaryMouseButton = isPrimaryClick\n        ? getToolsWithModesForMouseEvent(evt, [Passive])\n        : undefined;\n    const applicableTools = [\n        ...(activeToolsWithEventBinding || []),\n        ...(passiveToolsIfEventWasPrimaryMouseButton || []),\n    ];\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n    const annotationToolsWithAnnotations = filterToolsWithAnnotationsForElement(element, applicableTools);\n    const canvasCoords = eventDetail.currentPoints.canvas;\n    const annotationToolsWithMoveableHandles = filterToolsWithMoveableHandles(element, annotationToolsWithAnnotations, canvasCoords, 'mouse');\n    const isMultiSelect = !!evt.detail.event.shiftKey;\n    if (annotationToolsWithMoveableHandles.length > 0) {\n        const { tool, annotation, handle } = getAnnotationForSelection(annotationToolsWithMoveableHandles);\n        toggleAnnotationSelection(annotation.annotationUID, isMultiSelect);\n        tool.handleSelectedCallback(evt, annotation, handle, 'Mouse');\n        return;\n    }\n    const moveableAnnotationTools = filterMoveableAnnotationTools(element, annotationToolsWithAnnotations, canvasCoords, 'mouse');\n    if (moveableAnnotationTools.length > 0) {\n        const { tool, annotation } = getAnnotationForSelection(moveableAnnotationTools);\n        toggleAnnotationSelection(annotation.annotationUID, isMultiSelect);\n        tool.toolSelectedCallback(evt, annotation, 'Mouse');\n        return;\n    }\n    if (activeTool && typeof activeTool.postMouseDownCallback === 'function') {\n        const consumedEvent = activeTool.postMouseDownCallback(evt);\n        if (consumedEvent) {\n            return;\n        }\n    }\n}\nfunction getAnnotationForSelection(toolsWithMovableHandles) {\n    return ((toolsWithMovableHandles.length > 1 &&\n        toolsWithMovableHandles.find((item) => !isAnnotationLocked(item.annotation) &&\n            isAnnotationVisible(item.annotation.annotationUID))) ||\n        toolsWithMovableHandles[0]);\n}\nfunction toggleAnnotationSelection(annotationUID, isMultiSelect = false) {\n    if (isMultiSelect) {\n        if (isAnnotationSelected(annotationUID)) {\n            setAnnotationSelected(annotationUID, false);\n        }\n        else {\n            const preserveSelected = true;\n            setAnnotationSelected(annotationUID, true, preserveSelected);\n        }\n    }\n    else {\n        const preserveSelected = false;\n        setAnnotationSelected(annotationUID, true, preserveSelected);\n    }\n}\n//# sourceMappingURL=mouseDown.js.map","import { state } from '../../store';\nimport getActiveToolForMouseEvent from '../shared/getActiveToolForMouseEvent';\nimport { setAnnotationSelected } from '../../stateManagement/annotation/annotationSelection';\nexport default function mouseDownActivate(evt) {\n    if (state.isInteractingWithTool) {\n        return;\n    }\n    const activeTool = getActiveToolForMouseEvent(evt);\n    if (!activeTool) {\n        return;\n    }\n    if (state.isMultiPartToolActive) {\n        return;\n    }\n    if (activeTool.addNewAnnotation) {\n        const annotation = activeTool.addNewAnnotation(evt, 'mouse');\n        setAnnotationSelected(annotation.annotationUID);\n    }\n}\n//# sourceMappingURL=mouseDownActivate.js.map","import getActiveToolForMouseEvent from '../shared/getActiveToolForMouseEvent';\nimport { state } from '../../store';\nexport default function mouseDrag(evt) {\n    if (state.isInteractingWithTool) {\n        return;\n    }\n    const activeTool = getActiveToolForMouseEvent(evt);\n    const noFoundToolOrDoesNotHaveMouseDragCallback = !activeTool || typeof activeTool.mouseDragCallback !== 'function';\n    if (noFoundToolOrDoesNotHaveMouseDragCallback) {\n        return;\n    }\n    activeTool.mouseDragCallback(evt);\n}\n//# sourceMappingURL=mouseDrag.js.map","import { state } from '../../store';\nimport { ToolModes } from '../../enums';\nimport filterToolsWithAnnotationsForElement from '../../store/filterToolsWithAnnotationsForElement';\nimport getToolsWithModesForMouseEvent from '../shared/getToolsWithModesForMouseEvent';\nimport triggerAnnotationRender from '../../utilities/triggerAnnotationRender';\nconst { Active, Passive } = ToolModes;\nexport default function mouseMove(evt) {\n    if (state.isInteractingWithTool || state.isMultiPartToolActive) {\n        return;\n    }\n    const activeAndPassiveTools = getToolsWithModesForMouseEvent(evt, [\n        Active,\n        Passive,\n    ]);\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n    const toolsWithAnnotations = filterToolsWithAnnotationsForElement(element, activeAndPassiveTools);\n    const toolsWithoutAnnotations = activeAndPassiveTools.filter((tool) => {\n        const doesNotHaveAnnotations = !toolsWithAnnotations.some((toolAndAnnotation) => toolAndAnnotation.tool.getToolName() === tool.getToolName());\n        return doesNotHaveAnnotations;\n    });\n    let annotationsNeedToBeRedrawn = false;\n    for (const { tool, annotations } of toolsWithAnnotations) {\n        if (typeof tool.mouseMoveCallback === 'function') {\n            annotationsNeedToBeRedrawn =\n                tool.mouseMoveCallback(evt, annotations) || annotationsNeedToBeRedrawn;\n        }\n    }\n    toolsWithoutAnnotations.forEach((tool) => {\n        if (typeof tool.mouseMoveCallback === 'function') {\n            tool.mouseMoveCallback(evt);\n        }\n    });\n    if (annotationsNeedToBeRedrawn === true) {\n        triggerAnnotationRender(element);\n    }\n}\n//# sourceMappingURL=mouseMove.js.map","import customCallbackHandler from '../shared/customCallbackHandler';\nconst mouseUp = customCallbackHandler.bind(null, 'Mouse', 'mouseUpCallback');\nexport default mouseUp;\n//# sourceMappingURL=mouseUp.js.map","import customCallbackHandler from '../shared/customCallbackHandler';\nconst mouseWheel = customCallbackHandler.bind(null, 'MouseWheel', 'mouseWheelCallback');\nexport default mouseWheel;\n//# sourceMappingURL=mouseWheel.js.map","import Events from '../enums/Events';\nimport { mouseClick, mouseDown, mouseDownActivate, mouseDoubleClick, mouseDrag, mouseMove, mouseUp, mouseWheel, } from './mouseEventHandlers';\nconst enable = function (element) {\n    element.addEventListener(Events.MOUSE_CLICK, mouseClick);\n    element.addEventListener(Events.MOUSE_DOWN, mouseDown);\n    element.addEventListener(Events.MOUSE_DOWN_ACTIVATE, mouseDownActivate);\n    element.addEventListener(Events.MOUSE_DOUBLE_CLICK, mouseDoubleClick);\n    element.addEventListener(Events.MOUSE_DRAG, mouseDrag);\n    element.addEventListener(Events.MOUSE_MOVE, mouseMove);\n    element.addEventListener(Events.MOUSE_UP, mouseUp);\n    element.addEventListener(Events.MOUSE_WHEEL, mouseWheel);\n};\nconst disable = function (element) {\n    element.removeEventListener(Events.MOUSE_CLICK, mouseClick);\n    element.removeEventListener(Events.MOUSE_DOWN, mouseDown);\n    element.removeEventListener(Events.MOUSE_DOWN_ACTIVATE, mouseDownActivate);\n    element.removeEventListener(Events.MOUSE_DOUBLE_CLICK, mouseDoubleClick);\n    element.removeEventListener(Events.MOUSE_DRAG, mouseDrag);\n    element.removeEventListener(Events.MOUSE_MOVE, mouseMove);\n    element.removeEventListener(Events.MOUSE_UP, mouseUp);\n    element.removeEventListener(Events.MOUSE_WHEEL, mouseWheel);\n};\nconst mouseToolEventDispatcher = {\n    enable,\n    disable,\n};\nexport default mouseToolEventDispatcher;\n//# sourceMappingURL=mouseToolEventDispatcher.js.map","import { ToolGroupManager } from '../../store';\nimport { ToolModes } from '../../enums';\nimport { keyEventListener } from '../../eventListeners';\nimport { getMouseButton } from '../../eventListeners/mouse/mouseDownListener';\nconst { Active } = ToolModes;\nexport default function getActiveToolForKeyboardEvent(evt) {\n    const { renderingEngineId, viewportId } = evt.detail;\n    const mouseButton = getMouseButton();\n    const modifierKey = keyEventListener.getModifierKey();\n    const toolGroup = ToolGroupManager.getToolGroupForViewport(viewportId, renderingEngineId);\n    if (!toolGroup) {\n        return null;\n    }\n    const toolGroupToolNames = Object.keys(toolGroup.toolOptions);\n    const defaultMousePrimary = toolGroup.getDefaultMousePrimary();\n    for (let j = 0; j < toolGroupToolNames.length; j++) {\n        const toolName = toolGroupToolNames[j];\n        const toolOptions = toolGroup.toolOptions[toolName];\n        const correctBinding = toolOptions.bindings.length &&\n            toolOptions.bindings.some((binding) => binding.mouseButton === (mouseButton ?? defaultMousePrimary) &&\n                binding.modifierKey === modifierKey);\n        if (toolOptions.mode === Active && correctBinding) {\n            return toolGroup.getToolInstance(toolName);\n        }\n    }\n}\n//# sourceMappingURL=getActiveToolForKeyboardEvent.js.map","import { ToolGroupManager } from '../../store';\nimport getActiveToolForKeyboardEvent from '../shared/getActiveToolForKeyboardEvent';\nexport default function keyDown(evt) {\n    const activeTool = getActiveToolForKeyboardEvent(evt);\n    if (!activeTool) {\n        return;\n    }\n    const { renderingEngineId, viewportId } = evt.detail;\n    const toolGroup = ToolGroupManager.getToolGroupForViewport(viewportId, renderingEngineId);\n    const toolName = activeTool.getToolName();\n    if (Object.keys(toolGroup.toolOptions).includes(toolName)) {\n        toolGroup.setViewportsCursorByToolName(toolName);\n    }\n}\n//# sourceMappingURL=keyDown.js.map","import { resetModifierKey } from '../../eventListeners/keyboard/keyDownListener';\nimport { ToolGroupManager } from '../../store';\nimport getActiveToolForKeyboardEvent from '../shared/getActiveToolForKeyboardEvent';\nexport default function keyUp(evt) {\n    const activeTool = getActiveToolForKeyboardEvent(evt);\n    if (!activeTool) {\n        return;\n    }\n    const { renderingEngineId, viewportId } = evt.detail;\n    const toolGroup = ToolGroupManager.getToolGroupForViewport(viewportId, renderingEngineId);\n    resetModifierKey();\n    const toolName = activeTool.getToolName();\n    if (Object.keys(toolGroup.toolOptions).includes(toolName)) {\n        toolGroup.setViewportsCursorByToolName(toolName);\n    }\n}\n//# sourceMappingURL=keyUp.js.map","import Events from '../enums/Events';\nimport { keyDown, keyUp } from './keyboardEventHandlers';\nconst enable = function (element) {\n    element.addEventListener(Events.KEY_DOWN, keyDown);\n    element.addEventListener(Events.KEY_UP, keyUp);\n};\nconst disable = function (element) {\n    element.removeEventListener(Events.KEY_DOWN, keyDown);\n    element.removeEventListener(Events.KEY_UP, keyUp);\n};\nconst keyboardToolEventDispatcher = {\n    enable,\n    disable,\n};\nexport default keyboardToolEventDispatcher;\n//# sourceMappingURL=keyboardToolEventDispatcher.js.map","import { Enums } from '@cornerstonejs/core';\nimport { ToolModes } from '../enums';\nimport getToolsWithModesForMouseEvent from './shared/getToolsWithModesForMouseEvent';\nconst { Active, Passive, Enabled } = ToolModes;\nconst onCameraModified = function (evt) {\n    const enabledTools = getToolsWithModesForMouseEvent(evt, [\n        Active,\n        Passive,\n        Enabled,\n    ]);\n    enabledTools.forEach((tool) => {\n        if (tool.onCameraModified) {\n            tool.onCameraModified(evt);\n        }\n    });\n};\nconst enable = function (element) {\n    element.addEventListener(Enums.Events.CAMERA_MODIFIED, onCameraModified);\n};\nconst disable = function (element) {\n    element.removeEventListener(Enums.Events.CAMERA_MODIFIED, onCameraModified);\n};\nexport default {\n    enable,\n    disable,\n};\n//# sourceMappingURL=cameraModifiedEventDispatcher.js.map","import { Enums } from '@cornerstonejs/core';\nimport { ToolModes } from '../enums';\nimport getToolsWithModesForMouseEvent from './shared/getToolsWithModesForMouseEvent';\nconst { Active, Passive, Enabled } = ToolModes;\nconst onImageSpacingCalibrated = function (evt) {\n    const enabledTools = getToolsWithModesForMouseEvent(evt, [\n        Active,\n        Passive,\n        Enabled,\n    ]);\n    enabledTools.forEach((tool) => {\n        if (tool.onImageSpacingCalibrated) {\n            tool.onImageSpacingCalibrated(evt);\n        }\n    });\n};\nconst enable = function (element) {\n    element.addEventListener(Enums.Events.IMAGE_SPACING_CALIBRATED, onImageSpacingCalibrated);\n};\nconst disable = function (element) {\n    element.removeEventListener(Enums.Events.IMAGE_SPACING_CALIBRATED, onImageSpacingCalibrated);\n};\nexport default {\n    enable,\n    disable,\n};\n//# sourceMappingURL=imageSpacingCalibratedEventDispatcher.js.map","import { ToolGroupManager } from '../../store';\nimport { ToolModes } from '../../enums';\nimport getMouseModifier from './getMouseModifier';\nimport { keyEventListener } from '../../eventListeners';\nconst { Active } = ToolModes;\nexport default function getActiveToolForTouchEvent(evt) {\n    const { renderingEngineId, viewportId } = evt.detail;\n    const touchEvent = evt.detail.event;\n    const toolGroup = ToolGroupManager.getToolGroupForViewport(viewportId, renderingEngineId);\n    if (!toolGroup) {\n        return null;\n    }\n    const toolGroupToolNames = Object.keys(toolGroup.toolOptions);\n    const numTouchPoints = Object.keys(touchEvent.touches).length;\n    const modifierKey = getMouseModifier(touchEvent) || keyEventListener.getModifierKey();\n    const defaultMousePrimary = toolGroup.getDefaultMousePrimary();\n    for (let j = 0; j < toolGroupToolNames.length; j++) {\n        const toolName = toolGroupToolNames[j];\n        const toolOptions = toolGroup.toolOptions[toolName];\n        const correctBinding = toolOptions.bindings.length &&\n            toolOptions.bindings.some((binding) => (binding.numTouchPoints === numTouchPoints ||\n                (numTouchPoints === 1 &&\n                    binding.mouseButton === defaultMousePrimary)) &&\n                binding.modifierKey === modifierKey);\n        if (toolOptions.mode === Active && correctBinding) {\n            return toolGroup.getToolInstance(toolName);\n        }\n    }\n}\n//# sourceMappingURL=getActiveToolForTouchEvent.js.map","import { ToolGroupManager } from '../../store';\nexport default function getToolsWithModesForTouchEvent(evt, modesFilter, numTouchPoints) {\n    const { renderingEngineId, viewportId } = evt.detail;\n    const toolGroup = ToolGroupManager.getToolGroupForViewport(viewportId, renderingEngineId);\n    if (!toolGroup) {\n        return [];\n    }\n    const enabledTools = [];\n    const toolGroupToolNames = Object.keys(toolGroup.toolOptions);\n    for (let j = 0; j < toolGroupToolNames.length; j++) {\n        const toolName = toolGroupToolNames[j];\n        const tool = toolGroup.toolOptions[toolName];\n        const correctBinding = numTouchPoints != null &&\n            tool.bindings.length &&\n            tool.bindings.some((binding) => binding.numTouchPoints === numTouchPoints);\n        if (modesFilter.includes(tool.mode) &&\n            (!numTouchPoints || correctBinding)) {\n            const toolInstance = toolGroup.getToolInstance(toolName);\n            enabledTools.push(toolInstance);\n        }\n    }\n    return enabledTools;\n}\n//# sourceMappingURL=getToolsWithModesForTouchEvent.js.map","import { state } from '../../store';\nimport { ToolModes } from '../../enums';\nimport { setAnnotationSelected, isAnnotationSelected, } from '../../stateManagement/annotation/annotationSelection';\nimport { isAnnotationLocked } from '../../stateManagement/annotation/annotationLocking';\nimport { isAnnotationVisible } from '../../stateManagement/annotation/annotationVisibility';\nimport filterToolsWithMoveableHandles from '../../store/filterToolsWithMoveableHandles';\nimport filterToolsWithAnnotationsForElement from '../../store/filterToolsWithAnnotationsForElement';\nimport filterMoveableAnnotationTools from '../../store/filterMoveableAnnotationTools';\nimport getActiveToolForTouchEvent from '../shared/getActiveToolForTouchEvent';\nimport getToolsWithModesForTouchEvent from '../shared/getToolsWithModesForTouchEvent';\nconst { Active, Passive } = ToolModes;\nexport default function touchStart(evt) {\n    if (state.isInteractingWithTool) {\n        return;\n    }\n    const activeTool = getActiveToolForTouchEvent(evt);\n    if (activeTool && typeof activeTool.preTouchStartCallback === 'function') {\n        const consumedEvent = activeTool.preTouchStartCallback(evt);\n        if (consumedEvent) {\n            return;\n        }\n    }\n    const isPrimaryClick = Object.keys(evt.detail.event.touches).length === 1;\n    const activeToolsWithEventBinding = getToolsWithModesForTouchEvent(evt, [Active], Object.keys(evt.detail.event.touches).length);\n    const passiveToolsIfEventWasPrimaryTouchButton = isPrimaryClick\n        ? getToolsWithModesForTouchEvent(evt, [Passive])\n        : undefined;\n    const applicableTools = [\n        ...(activeToolsWithEventBinding || []),\n        ...(passiveToolsIfEventWasPrimaryTouchButton || []),\n        activeTool,\n    ];\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n    const annotationToolsWithAnnotations = filterToolsWithAnnotationsForElement(element, applicableTools);\n    const canvasCoords = eventDetail.currentPoints.canvas;\n    const annotationToolsWithMoveableHandles = filterToolsWithMoveableHandles(element, annotationToolsWithAnnotations, canvasCoords, 'touch');\n    const isMultiSelect = false;\n    if (annotationToolsWithMoveableHandles.length > 0) {\n        const { tool, annotation, handle } = getAnnotationForSelection(annotationToolsWithMoveableHandles);\n        toggleAnnotationSelection(annotation.annotationUID, isMultiSelect);\n        tool.handleSelectedCallback(evt, annotation, handle, 'Touch');\n        return;\n    }\n    const moveableAnnotationTools = filterMoveableAnnotationTools(element, annotationToolsWithAnnotations, canvasCoords, 'touch');\n    if (moveableAnnotationTools.length > 0) {\n        const { tool, annotation } = getAnnotationForSelection(moveableAnnotationTools);\n        toggleAnnotationSelection(annotation.annotationUID, isMultiSelect);\n        tool.toolSelectedCallback(evt, annotation, 'Touch');\n        return;\n    }\n    if (activeTool && typeof activeTool.postTouchStartCallback === 'function') {\n        const consumedEvent = activeTool.postTouchStartCallback(evt);\n        if (consumedEvent) {\n            return;\n        }\n    }\n}\nfunction getAnnotationForSelection(toolsWithMovableHandles) {\n    return ((toolsWithMovableHandles.length > 1 &&\n        toolsWithMovableHandles.find((item) => !isAnnotationLocked(item.annotation) &&\n            isAnnotationVisible(item.annotation.annotationUID))) ||\n        toolsWithMovableHandles[0]);\n}\nfunction toggleAnnotationSelection(annotationUID, isMultiSelect = false) {\n    if (isMultiSelect) {\n        if (isAnnotationSelected(annotationUID)) {\n            setAnnotationSelected(annotationUID, false);\n        }\n        else {\n            const preserveSelected = true;\n            setAnnotationSelected(annotationUID, true, preserveSelected);\n        }\n    }\n    else {\n        const preserveSelected = false;\n        setAnnotationSelected(annotationUID, true, preserveSelected);\n    }\n}\n//# sourceMappingURL=touchStart.js.map","import { state } from '../../store';\nimport { setAnnotationSelected } from '../../stateManagement/annotation/annotationSelection';\nimport getActiveToolForTouchEvent from '../shared/getActiveToolForTouchEvent';\nexport default function touchStartActivate(evt) {\n    if (state.isInteractingWithTool) {\n        return;\n    }\n    const activeTool = getActiveToolForTouchEvent(evt);\n    if (!activeTool) {\n        return;\n    }\n    if (state.isMultiPartToolActive) {\n        return;\n    }\n    if (activeTool.addNewAnnotation) {\n        const annotation = activeTool.addNewAnnotation(evt, 'touch');\n        setAnnotationSelected(annotation.annotationUID);\n    }\n}\n//# sourceMappingURL=touchStartActivate.js.map","import getActiveToolForTouchEvent from '../shared/getActiveToolForTouchEvent';\nimport { state } from '../../store';\nexport default function touchDrag(evt) {\n    if (state.isInteractingWithTool) {\n        return;\n    }\n    const activeTool = getActiveToolForTouchEvent(evt);\n    const noFoundToolOrDoesNotHaveTouchDragCallback = !activeTool || typeof activeTool.touchDragCallback !== 'function';\n    if (noFoundToolOrDoesNotHaveTouchDragCallback) {\n        return;\n    }\n    activeTool.touchDragCallback(evt);\n}\n//# sourceMappingURL=touchDrag.js.map","import customCallbackHandler from '../shared/customCallbackHandler';\nconst touchEnd = customCallbackHandler.bind(null, 'Touch', 'touchEndCallback');\nexport default touchEnd;\n//# sourceMappingURL=touchEnd.js.map","import customCallbackHandler from '../shared/customCallbackHandler';\nconst touchTap = customCallbackHandler.bind(null, 'Touch', 'touchTapCallback');\nexport default touchTap;\n//# sourceMappingURL=touchTap.js.map","import customCallbackHandler from '../shared/customCallbackHandler';\nconst touchPress = customCallbackHandler.bind(null, 'Touch', 'touchPressCallback');\nexport default touchPress;\n//# sourceMappingURL=touchPress.js.map","import Events from '../enums/Events';\nimport { touchStart, touchStartActivate, touchDrag, touchEnd, touchTap, touchPress, } from './touchEventHandlers';\nconst enable = function (element) {\n    element.addEventListener(Events.TOUCH_START, touchStart);\n    element.addEventListener(Events.TOUCH_START_ACTIVATE, touchStartActivate);\n    element.addEventListener(Events.TOUCH_DRAG, touchDrag);\n    element.addEventListener(Events.TOUCH_END, touchEnd);\n    element.addEventListener(Events.TOUCH_TAP, touchTap);\n    element.addEventListener(Events.TOUCH_PRESS, touchPress);\n};\nconst disable = function (element) {\n    element.removeEventListener(Events.TOUCH_START, touchStart);\n    element.removeEventListener(Events.TOUCH_START_ACTIVATE, touchStartActivate);\n    element.removeEventListener(Events.TOUCH_DRAG, touchDrag);\n    element.removeEventListener(Events.TOUCH_END, touchEnd);\n    element.removeEventListener(Events.TOUCH_PRESS, touchPress);\n};\nconst touchToolEventDispatcher = {\n    enable,\n    disable,\n};\nexport default touchToolEventDispatcher;\n//# sourceMappingURL=touchToolEventDispatcher.js.map","import { mouseEventListeners, wheelEventListener, touchEventListeners, keyEventListener, } from '../eventListeners';\nimport { imageRenderedEventDispatcher, cameraModifiedEventDispatcher, mouseToolEventDispatcher, touchToolEventDispatcher, keyboardToolEventDispatcher, imageSpacingCalibratedEventDispatcher, } from '../eventDispatchers';\nimport { state } from './state';\nimport { annotationRenderingEngine } from '../utilities/triggerAnnotationRender';\nexport default function addEnabledElement(evt) {\n    const { element, viewportId } = evt.detail;\n    const svgLayer = _createSvgAnnotationLayer(viewportId);\n    _setSvgNodeCache(element);\n    _appendChild(svgLayer, element);\n    annotationRenderingEngine.addViewportElement(viewportId, element);\n    mouseEventListeners.enable(element);\n    wheelEventListener.enable(element);\n    touchEventListeners.enable(element);\n    keyEventListener.enable(element);\n    imageRenderedEventDispatcher.enable(element);\n    cameraModifiedEventDispatcher.enable(element);\n    imageSpacingCalibratedEventDispatcher.enable(element);\n    mouseToolEventDispatcher.enable(element);\n    keyboardToolEventDispatcher.enable(element);\n    touchToolEventDispatcher.enable(element);\n    state.enabledElements.push(element);\n}\nfunction _createSvgAnnotationLayer(viewportId) {\n    const svgns = 'http://www.w3.org/2000/svg';\n    const svgLayer = document.createElementNS(svgns, 'svg');\n    const svgLayerId = `svg-layer-${viewportId}`;\n    svgLayer.classList.add('svg-layer');\n    svgLayer.setAttribute('id', svgLayerId);\n    svgLayer.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n    svgLayer.style.width = '100%';\n    svgLayer.style.height = '100%';\n    svgLayer.style.pointerEvents = 'none';\n    svgLayer.style.position = 'absolute';\n    const defs = document.createElementNS(svgns, 'defs');\n    const filter = document.createElementNS(svgns, 'filter');\n    const feOffset = document.createElementNS(svgns, 'feOffset');\n    const feColorMatrix = document.createElementNS(svgns, 'feColorMatrix');\n    const feBlend = document.createElementNS(svgns, 'feBlend');\n    filter.setAttribute('id', `shadow-${svgLayerId}`);\n    filter.setAttribute('filterUnits', 'userSpaceOnUse');\n    feOffset.setAttribute('result', 'offOut');\n    feOffset.setAttribute('in', 'SourceGraphic');\n    feOffset.setAttribute('dx', '0.5');\n    feOffset.setAttribute('dy', '0.5');\n    feColorMatrix.setAttribute('result', 'matrixOut');\n    feColorMatrix.setAttribute('in', 'offOut');\n    feColorMatrix.setAttribute('in2', 'matrix');\n    feColorMatrix.setAttribute('values', '0.2 0 0 0 0 0 0.2 0 0 0 0 0 0.2 0 0 0 0 0 1 0');\n    feBlend.setAttribute('in', 'SourceGraphic');\n    feBlend.setAttribute('in2', 'matrixOut');\n    feBlend.setAttribute('mode', 'normal');\n    filter.appendChild(feOffset);\n    filter.appendChild(feColorMatrix);\n    filter.appendChild(feBlend);\n    defs.appendChild(filter);\n    svgLayer.appendChild(defs);\n    return svgLayer;\n}\nfunction _setSvgNodeCache(element) {\n    const { viewportUid: viewportId, renderingEngineUid: renderingEngineId } = element.dataset;\n    const elementHash = `${viewportId}:${renderingEngineId}`;\n    state.svgNodeCache[elementHash] = {};\n}\nfunction _appendChild(newNode, referenceNode) {\n    referenceNode.querySelector('div.viewport-element').appendChild(newNode);\n}\n//# sourceMappingURL=addEnabledElement.js.map","import { state } from '../index';\nfunction getSynchronizersForViewport(viewportId, renderingEngineId) {\n    const synchronizersFilteredByIds = [];\n    if (!renderingEngineId && !viewportId) {\n        throw new Error('At least one of renderingEngineId or viewportId should be given');\n    }\n    for (let i = 0; i < state.synchronizers.length; i++) {\n        const synchronizer = state.synchronizers[i];\n        const notDisabled = !synchronizer.isDisabled();\n        const hasSourceViewport = synchronizer.hasSourceViewport(renderingEngineId, viewportId);\n        const hasTargetViewport = synchronizer.hasTargetViewport(renderingEngineId, viewportId);\n        if (notDisabled && (hasSourceViewport || hasTargetViewport)) {\n            synchronizersFilteredByIds.push(synchronizer);\n        }\n    }\n    return synchronizersFilteredByIds;\n}\nexport default getSynchronizersForViewport;\n//# sourceMappingURL=getSynchronizersForViewport.js.map","import { state } from '../index';\nfunction getToolGroupForViewport(viewportId, renderingEngineId) {\n    const toolGroupFilteredByIds = state.toolGroups.filter((tg) => tg.viewportsInfo.some((vp) => vp.renderingEngineId === renderingEngineId &&\n        (!vp.viewportId || vp.viewportId === viewportId)));\n    if (!toolGroupFilteredByIds.length) {\n        return;\n    }\n    if (toolGroupFilteredByIds.length > 1) {\n        throw new Error(`Multiple tool groups found for renderingEngineId: ${renderingEngineId} and viewportId: ${viewportId}. You should only\n      have one tool group per viewport in a renderingEngine.`);\n    }\n    return toolGroupFilteredByIds[0];\n}\nexport default getToolGroupForViewport;\n//# sourceMappingURL=getToolGroupForViewport.js.map","import { getEnabledElement } from '@cornerstonejs/core';\nimport { mouseEventListeners, wheelEventListener, touchEventListeners, keyEventListener, } from '../eventListeners';\nimport { imageRenderedEventDispatcher, cameraModifiedEventDispatcher, mouseToolEventDispatcher, keyboardToolEventDispatcher, imageSpacingCalibratedEventDispatcher, touchToolEventDispatcher, } from '../eventDispatchers';\nimport filterToolsWithAnnotationsForElement from './filterToolsWithAnnotationsForElement';\nimport { state } from './state';\nimport getToolsWithModesForElement from '../utilities/getToolsWithModesForElement';\nimport { ToolModes } from '../enums';\nimport { removeAnnotation } from '../stateManagement';\nimport getSynchronizersForViewport from './SynchronizerManager/getSynchronizersForViewport';\nimport getToolGroupForViewport from './ToolGroupManager/getToolGroupForViewport';\nimport { annotationRenderingEngine } from '../utilities/triggerAnnotationRender';\nconst VIEWPORT_ELEMENT = 'viewport-element';\nfunction removeEnabledElement(elementDisabledEvt) {\n    const { element, viewportId } = elementDisabledEvt.detail;\n    _resetSvgNodeCache(element);\n    _removeSvgNode(element);\n    annotationRenderingEngine.removeViewportElement(viewportId, element);\n    mouseEventListeners.disable(element);\n    wheelEventListener.disable(element);\n    touchEventListeners.disable(element);\n    keyEventListener.disable(element);\n    imageRenderedEventDispatcher.disable(element);\n    cameraModifiedEventDispatcher.disable(element);\n    imageSpacingCalibratedEventDispatcher.disable(element);\n    mouseToolEventDispatcher.disable(element);\n    keyboardToolEventDispatcher.disable(element);\n    touchToolEventDispatcher.disable(element);\n    _removeViewportFromSynchronizers(element);\n    _removeViewportFromToolGroup(element);\n    _removeEnabledElement(element);\n}\nconst _removeViewportFromSynchronizers = (element) => {\n    const enabledElement = getEnabledElement(element);\n    const synchronizers = getSynchronizersForViewport(enabledElement.viewportId, enabledElement.renderingEngineId);\n    synchronizers.forEach((sync) => {\n        sync.remove(enabledElement);\n    });\n};\nconst _removeViewportFromToolGroup = (element) => {\n    const { renderingEngineId, viewportId } = getEnabledElement(element);\n    const toolGroup = getToolGroupForViewport(viewportId, renderingEngineId);\n    if (toolGroup) {\n        toolGroup.removeViewports(renderingEngineId, viewportId);\n    }\n};\nconst _removeAllToolsForElement = function (element) {\n    const tools = getToolsWithModesForElement(element, [\n        ToolModes.Active,\n        ToolModes.Passive,\n    ]);\n    const toolsWithData = filterToolsWithAnnotationsForElement(element, tools);\n    toolsWithData.forEach(({ annotations }) => {\n        annotations.forEach((annotation) => {\n            removeAnnotation(annotation.annotationUID);\n        });\n    });\n};\nfunction _resetSvgNodeCache(element) {\n    const { viewportUid: viewportId, renderingEngineUid: renderingEngineId } = element.dataset;\n    const elementHash = `${viewportId}:${renderingEngineId}`;\n    delete state.svgNodeCache[elementHash];\n}\nfunction _removeSvgNode(element) {\n    const internalViewportNode = element.querySelector(`div.${VIEWPORT_ELEMENT}`);\n    const svgLayer = internalViewportNode.querySelector('svg');\n    if (svgLayer) {\n        internalViewportNode.removeChild(svgLayer);\n    }\n}\nconst _removeEnabledElement = function (element) {\n    const foundElementIndex = state.enabledElements.findIndex((el) => el === element);\n    if (foundElementIndex > -1) {\n        state.enabledElements.splice(foundElementIndex, 1);\n    }\n};\nexport default removeEnabledElement;\n//# sourceMappingURL=removeEnabledElement.js.map","import { ToolModes } from '../enums';\nimport getToolsWithModesForElement from '../utilities/getToolsWithModesForElement';\nimport filterToolsWithAnnotationsForElement from './filterToolsWithAnnotationsForElement';\nexport default function cancelActiveManipulations(element) {\n    const tools = getToolsWithModesForElement(element, [\n        ToolModes.Active,\n        ToolModes.Passive,\n    ]);\n    const toolsWithData = filterToolsWithAnnotationsForElement(element, tools);\n    for (const { tool } of toolsWithData) {\n        const annotationUID = tool.cancel(element);\n        if (annotationUID) {\n            return annotationUID;\n        }\n    }\n}\n//# sourceMappingURL=cancelActiveManipulations.js.map","import { getRenderingEngine, getEnabledElement, Enums, } from '@cornerstonejs/core';\nclass Synchronizer {\n    constructor(synchronizerId, eventName, eventHandler) {\n        this._viewportOptions = {};\n        this._onEvent = (evt) => {\n            if (this._ignoreFiredEvents === true) {\n                return;\n            }\n            if (!this._targetViewports.length) {\n                return;\n            }\n            const enabledElement = getEnabledElement(evt.currentTarget);\n            if (!enabledElement) {\n                return;\n            }\n            const { renderingEngineId, viewportId } = enabledElement;\n            if (!this._sourceViewports.find((s) => s.viewportId === viewportId)) {\n                return;\n            }\n            this.fireEvent({\n                renderingEngineId,\n                viewportId,\n            }, evt);\n        };\n        this._enabled = true;\n        this._eventName = eventName;\n        this._eventHandler = eventHandler;\n        this._ignoreFiredEvents = false;\n        this._sourceViewports = [];\n        this._targetViewports = [];\n        this.id = synchronizerId;\n    }\n    isDisabled() {\n        return !this._enabled || !this._hasSourceElements();\n    }\n    setOptions(viewportId, options = {}) {\n        this._viewportOptions[viewportId] = options;\n    }\n    getOptions(viewportId) {\n        return this._viewportOptions[viewportId];\n    }\n    add(viewportInfo) {\n        this.addTarget(viewportInfo);\n        this.addSource(viewportInfo);\n    }\n    addSource(viewportInfo) {\n        if (_containsViewport(this._sourceViewports, viewportInfo)) {\n            return;\n        }\n        const { renderingEngineId, viewportId } = viewportInfo;\n        const { element } = getRenderingEngine(renderingEngineId).getViewport(viewportId);\n        element.addEventListener(this._eventName, this._onEvent.bind(this));\n        this._updateDisableHandlers();\n        this._sourceViewports.push(viewportInfo);\n    }\n    addTarget(viewportInfo) {\n        if (_containsViewport(this._targetViewports, viewportInfo)) {\n            return;\n        }\n        this._targetViewports.push(viewportInfo);\n        this._updateDisableHandlers();\n    }\n    getSourceViewports() {\n        return this._sourceViewports;\n    }\n    getTargetViewports() {\n        return this._targetViewports;\n    }\n    destroy() {\n        this._sourceViewports.forEach((s) => this.removeSource(s));\n        this._targetViewports.forEach((t) => this.removeTarget(t));\n    }\n    remove(viewportInfo) {\n        this.removeTarget(viewportInfo);\n        this.removeSource(viewportInfo);\n    }\n    removeSource(viewportInfo) {\n        const index = _getViewportIndex(this._sourceViewports, viewportInfo);\n        if (index === -1) {\n            return;\n        }\n        const element = _getViewportElement(viewportInfo);\n        this._sourceViewports.splice(index, 1);\n        element.removeEventListener(this._eventName, this._eventHandler);\n        this._updateDisableHandlers();\n    }\n    removeTarget(viewportInfo) {\n        const index = _getViewportIndex(this._targetViewports, viewportInfo);\n        if (index === -1) {\n            return;\n        }\n        this._targetViewports.splice(index, 1);\n        this._updateDisableHandlers();\n    }\n    hasSourceViewport(renderingEngineId, viewportId) {\n        return _containsViewport(this._sourceViewports, {\n            renderingEngineId,\n            viewportId,\n        });\n    }\n    hasTargetViewport(renderingEngineId, viewportId) {\n        return _containsViewport(this._targetViewports, {\n            renderingEngineId,\n            viewportId,\n        });\n    }\n    fireEvent(sourceViewport, sourceEvent) {\n        if (this.isDisabled() || this._ignoreFiredEvents) {\n            return;\n        }\n        this._ignoreFiredEvents = true;\n        try {\n            for (let i = 0; i < this._targetViewports.length; i++) {\n                const targetViewport = this._targetViewports[i];\n                const targetIsSource = sourceViewport.viewportId === targetViewport.viewportId;\n                if (targetIsSource) {\n                    continue;\n                }\n                this._eventHandler(this, sourceViewport, targetViewport, sourceEvent);\n            }\n        }\n        catch (ex) {\n            console.warn(`Synchronizer, for: ${this._eventName}`, ex);\n        }\n        finally {\n            this._ignoreFiredEvents = false;\n        }\n    }\n    _hasSourceElements() {\n        return this._sourceViewports.length !== 0;\n    }\n    _updateDisableHandlers() {\n        const viewports = _getUniqueViewports(this._sourceViewports, this._targetViewports);\n        const _remove = this.remove;\n        const disableHandler = (elementDisabledEvent) => {\n            _remove(elementDisabledEvent.detail.element);\n        };\n        viewports.forEach(function (vUid) {\n            const renderingEngine = getRenderingEngine(vUid.renderingEngineId).getViewport(vUid.viewportId);\n            if (!renderingEngine) {\n                return;\n            }\n            const { element } = renderingEngine;\n            element.removeEventListener(Enums.Events.ELEMENT_DISABLED, disableHandler);\n            element.addEventListener(Enums.Events.ELEMENT_DISABLED, disableHandler);\n        });\n    }\n}\nfunction _getUniqueViewports(vp1, vp2) {\n    const unique = [];\n    const vps = vp1.concat(vp2);\n    for (let i = 0; i < vps.length; i++) {\n        const vp = vps[i];\n        if (!unique.some((u) => vp.renderingEngineId === u.renderingEngineId &&\n            vp.viewportId === u.viewportId)) {\n            unique.push(vp);\n        }\n    }\n    return unique;\n}\nfunction _getViewportIndex(arr, vp) {\n    return arr.findIndex((ar) => vp.renderingEngineId === ar.renderingEngineId &&\n        vp.viewportId === ar.viewportId);\n}\nfunction _containsViewport(arr, vp) {\n    return arr.some((ar) => ar.renderingEngineId === vp.renderingEngineId &&\n        ar.viewportId === vp.viewportId);\n}\nfunction _getViewportElement(vp) {\n    const renderingEngine = getRenderingEngine(vp.renderingEngineId);\n    if (!renderingEngine) {\n        throw new Error(`No RenderingEngine for Id: ${vp.renderingEngineId}`);\n    }\n    return renderingEngine.getViewport(vp.viewportId).element;\n}\nexport default Synchronizer;\n//# sourceMappingURL=Synchronizer.js.map","import { state } from '../index';\nimport Synchronizer from './Synchronizer';\nfunction createSynchronizer(synchronizerId, eventName, eventHandler) {\n    const synchronizerWithSameIdExists = state.synchronizers.some((sync) => sync.id === synchronizerId);\n    if (synchronizerWithSameIdExists) {\n        throw new Error(`Synchronizer with id '${synchronizerId}' already exists.`);\n    }\n    const synchronizer = new Synchronizer(synchronizerId, eventName, eventHandler);\n    state.synchronizers.push(synchronizer);\n    return synchronizer;\n}\nexport default createSynchronizer;\n//# sourceMappingURL=createSynchronizer.js.map","import { state } from '../index';\nfunction destroy() {\n    while (state.synchronizers.length > 0) {\n        const synchronizer = state.synchronizers.pop();\n        synchronizer.destroy();\n    }\n}\nexport default destroy;\n//# sourceMappingURL=destroy.js.map","import { state } from '../index';\nfunction getSynchronizer(synchronizerId) {\n    return state.synchronizers.find((s) => s.id === synchronizerId);\n}\nexport default getSynchronizer;\n//# sourceMappingURL=getSynchronizer.js.map","import { state } from '../index';\nfunction getAllSynchronizers() {\n    return state.synchronizers;\n}\nexport default getAllSynchronizers;\n//# sourceMappingURL=getAllSynchronizers.js.map","import { state } from '../index';\nfunction destroySynchronizer(synchronizerId) {\n    const synchronizerIndex = state.synchronizers.findIndex((sync) => sync.id === synchronizerId);\n    if (synchronizerIndex > -1) {\n        const synchronizer = state.synchronizers[synchronizerIndex];\n        synchronizer.destroy();\n        state.synchronizers.splice(synchronizerIndex, 1);\n    }\n}\nexport default destroySynchronizer;\n//# sourceMappingURL=destroySynchronizer.js.map","import { MouseBindings, ToolModes } from '../../enums';\nimport cloneDeep from 'lodash.clonedeep';\nimport get from 'lodash.get';\nimport { getRenderingEngine, getRenderingEngines, getEnabledElementByIds, Settings, utilities as csUtils, } from '@cornerstonejs/core';\nimport { state } from '../index';\nimport { MouseCursor, SVGMouseCursor } from '../../cursors';\nimport { initElementCursor } from '../../cursors/elementCursor';\nconst { Active, Passive, Enabled, Disabled } = ToolModes;\nexport default class ToolGroup {\n    constructor(id) {\n        this.viewportsInfo = [];\n        this.toolOptions = {};\n        this._toolInstances = {};\n        this.id = id;\n    }\n    getViewportIds() {\n        return this.viewportsInfo.map(({ viewportId }) => viewportId);\n    }\n    getViewportsInfo() {\n        return this.viewportsInfo.slice();\n    }\n    getToolInstance(toolInstanceName) {\n        const toolInstance = this._toolInstances[toolInstanceName];\n        if (!toolInstance) {\n            console.warn(`'${toolInstanceName}' is not registered with this toolGroup.`);\n            return;\n        }\n        return toolInstance;\n    }\n    addTool(toolName, configuration = {}) {\n        const toolDefinition = state.tools[toolName];\n        const hasToolName = typeof toolName !== 'undefined' && toolName !== '';\n        const localToolInstance = this.toolOptions[toolName];\n        if (!hasToolName) {\n            console.warn('Tool with configuration did not produce a toolName: ', configuration);\n            return;\n        }\n        if (!toolDefinition) {\n            console.warn(`'${toolName}' is not registered with the library. You need to use cornerstoneTools.addTool to register it.`);\n            return;\n        }\n        if (localToolInstance) {\n            console.warn(`'${toolName}' is already registered for ToolGroup ${this.id}.`);\n            return;\n        }\n        const { toolClass: ToolClass } = toolDefinition;\n        const toolProps = {\n            name: toolName,\n            toolGroupId: this.id,\n            configuration,\n        };\n        const instantiatedTool = new ToolClass(toolProps);\n        this._toolInstances[toolName] = instantiatedTool;\n    }\n    addToolInstance(toolName, parentClassName, configuration = {}) {\n        let ToolClassToUse = state.tools[toolName]\n            ?.toolClass;\n        if (!ToolClassToUse) {\n            const ParentClass = state.tools[parentClassName]\n                .toolClass;\n            class ToolInstance extends ParentClass {\n            }\n            ToolInstance.toolName = toolName;\n            ToolClassToUse = ToolInstance;\n            state.tools[toolName] = {\n                toolClass: ToolInstance,\n            };\n        }\n        this.addTool(ToolClassToUse.toolName, configuration);\n    }\n    addViewport(viewportId, renderingEngineId) {\n        const renderingEngines = getRenderingEngines();\n        if (!renderingEngineId && renderingEngines.length > 1) {\n            throw new Error('You must specify a renderingEngineId when there are multiple rendering engines.');\n        }\n        const renderingEngineUIDToUse = renderingEngineId || renderingEngines[0].id;\n        if (!this.viewportsInfo.some(({ viewportId: vpId }) => vpId === viewportId)) {\n            this.viewportsInfo.push({\n                viewportId,\n                renderingEngineId: renderingEngineUIDToUse,\n            });\n        }\n        const toolName = this.getActivePrimaryMouseButtonTool();\n        const runtimeSettings = Settings.getRuntimeSettings();\n        if (runtimeSettings.get('useCursors')) {\n            this.setViewportsCursorByToolName(toolName);\n        }\n    }\n    removeViewports(renderingEngineId, viewportId) {\n        const indices = [];\n        this.viewportsInfo.forEach((vpInfo, index) => {\n            let match = false;\n            if (vpInfo.renderingEngineId === renderingEngineId) {\n                match = true;\n                if (viewportId && vpInfo.viewportId !== viewportId) {\n                    match = false;\n                }\n            }\n            if (match) {\n                indices.push(index);\n            }\n        });\n        if (indices.length) {\n            for (let i = indices.length - 1; i >= 0; i--) {\n                this.viewportsInfo.splice(indices[i], 1);\n            }\n        }\n    }\n    setActiveStrategy(toolName, strategyName) {\n        const toolInstance = this._toolInstances[toolName];\n        if (toolInstance === undefined) {\n            console.warn(`Tool ${toolName} not added to toolGroup, can't set tool configuration.`);\n            return;\n        }\n        toolInstance.setActiveStrategy(strategyName);\n    }\n    setToolMode(toolName, mode, options = {}) {\n        if (!toolName) {\n            console.warn('setToolMode: toolName must be defined');\n            return;\n        }\n        if (mode === ToolModes.Active) {\n            this.setToolActive(toolName, options);\n            return;\n        }\n        if (mode === ToolModes.Passive) {\n            this.setToolPassive(toolName);\n            return;\n        }\n        if (mode === ToolModes.Enabled) {\n            this.setToolEnabled(toolName);\n            return;\n        }\n        if (mode === ToolModes.Disabled) {\n            this.setToolDisabled(toolName);\n            return;\n        }\n        console.warn('setToolMode: mode must be defined');\n    }\n    setToolActive(toolName, toolBindingsOptions = {}) {\n        const toolInstance = this._toolInstances[toolName];\n        if (toolInstance === undefined) {\n            console.warn(`Tool ${toolName} not added to toolGroup, can't set tool mode.`);\n            return;\n        }\n        if (!toolInstance) {\n            console.warn(`'${toolName}' instance ${toolInstance} is not registered with this toolGroup, can't set tool mode.`);\n            return;\n        }\n        const prevBindings = this.toolOptions[toolName]\n            ? this.toolOptions[toolName].bindings\n            : [];\n        const newBindings = toolBindingsOptions.bindings\n            ? toolBindingsOptions.bindings\n            : [];\n        const bindingsToUse = [...prevBindings, ...newBindings].reduce((unique, binding) => {\n            const TouchBinding = binding.numTouchPoints !== undefined;\n            const MouseBinding = binding.mouseButton !== undefined;\n            if (!unique.some((obj) => hasSameBinding(obj, binding)) &&\n                (TouchBinding || MouseBinding)) {\n                unique.push(binding);\n            }\n            return unique;\n        }, []);\n        const toolOptions = {\n            bindings: bindingsToUse,\n            mode: Active,\n        };\n        this.toolOptions[toolName] = toolOptions;\n        this._toolInstances[toolName].mode = Active;\n        const runtimeSettings = Settings.getRuntimeSettings();\n        const useCursor = runtimeSettings.get('useCursors');\n        if (this._hasMousePrimaryButtonBinding(toolBindingsOptions) && useCursor) {\n            this.setViewportsCursorByToolName(toolName);\n        }\n        else {\n            const activeToolIdentifier = this.getActivePrimaryMouseButtonTool();\n            if (!activeToolIdentifier && useCursor) {\n                const cursor = MouseCursor.getDefinedCursor('default');\n                this._setCursorForViewports(cursor);\n            }\n        }\n        if (typeof toolInstance.onSetToolActive === 'function') {\n            toolInstance.onSetToolActive();\n        }\n        this._renderViewports();\n    }\n    setToolPassive(toolName) {\n        const toolInstance = this._toolInstances[toolName];\n        if (toolInstance === undefined) {\n            console.warn(`Tool ${toolName} not added to toolGroup, can't set tool mode.`);\n            return;\n        }\n        const prevToolOptions = this.getToolOptions(toolName);\n        const toolOptions = Object.assign({\n            bindings: prevToolOptions ? prevToolOptions.bindings : [],\n        }, prevToolOptions, {\n            mode: Passive,\n        });\n        const defaultMousePrimary = this.getDefaultMousePrimary();\n        toolOptions.bindings = toolOptions.bindings.filter((binding) => binding.mouseButton !== defaultMousePrimary || binding.modifierKey);\n        let mode = Passive;\n        if (toolOptions.bindings.length !== 0) {\n            mode = Active;\n            toolOptions.mode = mode;\n        }\n        this.toolOptions[toolName] = toolOptions;\n        toolInstance.mode = mode;\n        if (typeof toolInstance.onSetToolPassive === 'function') {\n            toolInstance.onSetToolPassive();\n        }\n        this._renderViewports();\n    }\n    setToolEnabled(toolName) {\n        const toolInstance = this._toolInstances[toolName];\n        if (toolInstance === undefined) {\n            console.warn(`Tool ${toolName} not added to toolGroup, can't set tool mode.`);\n            return;\n        }\n        const toolOptions = {\n            bindings: [],\n            mode: Enabled,\n        };\n        this.toolOptions[toolName] = toolOptions;\n        toolInstance.mode = Enabled;\n        if (typeof toolInstance.onSetToolEnabled === 'function') {\n            toolInstance.onSetToolEnabled();\n        }\n        this._renderViewports();\n    }\n    setToolDisabled(toolName) {\n        const toolInstance = this._toolInstances[toolName];\n        if (toolInstance === undefined) {\n            console.warn(`Tool ${toolName} not added to toolGroup, can't set tool mode.`);\n            return;\n        }\n        const toolOptions = {\n            bindings: [],\n            mode: Disabled,\n        };\n        this.toolOptions[toolName] = toolOptions;\n        toolInstance.mode = Disabled;\n        if (typeof toolInstance.onSetToolDisabled === 'function') {\n            toolInstance.onSetToolDisabled();\n        }\n        this._renderViewports();\n    }\n    getToolOptions(toolName) {\n        const toolOptionsForTool = this.toolOptions[toolName];\n        if (toolOptionsForTool === undefined) {\n            return;\n        }\n        return toolOptionsForTool;\n    }\n    getActivePrimaryMouseButtonTool() {\n        return Object.keys(this.toolOptions).find((toolName) => {\n            const toolOptions = this.toolOptions[toolName];\n            return (toolOptions.mode === Active &&\n                this._hasMousePrimaryButtonBinding(toolOptions));\n        });\n    }\n    setViewportsCursorByToolName(toolName, strategyName) {\n        const cursor = this._getCursor(toolName, strategyName);\n        this._setCursorForViewports(cursor);\n    }\n    _getCursor(toolName, strategyName) {\n        let cursorName;\n        let cursor;\n        if (strategyName) {\n            cursorName = `${toolName}.${strategyName}`;\n            cursor = SVGMouseCursor.getDefinedCursor(cursorName, true);\n            if (cursor) {\n                return cursor;\n            }\n        }\n        cursorName = `${toolName}`;\n        cursor = SVGMouseCursor.getDefinedCursor(cursorName, true);\n        if (cursor) {\n            return cursor;\n        }\n        cursorName = toolName;\n        cursor = SVGMouseCursor.getDefinedCursor(cursorName, true);\n        if (cursor) {\n            return cursor;\n        }\n        return MouseCursor.getDefinedCursor('default');\n    }\n    _setCursorForViewports(cursor) {\n        this.viewportsInfo.forEach(({ renderingEngineId, viewportId }) => {\n            const enabledElement = getEnabledElementByIds(viewportId, renderingEngineId);\n            if (!enabledElement) {\n                return;\n            }\n            const { viewport } = enabledElement;\n            initElementCursor(viewport.element, cursor);\n        });\n    }\n    setToolConfiguration(toolName, configuration, overwrite) {\n        if (this._toolInstances[toolName] === undefined) {\n            console.warn(`Tool ${toolName} not present, can't set tool configuration.`);\n            return false;\n        }\n        let _configuration;\n        if (overwrite) {\n            _configuration = configuration;\n        }\n        else {\n            _configuration = csUtils.deepMerge(this._toolInstances[toolName].configuration, configuration);\n        }\n        this._toolInstances[toolName].configuration = _configuration;\n        this._renderViewports();\n        return true;\n    }\n    getDefaultMousePrimary() {\n        return MouseBindings.Primary;\n    }\n    getToolConfiguration(toolName, configurationPath) {\n        if (this._toolInstances[toolName] === undefined) {\n            console.warn(`Tool ${toolName} not present, can't set tool configuration.`);\n            return;\n        }\n        const _configuration = get(this._toolInstances[toolName].configuration, configurationPath);\n        return cloneDeep(_configuration);\n    }\n    _hasMousePrimaryButtonBinding(toolOptions) {\n        const defaultMousePrimary = this.getDefaultMousePrimary();\n        return toolOptions?.bindings?.some((binding) => binding.mouseButton === defaultMousePrimary &&\n            binding.modifierKey === undefined);\n    }\n    _renderViewports() {\n        this.viewportsInfo.forEach(({ renderingEngineId, viewportId }) => {\n            getRenderingEngine(renderingEngineId).renderViewport(viewportId);\n        });\n    }\n}\nfunction hasSameBinding(binding1, binding2) {\n    if (binding1.mouseButton !== binding2.mouseButton) {\n        return false;\n    }\n    return binding1.modifierKey === binding2.modifierKey;\n}\n//# sourceMappingURL=ToolGroup.js.map","import { state } from '../index';\nimport ToolGroup from './ToolGroup';\nfunction createToolGroup(toolGroupId) {\n    const toolGroupWithIdExists = state.toolGroups.some((tg) => tg.id === toolGroupId);\n    if (toolGroupWithIdExists) {\n        console.warn(`'${toolGroupId}' already exists.`);\n        return;\n    }\n    const toolGroup = new ToolGroup(toolGroupId);\n    state.toolGroups.push(toolGroup);\n    return toolGroup;\n}\nexport default createToolGroup;\n//# sourceMappingURL=createToolGroup.js.map","import { state } from '../index';\nimport { removeSegmentationsFromToolGroup } from '../../stateManagement/segmentation';\nimport { segmentationRenderingEngine } from '../../utilities/segmentation/triggerSegmentationRender';\nfunction destroyToolGroup(toolGroupId) {\n    const toolGroupIndex = state.toolGroups.findIndex((tg) => tg.id === toolGroupId);\n    if (toolGroupIndex > -1) {\n        segmentationRenderingEngine.removeToolGroup(toolGroupId);\n        removeSegmentationsFromToolGroup(toolGroupId);\n        state.toolGroups.splice(toolGroupIndex, 1);\n    }\n}\nexport default destroyToolGroup;\n//# sourceMappingURL=destroyToolGroup.js.map","import { state as csToolsState } from '../index';\nimport destroyToolGroup from './destroyToolGroup';\nfunction destroy() {\n    const toolGroups = [...csToolsState.toolGroups];\n    for (const toolGroup of toolGroups) {\n        destroyToolGroup(toolGroup.id);\n    }\n    csToolsState.toolGroups = [];\n}\nexport default destroy;\n//# sourceMappingURL=destroy.js.map","import { state } from '../index';\nfunction getToolGroup(toolGroupId) {\n    return state.toolGroups.find((s) => s.id === toolGroupId);\n}\nexport default getToolGroup;\n//# sourceMappingURL=getToolGroup.js.map","import { state } from '../index';\nfunction getAllToolGroups() {\n    return state.toolGroups;\n}\nexport default getAllToolGroups;\n//# sourceMappingURL=getAllToolGroups.js.map","import { state } from '../index';\nimport { ToolModes } from '../../enums';\nconst MODES = [ToolModes.Active, ToolModes.Passive, ToolModes.Enabled];\nfunction getToolGroupsWithToolName(toolName) {\n    return state.toolGroups.filter(({ toolOptions }) => {\n        const toolGroupToolNames = Object.keys(toolOptions);\n        for (let i = 0; i < toolGroupToolNames.length; i++) {\n            if (toolName !== toolGroupToolNames[i])\n                continue;\n            if (!toolOptions[toolName]) {\n                continue;\n            }\n            if (MODES.includes(toolOptions[toolName].mode)) {\n                return true;\n            }\n        }\n        return false;\n    });\n}\nexport default getToolGroupsWithToolName;\n//# sourceMappingURL=getToolGroupsWithToolName.js.map","import { triggerEvent, eventTarget, utilities as csUtils, } from '@cornerstonejs/core';\nimport { Events } from '../../enums';\nimport { defaultFrameOfReferenceSpecificAnnotationManager } from './FrameOfReferenceSpecificAnnotationManager';\nimport { triggerAnnotationAddedForElement, triggerAnnotationAddedForFOR, } from './helpers/state';\nlet defaultManager = defaultFrameOfReferenceSpecificAnnotationManager;\nfunction getAnnotationManager() {\n    return defaultManager;\n}\nfunction setAnnotationManager(annotationManager) {\n    defaultManager = annotationManager;\n}\nfunction resetAnnotationManager() {\n    defaultManager = defaultFrameOfReferenceSpecificAnnotationManager;\n}\nfunction getAnnotations(toolName, annotationGroupSelector) {\n    const manager = getAnnotationManager();\n    const groupKey = manager.getGroupKey(annotationGroupSelector);\n    return manager.getAnnotations(groupKey, toolName);\n}\nfunction addAnnotation(annotation, annotationGroupSelector) {\n    if (annotation.annotationUID === undefined) {\n        annotation.annotationUID = csUtils.uuidv4();\n    }\n    const manager = getAnnotationManager();\n    const groupKey = manager.getGroupKey(annotationGroupSelector);\n    manager.addAnnotation(annotation, groupKey);\n    if (annotationGroupSelector instanceof HTMLDivElement) {\n        triggerAnnotationAddedForElement(annotation, annotationGroupSelector);\n    }\n    else {\n        triggerAnnotationAddedForFOR(annotation);\n    }\n    return annotation.annotationUID;\n}\nfunction getNumberOfAnnotations(toolName, annotationGroupSelector) {\n    const manager = getAnnotationManager();\n    const groupKey = manager.getGroupKey(annotationGroupSelector);\n    return manager.getNumberOfAnnotations(groupKey, toolName);\n}\nfunction removeAnnotation(annotationUID) {\n    const manager = getAnnotationManager();\n    const annotation = manager.getAnnotation(annotationUID);\n    if (!annotation) {\n        return;\n    }\n    manager.removeAnnotation(annotationUID);\n    const eventType = Events.ANNOTATION_REMOVED;\n    const eventDetail = {\n        annotation,\n        annotationManagerUID: manager.uid,\n    };\n    triggerEvent(eventTarget, eventType, eventDetail);\n}\nfunction getAnnotation(annotationUID) {\n    const manager = getAnnotationManager();\n    const annotation = manager.getAnnotation(annotationUID);\n    return annotation;\n}\nfunction removeAllAnnotations() {\n    const manager = getAnnotationManager();\n    manager.removeAllAnnotations();\n}\nexport { getAnnotations, getNumberOfAnnotations, addAnnotation, getAnnotation, removeAnnotation, removeAllAnnotations, setAnnotationManager, getAnnotationManager, resetAnnotationManager, };\n//# sourceMappingURL=annotationState.js.map","import { getEnabledElement, triggerEvent, eventTarget, getEnabledElementByIds, } from '@cornerstonejs/core';\nimport { Events } from '../../../enums';\nimport { getToolGroupsWithToolName } from '../../../store/ToolGroupManager';\nfunction triggerAnnotationAddedForElement(annotation, element) {\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine, viewportId } = enabledElement;\n    const eventType = Events.ANNOTATION_ADDED;\n    const eventDetail = {\n        annotation,\n        viewportId,\n        renderingEngineId: renderingEngine.id,\n    };\n    triggerEvent(eventTarget, eventType, eventDetail);\n}\nfunction triggerAnnotationAddedForFOR(annotation) {\n    const { toolName } = annotation.metadata;\n    const toolGroups = getToolGroupsWithToolName(toolName);\n    if (!toolGroups.length) {\n        return;\n    }\n    const viewportsToRender = [];\n    toolGroups.forEach((toolGroup) => {\n        toolGroup.viewportsInfo.forEach((viewportInfo) => {\n            const { renderingEngineId, viewportId } = viewportInfo;\n            const { FrameOfReferenceUID } = getEnabledElementByIds(viewportId, renderingEngineId);\n            if (annotation.metadata.FrameOfReferenceUID === FrameOfReferenceUID) {\n                viewportsToRender.push(viewportInfo);\n            }\n        });\n    });\n    if (!viewportsToRender.length) {\n        return;\n    }\n    const eventType = Events.ANNOTATION_ADDED;\n    viewportsToRender.forEach(({ renderingEngineId, viewportId }) => {\n        const eventDetail = {\n            annotation,\n            viewportId,\n            renderingEngineId,\n        };\n        triggerEvent(eventTarget, eventType, eventDetail);\n    });\n}\nexport { triggerAnnotationAddedForElement, triggerAnnotationAddedForFOR };\n//# sourceMappingURL=state.js.map","import { eventTarget, Enums } from '@cornerstonejs/core';\nimport { getAnnotationManager } from './stateManagement/annotation/annotationState';\nimport { getDefaultSegmentationStateManager } from './stateManagement/segmentation/segmentationState';\nimport { Events as TOOLS_EVENTS } from './enums';\nimport { addEnabledElement, removeEnabledElement } from './store';\nimport { resetCornerstoneToolsState } from './store/state';\nimport { annotationSelectionListener, segmentationDataModifiedEventListener, segmentationRepresentationModifiedEventListener, segmentationRepresentationRemovedEventListener, segmentationModifiedListener, annotationModifiedListener, } from './eventListeners';\nimport * as ToolGroupManager from './store/ToolGroupManager';\nlet csToolsInitialized = false;\nexport function init(defaultConfiguration = {}) {\n    if (csToolsInitialized) {\n        return;\n    }\n    _addCornerstoneEventListeners();\n    _addCornerstoneToolsEventListeners();\n    csToolsInitialized = true;\n}\nexport function destroy() {\n    _removeCornerstoneEventListeners();\n    _removeCornerstoneToolsEventListeners();\n    ToolGroupManager.destroy();\n    resetCornerstoneToolsState();\n    const annotationManager = getAnnotationManager();\n    const segmentationStateManager = getDefaultSegmentationStateManager();\n    annotationManager.restoreAnnotations({});\n    segmentationStateManager.resetState();\n    csToolsInitialized = false;\n}\nfunction _addCornerstoneEventListeners() {\n    _removeCornerstoneEventListeners();\n    const elementEnabledEvent = Enums.Events.ELEMENT_ENABLED;\n    const elementDisabledEvent = Enums.Events.ELEMENT_DISABLED;\n    eventTarget.addEventListener(elementEnabledEvent, addEnabledElement);\n    eventTarget.addEventListener(elementDisabledEvent, removeEnabledElement);\n}\nfunction _removeCornerstoneEventListeners() {\n    const elementEnabledEvent = Enums.Events.ELEMENT_ENABLED;\n    const elementDisabledEvent = Enums.Events.ELEMENT_DISABLED;\n    eventTarget.removeEventListener(elementEnabledEvent, addEnabledElement);\n    eventTarget.removeEventListener(elementDisabledEvent, removeEnabledElement);\n}\nfunction _addCornerstoneToolsEventListeners() {\n    _removeCornerstoneToolsEventListeners();\n    eventTarget.addEventListener(TOOLS_EVENTS.ANNOTATION_MODIFIED, annotationModifiedListener);\n    eventTarget.addEventListener(TOOLS_EVENTS.ANNOTATION_SELECTION_CHANGE, annotationSelectionListener);\n    eventTarget.addEventListener(TOOLS_EVENTS.ANNOTATION_SELECTION_CHANGE, annotationSelectionListener);\n    eventTarget.addEventListener(TOOLS_EVENTS.SEGMENTATION_MODIFIED, segmentationModifiedListener);\n    eventTarget.addEventListener(TOOLS_EVENTS.SEGMENTATION_DATA_MODIFIED, segmentationDataModifiedEventListener);\n    eventTarget.addEventListener(TOOLS_EVENTS.SEGMENTATION_REPRESENTATION_MODIFIED, segmentationRepresentationModifiedEventListener);\n    eventTarget.addEventListener(TOOLS_EVENTS.SEGMENTATION_REPRESENTATION_REMOVED, segmentationRepresentationRemovedEventListener);\n}\nfunction _removeCornerstoneToolsEventListeners() {\n    eventTarget.removeEventListener(TOOLS_EVENTS.ANNOTATION_MODIFIED, annotationModifiedListener);\n    eventTarget.removeEventListener(TOOLS_EVENTS.ANNOTATION_SELECTION_CHANGE, annotationSelectionListener);\n    eventTarget.removeEventListener(TOOLS_EVENTS.ANNOTATION_SELECTION_CHANGE, annotationSelectionListener);\n    eventTarget.removeEventListener(TOOLS_EVENTS.SEGMENTATION_MODIFIED, segmentationModifiedListener);\n    eventTarget.removeEventListener(TOOLS_EVENTS.SEGMENTATION_DATA_MODIFIED, segmentationDataModifiedEventListener);\n    eventTarget.removeEventListener(TOOLS_EVENTS.SEGMENTATION_REPRESENTATION_MODIFIED, segmentationRepresentationModifiedEventListener);\n    eventTarget.removeEventListener(TOOLS_EVENTS.SEGMENTATION_REPRESENTATION_REMOVED, segmentationRepresentationRemovedEventListener);\n}\nexport default init;\n//# sourceMappingURL=init.js.map","import { getRenderingEngine } from '@cornerstonejs/core';\nexport default function cameraSyncCallback(synchronizerInstance, sourceViewport, targetViewport, cameraModifiedEvent) {\n    const { camera } = cameraModifiedEvent.detail;\n    const renderingEngine = getRenderingEngine(targetViewport.renderingEngineId);\n    if (!renderingEngine) {\n        throw new Error(`No RenderingEngine for Id: ${targetViewport.renderingEngineId}`);\n    }\n    const tViewport = renderingEngine.getViewport(targetViewport.viewportId);\n    tViewport.setCamera(camera);\n    tViewport.render();\n}\n//# sourceMappingURL=cameraSyncCallback.js.map","import { createSynchronizer } from '../../store/SynchronizerManager';\nimport { Enums } from '@cornerstonejs/core';\nimport cameraSyncCallback from '../callbacks/cameraSyncCallback';\nconst { CAMERA_MODIFIED } = Enums.Events;\nexport default function createCameraPositionSynchronizer(synchronizerName) {\n    const cameraPositionSynchronizer = createSynchronizer(synchronizerName, CAMERA_MODIFIED, cameraSyncCallback);\n    return cameraPositionSynchronizer;\n}\n//# sourceMappingURL=createCameraPositionSynchronizer.js.map","import { getRenderingEngine, StackViewport, VolumeViewport, } from '@cornerstonejs/core';\nexport default function voiSyncCallback(synchronizerInstance, sourceViewport, targetViewport, voiModifiedEvent) {\n    const eventDetail = voiModifiedEvent.detail;\n    const { volumeId, range } = eventDetail;\n    const renderingEngine = getRenderingEngine(targetViewport.renderingEngineId);\n    if (!renderingEngine) {\n        throw new Error(`Rendering Engine does not exist: ${targetViewport.renderingEngineId}`);\n    }\n    const tViewport = renderingEngine.getViewport(targetViewport.viewportId);\n    if (tViewport instanceof VolumeViewport) {\n        tViewport.setProperties({\n            voiRange: range,\n        }, volumeId);\n    }\n    else if (tViewport instanceof StackViewport) {\n        tViewport.setProperties({\n            voiRange: range,\n        });\n    }\n    else {\n        throw new Error('Viewport type not supported.');\n    }\n    tViewport.render();\n}\n//# sourceMappingURL=voiSyncCallback.js.map","import { createSynchronizer } from '../../store/SynchronizerManager';\nimport { Enums } from '@cornerstonejs/core';\nimport voiSyncCallback from '../callbacks/voiSyncCallback';\nexport default function createVOISynchronizer(synchronizerName) {\n    const VOISynchronizer = createSynchronizer(synchronizerName, Enums.Events.VOI_MODIFIED, voiSyncCallback);\n    return VOISynchronizer;\n}\n//# sourceMappingURL=createVOISynchronizer.js.map","import { getRenderingEngine } from '@cornerstonejs/core';\nexport default function zoomPanSyncCallback(synchronizerInstance, sourceViewport, targetViewport) {\n    const renderingEngine = getRenderingEngine(targetViewport.renderingEngineId);\n    if (!renderingEngine) {\n        throw new Error(`No RenderingEngine for Id: ${targetViewport.renderingEngineId}`);\n    }\n    const options = synchronizerInstance.getOptions(targetViewport.viewportId);\n    const tViewport = renderingEngine.getViewport(targetViewport.viewportId);\n    const sViewport = renderingEngine.getViewport(sourceViewport.viewportId);\n    if (options?.syncZoom !== false) {\n        const srcZoom = sViewport.getZoom();\n        tViewport.setZoom(srcZoom);\n    }\n    if (options?.syncPan !== false) {\n        const srcPan = sViewport.getPan();\n        tViewport.setPan(srcPan);\n    }\n    tViewport.render();\n}\n//# sourceMappingURL=zoomPanSyncCallback.js.map","import { createSynchronizer } from '../../store/SynchronizerManager';\nimport { Enums } from '@cornerstonejs/core';\nimport zoomPanSyncCallback from '../callbacks/zoomPanSyncCallback';\nconst { CAMERA_MODIFIED } = Enums.Events;\nexport default function createZoomPanSynchronizer(synchronizerName) {\n    const zoomPanSynchronizer = createSynchronizer(synchronizerName, CAMERA_MODIFIED, zoomPanSyncCallback);\n    return zoomPanSynchronizer;\n}\n//# sourceMappingURL=createZoomPanSynchronizer.js.map","import { vec3 } from 'gl-matrix';\nimport { getRenderingEngine, metaData, utilities, } from '@cornerstonejs/core';\nimport { jumpToSlice } from '../../utilities';\nimport areViewportsCoplanar from './areViewportsCoplanar ';\nexport default async function stackImageSyncCallback(synchronizerInstance, sourceViewport, targetViewport) {\n    const renderingEngine = getRenderingEngine(targetViewport.renderingEngineId);\n    if (!renderingEngine) {\n        throw new Error(`No RenderingEngine for Id: ${targetViewport.renderingEngineId}`);\n    }\n    const sViewport = renderingEngine.getViewport(sourceViewport.viewportId);\n    const tViewport = renderingEngine.getViewport(targetViewport.viewportId);\n    const frameOfReferenceUID1 = sViewport.getFrameOfReferenceUID();\n    const frameOfReferenceUID2 = tViewport.getFrameOfReferenceUID();\n    const imageId1 = sViewport.getCurrentImageId();\n    const imagePlaneModule1 = metaData.get('imagePlaneModule', imageId1);\n    const sourceImagePositionPatient = imagePlaneModule1.imagePositionPatient;\n    const targetImageIds = tViewport.getImageIds();\n    if (!areViewportsCoplanar(sViewport, tViewport)) {\n        return;\n    }\n    if (frameOfReferenceUID1 === frameOfReferenceUID2) {\n        const closestImageIdIndex = _getClosestImageIdIndex(sourceImagePositionPatient, targetImageIds);\n        if (closestImageIdIndex.index !== -1 &&\n            tViewport.getCurrentImageIdIndex() !== closestImageIdIndex.index) {\n            await jumpToSlice(tViewport.element, {\n                imageIndex: closestImageIdIndex.index,\n            });\n            return;\n        }\n    }\n    else {\n        const registrationMatrixMat4 = utilities.spatialRegistrationMetadataProvider.get('spatialRegistrationModule', [targetViewport.viewportId, sourceViewport.viewportId]);\n        if (!registrationMatrixMat4) {\n            throw new Error(`No registration matrix found for sourceViewport: ${sourceViewport.viewportId} and targetViewport: ${targetViewport.viewportId}, viewports with different frameOfReferenceUIDs must have a registration matrix in the registrationMetadataProvider. Use calculateViewportsRegistrationMatrix to calculate the matrix.`);\n        }\n        const targetImagePositionPatientWithRegistrationMatrix = vec3.transformMat4(vec3.create(), sourceImagePositionPatient, registrationMatrixMat4);\n        const closestImageIdIndex2 = _getClosestImageIdIndex(targetImagePositionPatientWithRegistrationMatrix, targetImageIds);\n        if (closestImageIdIndex2.index !== -1 &&\n            tViewport.getCurrentImageIdIndex() !== closestImageIdIndex2.index) {\n            await jumpToSlice(tViewport.element, {\n                imageIndex: closestImageIdIndex2.index,\n            });\n        }\n    }\n}\nfunction _getClosestImageIdIndex(targetPoint, imageIds) {\n    return imageIds.reduce((closestImageIdIndex, imageId, index) => {\n        const { imagePositionPatient } = metaData.get('imagePlaneModule', imageId);\n        const distance = vec3.distance(imagePositionPatient, targetPoint);\n        if (distance < closestImageIdIndex.distance) {\n            return {\n                distance,\n                index,\n            };\n        }\n        return closestImageIdIndex;\n    }, {\n        distance: Infinity,\n        index: -1,\n    });\n}\n//# sourceMappingURL=stackImageSyncCallback.js.map","import { vec3 } from 'gl-matrix';\nexport default function areViewportsCoplanar(viewport1, viewport2) {\n    const { viewPlaneNormal: viewPlaneNormal1 } = viewport1.getCamera();\n    const { viewPlaneNormal: viewPlaneNormal2 } = viewport2.getCamera();\n    const dotProducts = vec3.dot(viewPlaneNormal1, viewPlaneNormal2);\n    return Math.abs(dotProducts) > 0.9;\n}\n//# sourceMappingURL=areViewportsCoplanar%20.js.map","import { createSynchronizer } from '../../store/SynchronizerManager';\nimport { Enums } from '@cornerstonejs/core';\nimport stackImageSyncCallback from '../callbacks/stackImageSyncCallback';\nconst { STACK_NEW_IMAGE } = Enums.Events;\nexport default function createStackImageSynchronizer(synchronizerName) {\n    const stackImageSynchronizer = createSynchronizer(synchronizerName, STACK_NEW_IMAGE, stackImageSyncCallback);\n    return stackImageSynchronizer;\n}\n//# sourceMappingURL=createStackImageSynchronizer.js.map","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    splice = arrayProto.splice;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n"],"names":["MouseBindings","KeyboardBindings","ToolModes","AnnotationStyleStates","Events","SegmentationRepresentations","Swipe","globalLockedAnnotationsSet","Set","setAnnotationLocked","annotation","locked","detail","makeEventDetail","lockedAnnotationsSet","has","add","added","push","lock","unlock","publish","unlockAllAnnotations","forEach","clearLockedAnnotationsSet","getAnnotationsLocked","Array","from","isAnnotationLocked","getAnnotationsLockedCount","size","checkAndDefineIsLockedProperty","isLocked","descriptor","Object","getOwnPropertyDescriptor","configurable","set","setIsLocked","get","getIsLocked","isExtensible","shouldDefineIsLockedProperty","defineProperty","enumerable","freeze","removed","delete","length","item","triggerEvent","eventTarget","ANNOTATION_LOCK_CHANGE","this","selectedAnnotationUIDs","setAnnotationSelected","annotationUID","selected","preserveSelected","clearSelectionSet","selectAnnotation","deselectAnnotation","getAnnotationsSelected","getAnnotationsSelectedByToolName","toolName","filter","getAnnotation","metadata","isAnnotationSelected","getAnnotationsSelectedCount","selection","selectionSet","value","ANNOTATION_SELECTION_CHANGE","globalHiddenAnnotationUIDsSet","setAnnotationVisibility","visible","show","annotationUIDsSet","lastHidden","hide","showAllAnnotations","isAnnotationVisible","checkAndDefineIsVisibleProperty","isVisible","setIsVisible","getIsVisible","shouldDefineIsVisibleProperty","lastVisible","hidden","ANNOTATION_VISIBILITY_CHANGE","FrameOfReferenceSpecificAnnotationManager","constructor","uid","getGroupKey","annotationGroupSelector","element","enabledElement","getEnabledElement","Error","FrameOfReferenceUID","_imageVolumeModifiedHandler","evt","eventDetail","frameOfReferenceSpecificAnnotations","annotations","keys","undefined","invalidated","getFramesOfReference","getAnnotations","groupKey","frameOfReferenceUID","frameOfReferenceAnnotations","toolSpecificAnnotations","getNumberOfAnnotations","total","addAnnotation","removeAnnotation","groupAnnotations","toolAnnotations","index","findIndex","splice","removeAnnotations","saveAnnotations","restoreAnnotations","state","getNumberOfAllAnnotations","count","removeAllAnnotations","utilities","addEventListener","Enums","IMAGE_VOLUME_MODIFIED","defaultFrameOfReferenceSpecificAnnotationManager","svgNodeCache","defaultState","isInteractingWithTool","isMultiPartToolActive","tools","toolGroups","synchronizers","enabledElements","handleRadius","resetCornerstoneToolsState","addTool","ToolClass","toolAlreadyAdded","name","toolClass","removeTool","getMouseEventPoints","elementToUse","currentTarget","viewport","clientPoint","clientX","clientY","_clientToPoint","pagePoint","pageX","pageY","_pageToPoint","canvasPoint","rect","getBoundingClientRect","left","window","pageXOffset","top","pageYOffset","_pagePointsToCanvasPoints","page","client","canvas","world","canvasToWorld","viewportId","renderingEngineId","startPoints","event","eventName","MOUSE_DOUBLE_CLICK","camera","lastPoints","currentPoints","deltaPoints","stopImmediatePropagation","preventDefault","MOUSE_MOVE","MOUSE_DOWN","MOUSE_DOWN_ACTIVATE","MOUSE_CLICK","MOUSE_UP","MOUSE_DRAG","DOUBLE_CLICK_DRAG_TOLERANCE","mouseButton","isClickEvent","clickDelay","preventClickTimeout","doubleClickState","doubleClickTimeout","mouseDownEvent","mouseUpEvent","ignoreDoubleClick","_onMouseDrag","_updateMouseEventsLastPoints","_getDeltaPoints","_isDragPastDoubleClickTolerance","_doStateMouseDownAndUp","_copyPoints","_onMouseUp","clearTimeout","_cleanUp","_onMouseMove","document","removeEventListener","delta","Math","abs","_preventClickHandler","_clearDoubleClickTimeoutAndEvents","_doMouseDown","JSON","parse","stringify","points","_subtractPoints2D","point0","point1","mouseDoubleClickIgnoreListener","buttons","setTimeout","disable","capture","enable","pointerType","mouse","touch","lastInteractionType","lastInteractionTime","handleTap","type","e","now","Date","stopPropagation","handleTapMouse","bind","handleTapTouch","attachEvents","eventList","interactionType","tapHandler","passive","removeEvents","mouseEvents","touchEvents","getTouchEventPoints","touches","changedTouches","map","i","identifier","radiusX","radiusY","force","rotationAngle","getDeltaPoints","curr","getMeanPoints","last","getDeltaDistance","_getDistance2D","_getDistance3D","getDeltaRotation","getDeltaDistanceBetweenIPoints","currentDistance","_getMeanDistanceBetweenAllIPoints","lastDistance","copyPointsList","copyPoints","reduce","prev","getMeanTouchPoints","pairedDistance","j","sqrt","pow","runtimeSettings","Settings","getRuntimeSettings","TOUCH_START","TOUCH_START_ACTIVATE","TOUCH_PRESS","TOUCH_DRAG","TOUCH_END","TOUCH_TAP","TOUCH_SWIPE","zeroIPoint","zeroIDistance","startPointsList","lastPointsList","isTouchStart","startTime","pressTimeout","pressDelay","pressMaxDistance","accumulatedDistance","swipeDistanceThreshold","swiped","swipeToleranceMs","defaultTapState","taps","tapTimeout","tapMaxDistance","tapToleranceMs","tapState","triggerEventCallback","ele","console","debug","_onTouchDrag","currentPointsList","_updateTouchEventsLastPoints","deltaDistance","totalDistance","currentTime","getTime","x","y","swipe","RIGHT","LEFT","DOWN","UP","_checkTouchSwipe","_onTouchEnd","distanceFromStart","_checkTouchTap","lp","_onTouchPress","_onTouchStart","preventGhostClick","PIXEL_STEP","LINE_HEIGHT","PAGE_HEIGHT","deltaY","spinX","spinY","pixelX","pixelY","wheelDelta","wheelDeltaY","wheelDeltaX","deltaX","deltaMode","normalizeWheel","direction","MOUSE_WHEEL","wheel","key","keyCode","keyListener","KEY_DOWN","_onKeyUp","KEY_UP","keyDownListener","getModifierKey","defaultContourConfig","renderOutline","outlineWidthActive","outlineWidthInactive","outlineOpacity","outlineOpacityInactive","renderFill","fillAlpha","fillAlphaInactive","defaultLabelmapConfig","renderFillInactive","initialDefaultState","colorLUT","segmentations","globalConfig","renderInactiveSegmentations","representations","Labelmap","Contour","defaultSegmentationStateManager","getState","getToolGroups","getColorLUT","lutIndex","resetState","getSegmentation","segmentationId","find","segmentation","addSegmentation","_initDefaultColorLUTIfNecessary","getSegmentationRepresentations","toolGroupId","toolGroupSegRepresentationsWithConfig","segmentationRepresentations","addSegmentationRepresentation","segmentationRepresentation","config","_handleActiveSegmentation","getGlobalConfig","setGlobalConfig","getSegmentationRepresentationByUID","segmentationRepresentationUID","representation","removeSegmentation","removeSegmentationRepresentation","toolGroupSegmentationRepresentations","segData","warn","removedSegmentationRepresentation","setActiveSegmentationRepresentation","toolGroupSegmentations","segmentationData","active","getToolGroupSpecificConfig","toolGroupStateWithConfig","getSegmentationRepresentationSpecificConfig","segmentationRepresentationSpecificConfig","setSegmentationRepresentationSpecificConfig","getSegmentSpecificConfig","segmentIndex","segmentSpecificConfig","setSegmentSpecificConfig","setSegmentationRepresentationConfig","addColorLUT","log","removeColorLUT","colorLUTIndex","recentlyAddedOrRemovedSegmentationRepresentation","triggerSegmentationRemoved","SEGMENTATION_REMOVED","triggerSegmentationRepresentationRemoved","SEGMENTATION_REPRESENTATION_REMOVED","triggerSegmentationRepresentationModified","SEGMENTATION_REPRESENTATION_MODIFIED","triggerSegmentationModified","segmentationIds","getSegmentations","SEGMENTATION_MODIFIED","triggerSegmentationDataModified","modifiedSlicesToUse","SEGMENTATION_DATA_MODIFIED","segmentationInput","cachedStats","segmentLabels","label","segmentsLocked","activeSegmentIndex","representationData","data","getDefaultSegmentationStateManager","suppressEvents","segmentationStateManager","getToolGroupIdsWithSegmentation","toolGroupIds","foundToolGroupIds","setToolGroupSpecificConfig","getSegmentSpecificRepresentationConfig","setSegmentSpecificRepresentationConfig","segmentationConfig","getGlobalRepresentationConfig","representationType","setGlobalRepresentationConfig","segmentationRepresentationConfig","async","volumeId","renderingEngine","id","volumeInputs","actorUID","visibility","blendMode","MAXIMUM_INTENSITY_BLEND","addVolumesToViewports","removeFromCache","removeVolumeActors","MAX_NUMBER_COLORS","labelMapConfigCache","Map","_getLabelmapConfig","toolGroupLabelmapConfig","segmentationRepresentationLabelmapConfig","isActiveLabelmap","segmentsLabelmapConfig","configToUse","outlineWidth","_needsTransferFunctionUpdate","segmentColor","segmentsHidden","cacheUID","oldConfig","forceOpacityUpdate","forceColorUpdate","oldFillAlpha","oldRenderFill","oldRenderOutline","oldOutlineWidth","oldSegmentColor","oldSegmentsHidden","slice","render","toolGroupConfig","renderingConfig","labelmapData","labelmapUID","cache","getVolume","referencedVolumeId","defaultActor","getDefaultActor","defaultActorUID","volume","referencedVolume","isSameFrameOfReference","actorEntry","getActor","_addLabelmapToViewport","cfun","ofun","numColors","min","volumeActor","actor","segmentSpecificLabelmapConfig","addRGBPoint","segmentOpacity","removePoint","addPointLong","getProperty","setRGBTransferFunction","setClamping","setScalarOpacity","setInterpolationTypeToNearest","setUseLabelOutline","setLabelOutlineOpacity","setLabelOutlineThickness","setVisibility","_setLabelmapColorAndOpacity","representationInput","toolGroupSpecificConfig","addPoint","toolGroupSpecificRepresentation","currentToolGroupConfig","mergedConfig","renderImmediate","toolGroup","viewportsInfo","viewportInfo","getEnabledElementByIds","_removeLabelmapFromToolGroupViewports","getViewportsInfo","vtkErrorMacro","appendCellData","dest","src","ptOffset","cellOffset","offset","currentIdx","DEFAULT_VALUES","outputPointsPrecision","DEFAULT","extend","publicAPI","model","initialValues","arguments","assign","classHierarchy","requestData","inData","outData","numberOfInputs","getNumberOfInputPorts","output","numPts","pointType","ttype","firstType","numVerts","numLines","numStrips","numPolys","hasPtNormals","hasPtTCoords","hasPtScalars","ds","dsNumPts","getPoints","getNumberOfPoints","getVerts","getNumberOfValues","getLines","getStrips","getPolys","getDataType","ptD","getPointData","getNormals","getTCoords","getScalars","SINGLE","FLOAT","DOUBLE","dataType","setNumberOfPoints","pointData","getData","vertData","Uint32Array","lineData","stripData","polyData","newPtNormals","newPtTCoords","newPtScalars","lds","dsNormals","numberOfComponents","numberOfTuples","getName","dsTCoords","dsScalars","getNumberOfComponents","_i","_ds","dsPD","ptNorms","ptTCoords","ptScalars","setPoints","setData","setNormals","setTCoords","setScalars","vtkAppendPolyData","vtkAppendPolyData$1","newInstance","contourRepresentation","segmentId","CONTOUR","configCachePerSegmentationRepresentationUID","getConfigCache","setConfigCache","addContourSetsToElement","geometryIds","contourRepresentationConfig","contourActorUID","appendPolyData","scalarToColorMap","segmentSpecificMap","geometryId","geometry","getGeometry","getSegmentIndex","validateGeometry","contourSet","pointArray","lines","pointIndex","getContours","contour","pointList","flatPoints","getFlatPointsArray","getType","pointIndexes","_","pointListIndex","CLOSED_PLANAR","linePoints","Float32Array","insertNextCell","polygon","setLines","getPolyData","color","getColor","scalars","setTuple","setInputData","addInputData","polyDataOutput","getOutputData","mapper","setMapper","setLineWidth","setForceOpaque","addActor","resetCamera","updateContourSets","newContourConfig","cachedConfig","contourSetsActor","newOutlineWithActive","getMapper","lut","getLookupTable","segmentsToSetToInvisible","segmentsToSetToVisible","mergedInvisibleSegments","includes","concat","contourSets","segmentSpecificConfigs","acc","affectedSegments","hasCustomSegmentSpecificConfig","values","some","polyDataModified","getInputData","appendScalarsData","getTotalNumberOfPoints","segmentConfig","modified","setLookupTable","actorUIDsToRemove","getActors","Boolean","removeActors","representationConfig","contourData","addOrUpdateContourSets","_removeContourFromToolGroupViewports","deleteConfigCache","segmentationRepresentationUIDs","immediate","toolGroupSegRepresentations","toolGroupSegRepresentationUIDs","segRepresentationUIDsToRemove","invalidSegRepresentationUIDs","segRepresentationUID","segmentationDataUID","labelmapDisplay","contourDisplay","_removeSegmentation","segmentationInputArray","segInput","representationInputArray","toolGroupSpecificRepresentationConfig","promises","_addSegmentationRepresentation","Promise","all","getActiveSegmentationRepresentation","isSegmentIndexLocked","setSegmentIndexLocked","getLockedSegments","unshift","setColorLUT","segRepresentation","getColorForSegmentIndex","setColorForSegmentIndex","colorReference","setSegmentationVisibility","indices","scalarData","getScalarData","keySet","it","parseInt","getSegmentationIndices","clear","getSegmentationVisibility","setSegmentsVisibility","segmentIndices","setSegmentVisibility","setActiveSegmentIndex","getActiveSegmentIndex","BaseTool","toolProps","defaultToolProps","initialProps","configuration","supportedInteractionTypes","strategies","defaultStrategy","activeStrategy","strategyOptions","mode","Disabled","getToolName","applyActiveStrategy","operationData","call","setConfiguration","newConfiguration","setActiveStrategy","strategyName","getTargetVolumeId","actorEntries","getClassName","getTargetIdImage","targetId","startsWith","imageId","split","imageURI","viewports","getCurrentImageId","getImageData","getTargetId","StackViewport","BaseVolumeViewport","VIEWPORT_ELEMENT","getSvgNode","canvasHash","cacheKey","domRef","appendNode","svgLayerElement","svgNode","touched","appendChild","setNodeTouched","clearUntouched","cacheEntry","removeChild","viewportElement","internalDivElement","querySelector","_getSvgLayer","svgNodeCacheForCanvas","fn","svgDrawingHelper","drawingElementType","nodeUID","attributes","currentValue","getAttribute","newValue","removeAttribute","setAttribute","circleUID","center","radius","options","dataId","fill","width","lineWidth","lineDash","strokeWidth","svgNodeHash","existingCircleElement","cx","cy","r","stroke","newCircleElement","createElementNS","ellipseUID","corner1","corner2","existingEllipse","w","h","rx","ry","svgEllipseElement","handleGroupUID","handlePoints","opacity","handle","svgns","side","parseFloat","height","existingHandleElement","newHandleElement","drawLine","lineUID","start","end","isNaN","shadow","existingLine","dropShadowStyle","x1","y1","x2","y2","style","newLine","drawPolyline","polylineUID","connectLastToFirst","existingPolyLine","pointsAttribute","point","firstPoint","newPolyLine","_createTextSpan","text","textSpanElement","textContent","_drawTextBackground","group","getBBox","insertBefore","firstChild","bBox","textUID","textLines","position","padding","fontFamily","fontSize","background","textGroupBoundingBox","existingTextGroup","textElement","textSpans","children","textSpan","textGroupAttributes","transform","textGroup","noSelectStyle","combinedStyle","_createTextElement","_drawTextGroup","centerX","centerY","findClosestPoint","sourcePoints","targetPoint","minPoint","minDistance","Number","MAX_SAFE_INTEGER","sourcePoint","distance","p1","p2","_distanceBetween","linkUID","annotationAnchorPoints","refPoint","boundingBox","boundingBoxPoints","halfWidth","halfHeight","_boundingBoxPoints","textBoxUID","textBoxPosition","textBox","mergedOptions","centering","canvasBoundingBox","drawRect","rectangleUID","_width","existingRect","tlhc","svgRectElement","drawArrow","arrowUID","angle","atan2","firstLine","cos","PI","sin","secondLine","modesFilter","enabledTools","toolGroupToolNames","toolOptions","toolInstance","getToolInstance","Active","Passive","Enabled","annotationRenderingEngine","_needsRender","_animationFrameSet","_animationFrameHandle","_renderFlaggedViewports","_throwIfDestroyed","elements","_viewportElements","_triggerRender","addViewportElement","removeViewportElement","_reset","renderViewport","_setViewportsToBeRenderedNextFrame","hasBeenDestroyed","_setAllViewportsToBeRenderedNextFrame","elementsEnabled","indexOf","_render","requestAnimationFrame","getRenderingEngine","anyRendered","tool","renderAnnotation","rendered","ANNOTATION_RENDERED","cancelAnimationFrame","EPSILON","CONSTANTS","PARALLEL_THRESHOLD","filterAnnotationsWithinSlice","spacingInNormalDirection","viewPlaneNormal","annotationsWithParallelNormals","td","annotationViewPlaneNormal","referencedImageId","imageOrientationPatient","metaData","rowCosineVec","colCosineVec","isParallel","halfSpacingInNormalDirection","focalPoint","annotationsWithinSlice","handles","dir","dot","filterAnnotationsForDisplay","colonIndex","substring","VolumeViewport","getCamera","_initializeConfig","colorHighlighted","colorSelected","colorLocked","textBoxFontFamily","textBoxFontSize","textBoxColor","textBoxColorHighlighted","textBoxColorSelected","textBoxColorLocked","textBoxBackground","textBoxLinkLineWidth","textBoxLinkLineDash","textBoxShadow","getAnnotationToolStyles","getViewportToolStyles","getToolGroupToolStyles","getDefaultToolStyles","default","setAnnotationStyles","styles","annotationSpecificStyles","setViewportToolStyles","viewportSpecificStyles","setToolGroupToolStyles","toolGroupSpecificStyles","setDefaultToolStyles","getStyleProperty","toolStyle","specifications","_getToolStyle","property","global","globalStyles","toolStyles","styleSpecifier","alternatives","list","getHierarchalPropertyStyles","highlighted","Highlighted","Selected","Locked","Default","AnnotationDisplayTool","super","onImageSpacingCalibrated","rowScale","columnScale","imageData","calibratedImageData","worldToIndex","nonCalibratedWorldToIndex","calibratedIndexToWorld","getIndexToWorld","stateManager","getAnnotationManager","frameOfReference","p","pCalibrated","nonCalibratedIndexVec4","calibratedIndex","filterInteractableAnnotationsForElement","getReferencedImageId","worldPos","viewUp","imageVolume","getStyle","AnnotationTool","mouseMoveCallback","filteredAnnotations","canvasCoords","annotationsNeedToBeRedrawn","activateHandleIndex","activeHandleIndex","near","_imagePointNearToolOrHandle","nearToolAndNotMarkedActive","notNearToolAndMarkedActive","getHandleNearImagePoint","proximity","worldBoundingBox","topLeft","worldToCanvas","topRight","bottomLeft","bottomRight","annotationCanvasCoordinate","getLinkedTextBoxStyle","isSuvScaled","scaling","PET","scalingModule","suvbw","isPointNearTool","SegmentationDisplayTool","renderSegmentation","toolGroupViewports","segmentationRenderList","_getMergedRepresentationsConfig","viewportsRenderList","allSettled","then","onSetToolEnabled","onSetToolDisabled","segmentationRenderingEngine","_renderFlaggedToolGroups","removeToolGroup","renderToolGroupSegmentations","_setToolGroupSegmentationToBeRenderedNextFrame","getViewport","segmentationDisplayToolInstance","onSegmentationRender","IMAGE_RENDERED","SEGMENTATION_RENDERED","triggerSegmentationRender","segmentationVolume","vtkOpenGLTexture","slicesToUpdate","isArray","numSlices","getDimensions","setUpdatedFrame","getAnnotationNearPoint","getAnnotationNearPointOnEnabledElement","_toolInstances","found","findAnnotationNearPointByTool","currentId","func","wait","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","useRAF","TypeError","invokeFunc","time","args","thisArg","apply","startTimer","pendingFunc","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","timeSinceLastInvoke","timeWaiting","remainingWait","debounced","isInvoking","leadingEdge","max","cancel","cancelTimer","flush","pending","clip","val","low","high","calibratedPixelSpacingMetadataProvider","calibrateImageSpacing","rowPixelSpacing","columnPixelSpacing","getStackViewports","getImageIds","calibrateSpacing","viewportIdsToRender","viewportType","scroll","debounceLoading","loop","numScrollSteps","currentStepIndex","sliceRangeInfo","sliceRange","newFocalPoint","newPosition","setCamera","desiredStepIndex","VolumeScrollEventDetail","currentImageId","EVENTS","VOLUME_SCROLL_OUT_OF_BOUNDS","scrollVolume","imageIndex","currentImageIndex","numberOfSlices","getTargetImageIdIndex","getCurrentImageIdIndex","_getImageSliceData","imageIndexToJump","lastSliceIndex","_getImageIndexToJump","pointInShapeCallback","pointInShapeFn","callback","boundsIJK","iMin","iMax","jMin","jMax","kMin","kMax","dimensions","getDirection","rowCosines","columnCosines","scanAxisNormal","spacing","getSpacing","rowSpacing","columnSpacing","scanAxisSpacing","worldPosStart","indexToWorld","rowStep","columnStep","scanAxisStep","yMultiple","zMultiple","k","pointIJK","dI","dJ","dK","startWorld","pointLPS","numSlicesToProject","sliceNormalIndex","xMin","Infinity","xMax","yMin","yMax","zMin","zMax","floor","depth","transformWorldToIndex","pointInSurroundingSphereCallback","circlePoints","centerWorld","radiusWorld","bottom","centerIJK","spacings","minSpacing","maxRadiusIJK","ceil","viewRight","topLeftWorld","bottomRightWorld","sphereCornersIJK","_computeBoundsIJKWithCamera","_getBounds","sphereObj","sphere","pointInSphere","fillSphere","_inside","scalarIndex","minSlice","maxSlice","v","fillInsideSphere","eraseInsideSphere","pointInEllipse","ellipse","circleCenterWorld","xRadius","yRadius","zRadius","z","x0","y0","z0","inside","getCanvasEllipseCorners","ellipseCanvasPoints","right","fillCircle","threshold","strategySpecificConfiguration","canvasCoordinates","topLeftCanvas","bottomRightCanvas","ellipsoidCornersIJK","every","ellipseObj","THRESHOLD_INSIDE_CIRCLE","voxelValue","isWithinThreshold","fillInsideCircle","thresholdInsideCircle","eraseInsideCircle","DEFINED_CURSORS","Symbol","STANDARD_CURSORS","MouseCursor","fallback","addFallbackStyleProperty","static","definedCursors","getDefinedCursors","mouseCursor","cursor","context","symbol","standardCursorNames","ImageMouseCursor","url","getUniqueInstanceName","prefix","BASE","iconContent","iconSize","viewBox","mousePoint","mousePointerGroupString","SEGMENTATION_CURSOR_BOUNDARIES","MINUS_RECT","PLUS_RECT","SCISSOR_ICON","RECTANGLE_ICON","CIRCLE_ICON","CursorSVG","Angle","ArrowAnnotate","Bidirectional","CobbAngle","CircleROI","EllipticalROI","FreehandROI","FreehandROISculptor","Length","Probe","RectangleROI","TextMarker","Crosshairs","Eraser","Magnify","Pan","Rotate","StackScroll","WindowLevelRegion","WindowLevel","Zoom","SegmentationFreeHandEraseInside","SegmentationFreeHandFillInside","SegmentationFreeHandEraseOutside","SegmentationFreeHandFillOutside","SegmentationRectangleEraseInside","RectangleScissor","CircleScissor","base","create","registerCursor","svgCursorNames","STATE","MODE","SVGMouseCursor","pointer","urn","getCursorURN","getDefinedCursor","prototype","hasOwnProperty","getDefinedSVGCursorDescriptor","URL","createObjectURL","svgString","createSVGIconWithPointer","createSVGIcon","Blob","createSVGIconBlob","createSVGIconUrl","createSVGMouseCursor","setDefinedCursor","format","template","dictionary","dict","defined","replace","match","svgSize","cursorName","CursorNames","ELEMENT_CURSORS_MAP","initElementCursor","_getElementCursors","_setElementCursor","cursors","resetElementCursor","hideElementCursor","WeakMap","BrushTool","FILL_INSIDE_CIRCLE","ERASE_INSIDE_CIRCLE","FILL_INSIDE_SPHERE","ERASE_INSIDE_SPHERE","brushSize","onSetToolPassive","disableCursor","preMouseDownCallback","eventData","activeSegmentationRepresentation","firstVolumeActorUID","_editData","_activateDraw","updateCursor","_dragCallback","brushCursor","_hoverData","_endCallback","_deactivateDraw","centerCanvas","getFrameOfReferenceUID","_calculateCursor","bottomCanvas","topCanvas","leftCanvas","rightCanvas","invalidateBrushCursor","toolMetadata","brushCursorUID","getBrushToolInstances","toolInstances","equalsCheck","a","b","getVoxelOverlap","voxelSpacing","voxelCenter","voxelCornersWorld","voxelCornersIJK","processVolumes","thresholdVolumeInformation","segmentationSpacing","segmentationImageData","volumeInfoList","baseVolumeIdx","volumeSize","referenceValues","lower","upper","overwrite","overlapType","overlaps","range","testOverlapRange","volumeInfo","overlapBounds","overlapTest","testRange","computeOffsetIndex","insert","PanTool","touchDragCallback","mouseDragCallback","deltaPointsWorld","updatedPosition","updatedFocalPoint","TrackballRotateTool","rotateIncrementDegrees","rotateCamera","axis","vtkCamera","getVtkActiveCamera","getViewUp","getFocalPoint","getPosition","newViewUp","currentPointsCanvas","lastPointsCanvas","clientWidth","clientHeight","normalizedPosition","normalizedPreviousPosition","radsq","op","oe","opsq","oesq","lop","loe","nop","noe","angleX","acos","sign","upVec","atV","rightV","forwardV","angleY","WindowLevelTool","_getImageDynamicRangeFromMiddleSlice","middleSliceIndex","frameLength","bytesPerVoxel","TypedArrayConstructor","Uint8Array","Uint16Array","Int16Array","frame","buffer","_getMinMax","modality","newRange","viewportsContainingVolumeUID","isPreScaled","properties","getProperties","voiRange","Modality","preScale","scaled","scalingParameters","getPTScaledNewRange","deltaPointsCanvas","getNewRange","setProperties","vp","multiplier","_getMultiplierFromDynamicRange","wwDelta","wcDelta","windowWidth","windowCenter","imageDynamicRange","calculatedDynamicRange","BitsStored","metadataDynamicRange","_getImageDynamicRangeFromViewport","ratio","round","getRange","voxel","StackScrollTool","invert","debounceIfNotLoaded","deltaPointY","pixelsPerImage","_getPixelPerImage","imageIdIndexOffset","_getNumberOfSlices","offsetHeight","angleBetweenLines","line1","line2","p3","p4","v1","v2","PlanarRotateTool","currentPointWorld","startPointWorld","cross","rotAngle","rotMat","rotatedViewUp","rotation","StackScrollMouseWheelTool","mouseWheelCallback","ZoomTool","zoomToCenter","minZoomScale","maxZoomScale","pinchToZoom","pan","initialMousePosWorld","dirVec","preTouchStartCallback","_dragParallelProjection","pinch","parallelScale","parallelScaleToSet","focalPointToSet","positionToSet","distanceToCanvasCenter","t","scale","cappedParallelScale","thresholdExceeded","_dragPerspectiveProjection","zoomScale","directionOfProjection","tmp","_pinchCallback","parallelProjection","_panCallback","DIRECTIONS","VolumeRotateMouseWheelTool","cz","ax","ay","az","getWorldWidthAndHeightFromCorners","pos1","pos2","diagonal","diagonalLength","worldWidth","worldHeight","cosTheta","getPointInLineOfSightWithCriteria","targetVolumeId","criteriaFunction","stepSize","cameraPosition","step","bounds","getBounds","vector","pickedPoint","pointT","_inBounds","pointToPick","getIntensityFromWorld","jumpToWorld","jumpWorld","normal","dotProd","projectedDelta","_applyShift","MIPJumpToClickTool","targetViewportIds","mouseClickCallback","maxIntensity","brightestPoint","intensity","getViewports","foundToolGroup","filterViewportsWithFrameOfReferenceUID","numViewports","viewportsWithFrameOfReferenceUID","filterViewportsWithToolEnabled","viewportsWithToolEnabled","_toolGroupHasActiveEnabledOrPassiveTool","toolMode","EPS","vpCamera","getViewportIdsWithToolToRender","requireParallelNormals","INSIDE","OUTSIDE","clipT","num","denom","c","tE","tL","box","da","db","dx","dy","dist2","distanceToPointSquared","lineStart","lineEnd","d2","NaN","intersectLine","line1Start","line1End","line2Start","line2End","x3","y3","x4","y4","a1","b1","c1","r3","r4","a2","b2","c2","r1","r2","RENDERING_DEFAULTS","defaultReferenceLineColor","defaultReferenceLineControllable","defaultReferenceLineDraggableRotatable","defaultReferenceLineSlabThicknessControlsOn","OPERATION","CrosshairsTool","viewportIndicators","autoPan","enabled","panSize","referenceLinesCenterGapRadius","filterActorUIDsToSetSlabThickness","slabThicknessBlendMode","mobile","toolCenter","initializeViewport","_getAnnotations","cameraFocalPoint","rotationPoints","slabThicknessPoints","activeOperation","activeViewportIds","_getViewportsInfo","computeToolCenter","firstViewport","secondViewport","thirdViewport","normal1","normal2","point2","normal3","point3","firstPlane","secondPlane","thirdPlane","addNewAnnotation","_jump","viewportIdArray","otherViewport","viewportControllable","_getReferenceLineControllable","viewportDraggableRotatable","_getReferenceLineDraggableRotatable","_activateModify","handleSelectedCallback","_pointNearTool","toolSelectedCallback","onCameraModified","viewportAnnotation","currentCamera","oldCameraPosition","deltaCameraPosition","oldCameraFocalPoint","deltaCameraFocalPoint","isRotation","cameraModifiedInPlane","getViewportIds","_autoPanViewportIfNecessary","filteredToolAnnotations","imageNeedsUpdate","previousActiveOperation","previousActiveViewportIds","_areViewportIdArraysEqual","renderStatus","canvasDiagonalLength","canvasMinDimensionLength","crosshairCenterCanvas","otherViewportAnnotations","_filterAnnotationsByUniqueViewportOrientations","referenceLines","canvasBox","otherCamera","otherViewportControllable","otherViewportDraggableRotatable","otherViewportSlabThicknessControlsOn","_getReferenceLineSlabThicknessControlsOn","otherCanvasDiagonalLength","otherCanvasCenter","otherViewportCenterWorld","pointWorld0","pointWorld1","pointCanvas0","otherViewportCenterCanvas","canvasUnitVectorFromCenter","canvasVectorFromCenterLong","canvasVectorFromCenterMid","canvasVectorFromCenterShort","canvasVectorFromCenterStart","centerGap","refLinePointOne","refLinePointTwo","refLinePointThree","refLinePointFour","refLinesCenter","rotHandleOne","rotHandleTwo","stHandlesCenterCanvas","stHandlesCenterWorld","worldUnitVectorFromCenter","matrix","buildFromDegree","rotate","worldUnitOrthoVectorFromCenter","slabThicknessValue","getSlabThickness","worldOrthoVectorFromCenter","worldVerticalRefPoint","canvasVerticalRefPoint","canvasOrthoVectorFromCenter","stLinePointOne","stLinePointTwo","stLinePointThree","stLinePointFour","stHandleOne","stHandleTwo","stHandleThree","stHandleFour","newRtpoints","newStpoints","viewportColor","_getReferenceLineColor","line","lineIndex","viewportSlabThicknessControlsOn","selectedViewportId","lineActive","rotHandlesActive","rotationHandles","rotHandleWorldOne","rotHandleWorldTwo","slabThicknessHandlesActive","slabThicknessHandles","slabThicknessHandleWorldOne","slabThicknessHandleWorldTwo","slabThicknessHandleWorldThree","slabThicknessHandleWorldFour","handleUID","_onNewVolume","viewportIdArrayOne","viewportIdArrayTwo","itemFound","_getAnnotationsForViewportsWithDifferentCameras","viewportsWithDifferentCameras","cameraOfTarget","_filterViewportWithSameOrientation","referenceAnnotation","linkedViewportAnnotations","otherViewPlaneNormal","otherLinkedViewportAnnotationsFromSameScene","otherViewportsAnnotationsWithUniqueCameras","cameraFound","jj","cameraOfStocked","otherNonLinkedViewportAnnotationsFromSameScene","_checkIfViewportsRenderingSameScene","actors","otherViewportActors","sameScene","viewportsAnnotationsToUpdate","_applyDeltaShiftToSelectedViewportCameras","_deactivateModify","editData","dir1","dir2","finalPointCanvas","originalPointCanvas","_isClockWise","rotationAxis","buildFromRadian","translate","otherViewportsIds","renderViewports","referenceAnnotations","viewportsIds","mod","currentPoint","currentCenter","otherViewportRotationPoints","dotProdDirection","projectedDirection","normalizedProjectedDirection","normalizedProjectedDelta","MINIMUM_SLAB_THICKNESS","_pointNearReferenceLine","setSlabThickness","lineViewport","lineSegment1","distanceToPoint1","lineSegment2","distanceToPoint2","getReferenceLineColor","getReferenceLineControllable","getReferenceLineDraggableRotatable","getReferenceLineSlabThicknessControlsOn","onSetToolActive","_unsubscribeToViewportNewVolumeSet","_subscribeToViewportNewVolumeSet","_getRotationHandleNearImagePoint","_getSlabThicknessHandleNearImagePoint","VOLUME_VIEWPORT_NEW_VOLUME","toolCenterCanvas","visiblePointCanvas","visiblePointWorld","slabThickness","actorUIDs","blendModeToUse","COMPOSITE","setBlendMode","_applyDeltaShiftToViewportCamera","stPointLineCanvas1","stPointLineCanvas2","stPointLineCanvas1Start","stPointLineCanvas2Start","MAGNIFY_VIEWPORT_ID","MagnifyTool","magnifySize","magnifyWidth","magnifyHeight","_getReferencedImageId","_createMagnificationViewport","canvasPos","magnifyToolElement","magnifyElement","createElement","classList","display","viewportInput","STACK","enableElement","magnifyViewport","setStack","_dragEndCallback","disableElement","ReferenceLines","sourceViewportId","_init","getRenderingEngines","sourceViewport","sourceViewportCanvasCornersInWorld","newAnnotation","targetViewport","sourceViewPlaneNormal","targetViewportPlane","pointSet1","pointSet2","pointSetToUse","topBottomVec","topRightVec","newNormal","isPerpendicular","lineStartWorld","lineEndWorld","vec1","vec2","getTextBoxCoordsCanvas","annotationCanvasPoints","corners","canvasPoints","handlesLeftToRight","sort","_compareX","handlesTopToBottom","_compareY","_determineCorners","BidirectionalTool","preventHandleOutsideImage","canvasPoint1","canvasPoint2","distanceToPoint","movingTextBox","handleIndex","worldPosition","hasMoved","firstLineSegmentLength","longAxis","shortAxisPoint0","shortAxisPoint1","longAxisVector","counterClockWisePerpendicularToLongAxis","currentShortAxisVector","shortAxis","isHandleOutsideImage","eventType","ANNOTATION_COMPLETED","isDrawing","_dragDrawCallback","canvasCoordPoints","shortAxisDistFromCenter","vectorX","vectorY","xMid","yMid","startX","startY","endX","endY","_dragModifyCallback","worldPosDelta","_dragModifyHandle","movingHandleIndex","canvasCoordHandlesCurrent","firstLineSegment","secondLineSegment","proposedPoint","proposedCanvasCoord","fixedHandleCanvasCoord","fixedHandleToProposedCoordVec","fixedHandleToOldCoordVec","proposedFirstLineSegment","_movingLongAxisWouldPutItThroughShortAxis","centerOfRotation","_getSignedAngle","firstPointX","firstPointY","secondPointX","secondPointY","rotatedFirstPoint","rotatedFirstPointY","rotatedSecondPoint","rotatedSecondPointY","newFirstPoint","newSecondPoint","translateHandleIndex","canvasCoordsCurrent","longLineSegment","shortLineSegment","longLineSegmentVec","longLineSegmentVecNormalized","proposedToCurrentVec","movementLength","movementAlongLineSegmentLength","newTranslatedPoint","unit","_throttledCalculateCachedStats","_calculateCachedStats","activeHandleCanvasCoords","dataId1","dataId2","_getTextLines","canvasTextBoxCoords","vectorInSecondLineDirection","extendedSecondLineSegment","toFixed","worldPos1","worldPos2","worldPos3","worldPos4","targetIds","image","hasPixelSpacing","dist1","_calculateLength","index1","index2","index3","index4","_isInsideVolume","ANNOTATION_MODIFIED","vector1","vector2","dz","LengthTool","cachedVolumeStats","getModalityUnit","isViewportPreScaled","ProbeTool","eventDispatchDetail","referencedImageURI","hasImageURI","currentImageURI","textCanvasCoordinates","SUVBw","SUVLbm","SUVBsa","_getValueForModality","suvbwToSuvbsa","suvbwToSuvlbm","DragProbeTool","postMouseDownCallback","postTouchStartCallback","lineSegments","rectToLineSegments","segment","RectangleROITool","_getRectangleImageCoordinates","bottomLeftCanvas","topRightCanvas","bottomLeftWorld","topRightWorld","areaUnit","area","mean","stdDev","worldPos1Index","worldPos2Index","valueMinusMean","getWorldWidthAndHeightFromTwoPoints","EllipticalROITool","centerPointRadius","initialRotation","getRotation","canvasCorners","minorEllipse","majorEllipse","pointInMinorEllipse","_pointInEllipseCanvas","canvasWidth","canvasHeight","originalHandleCanvas","pointsCanvas","currentCanvasPoints","dX","dY","_dragHandle","dYCanvas","canvasBottom","canvasTop","newHalfCanvasWidth","canvasLeft","canvasRight","dXCanvas","newHalfCanvasHeight","centerPoint","_getCanvasEllipseCenter","isEmptyArea","areaLine","location","normalized","getCanvasCircleRadius","circleCanvasPoints","getCanvasCircleCorners","CircleROITool","radiusPoint","canvasCenter","canvasEnd","radiusUnit","perimeter","radiusLine","getIntersectionCoordinatesWithPolyline","q1","closed","polylineIndexes","initialI","intersections","doesIntersect","getAllIntersectionsWithPolyline","intersection","getIntersection","getFirstIntersectionWithPolyline","getClosestIntersectionWithPolyline","q2","distances","intersectionPoints","midpoint","orient","orientation","onSegment","q","orientationValue","denominator","numerator1","numerator2","subPixelResolution","xDir","yDir","volumeSpacing","iVector","jVector","kVector","absViewRightDotI","absViewRightDotJ","absViewRightDotK","xSpacing","absViewUpDotI","absViewUpDotJ","absViewUpDotK","ySpacing","closeContourProximity","newCanvasPoint","commonData","lastWorldPos","newWorldPos","worldPosDiff","xDist","yDist","numPointsToAdd","lastCanvasPoint","canvasDist","canvasDir","distPerPoint","p1p","p1p2","p1p2Mag","projectionVectorMag","p1p2UnitVector","projectionVector","projectionPoint","calculateAreaOfPoints","n","interpolateSegmentPoints","iniIndex","endIndex","knotsRatioPercentage","segmentSize","amountOfKnots","minKnotDistance","interpolationIniIndex","interpolationEndIndex","segmentPointsUnchangedBeg","segmentPointsUnchangedEnd","interpolatedPoints","originalPoints","knotsIndexes","xInterpolator","yInterpolator","zInterpolator","interpolatePoints","minDistributionDistance","closedInterval","intervalIni","intervalEnd","intervalSize","continuosDistributionValue","getContinuousUniformDistributionValues","shouldInterpolate","interpolation","interpolateOnAdd","interpolateOnEdit","followingIndex","circularFindNextIndexBy","listParams","otherListParams","criteria","indexDelimiter","otherIndexDelimiter","otherPoints","pointsLength","otherPointsLength","startIndex","otherStartIndex","findChangedSegment","previousPoints","firstMatchIndex","previousFirstMatchIndex","pointA","pointB","findMatchIndexes","toBeNotEqualCriteria","isEqualByProximity","lowDiffIndex","lowOtherDiffIndex","highIndex","getInterpolatedPoints","pointsOfReference","knotsRatioPercentageOnAdd","knotsRatioPercentageOnEdit","changedIniIndex","changedEndIndex","findOpenUShapedContourVectorToPeak","first","firstToLastUnitVector","normalVector1","normalVector2","centerOfFirstToLast","furthest","dist","addCanvasPointsToArray","activateDraw","drawData","polylineIndex","mouseUpDrawCallback","mouseDragDrawCallback","deactivateDraw","lastWorldPoint","crossingIndex","findCrossingIndexDuringCreate","applyCreateOnCross","numPointsAdded","allowOpenContours","lastPoint","completeDrawOpenContour","completeDrawClosedContour","removeCrossedLinesOnCompleteDraw","haltDrawing","pop","worldPoints","polyline","isOpenContour","triggerAnnotationCompleted","numPoints","endToStart","canvasPointsMinusEnds","lineSegment","indexToRemoveUpTo","isOpenUShapeContour","openUShapeContourVectorToPeak","pointsLessLastOne","shift","activateClosedContourEdit","cancelDrawing","minPoints","shouldHaltDrawing","checkForFirstCrossing","isClosedContour","editCanvasPoints","prevCanvasPoints","crossedLineSegment","startCrossingIndex","removePointsUpUntilFirstCrossing","checkCanvasEditFallbackProximity","firstEditCanvasPoint","distanceIndexPairs","prevCanvasPoint","twoClosestDistanceIndexPairs","lowestIndex","extendedPoint","crossedLineSegmentFromExtendedPoint","pointsToPrepend","editIndex","numPointsToRemove","checkForSecondCrossing","removePointsAfterSecondCrossing","lastLine","didCrossLine","findSnapIndex","lastEditCanvasPoint","editCanvasPointsLessLastOne","snapCanvasPosition","checkAndRemoveCrossesOnEditLine","editIndexCrossed","getSubPixelSpacingAndXYDirections","isEditingClosed","mouseUpClosedContourEditCallback","mouseDragClosedContourEditCallback","deactivateClosedContourEdit","currentEditIndex","snapIndex","fusedCanvasPoints","fuseEditPointsWithClosedContour","finishEditAndStartNewEdit","triggerAnnotationModified","augmentedEditCanvasPoints","lowIndex","distanceBetweenLowAndFirstPoint","distanceBetweenLowAndLastPoint","distanceBetweenHighAndFirstPoint","distanceBetweenHighAndLastPoint","inPlaceDistance","reverseDistance","completeClosedContourEdit","cancelClosedContourEdit","activateOpenContourEdit","isEditingOpen","mouseUpOpenContourEditCallback","mouseDragOpenContourEditCallback","deactivateOpenContourEdit","fuseEditPointsWithOpenContour","finishEditOpenOnSecondCrossing","checkIfShouldOverwriteAnEnd","openContourEditOverwriteEnd","fuseEditPointsForOpenContourEndEdit","activateOpenContourEndEdit","lastCanvasPos","aDotb","magA","magB","newCanvasPoints","pointsToRender","completeOpenContourEdit","cancelOpenContourEdit","reverse","pointsAreWithinCloseContourProximity","_getRenderingOptions","renderContour","findOpenUShapedContourVectorToPeakOnRender","calculateUShapeContourVectorToPeakIfNotPresent","renderOpenUShapedContour","renderOpenContour","renderClosedContour","alwaysRenderOpenContourHandles","handlePoint","firstCanvasPoint","openUShapeContourVectorToPeakCanvas","renderContourBeingDrawn","renderClosedContourBeingEdited","renderOpenContourBeingEdited","pointCanProjectOnLine","PlanarFreehandROITool","calculateStats","previousPoint","pStart","pEnd","activeAnnotationUID","_renderStats","worldPosIndex","iDelta","jDelta","kDelta","worldPosEnd","canvasPosEnd","sum","sumSquares","curRow","intersectionCounter","annotationsToDisplay","ArrowAnnotateTool","getTextCallback","changeTextCallback","arrowFirst","touchTapCallback","doubleClickCallback","clickedAnnotation","_doneChangingTextCallback","updatedText","doneChangingTextCallback","prompt","AngleTool","angleStartedNotYetCompleted","canvasPoint3","String","fromCharCode","midPoint","ret","len","arg","midPoint2","CobbAngleTool","point4","canvasPoint4","_mouseUpCallback","_mouseDownCallback","_mouseDragCallback","seg1","seg2","minDist","MAX_VALUE","ReferenceCursors","displayThreshold","positionSync","_elementWithCursor","_currentCursorWorldPosition","_currentCanvasPosition","_disableCursorEnabled","getActiveAnnotation","createInitialAnnotation","updateAnnotationPosition","previousCamera","oldFocalPoint","cameraNormal","dotProduct","isElementWithCursor","updateViewportImage","lineWidthBase","crosshairUIDs","centerSpace","lineLength","viewportIds","plane","currentMousePosition","closestIndex","setImageIdIndex","normalizedViewPlane","scaledPlaneNormal","viewportsWithAnnotations","ScaleOverlayTool","scaleLocation","viewportCanvasCornersInWorld","thisAnnotation","computeScaleSize","worldWidthViewport","worldHeightViewport","scaleSizes","currentScaleSize","scaleSize","computeEndScaleTicks","locationTickOffset","endTick1","endTick2","computeInnerScaleTicks","leftTick","rightTick","canvasScaleSize","tickIds","tickUIDs","tickCoordinates","numberSmallTicks","tickSpacing","locationOffset","computeWorldScaleCoordinates","pointSet","worldCoordinates","midpointLocation","computeCanvasScaleCoordinates","canvasSize","vscaleBounds","hscaleBounds","scaleCanvasCoordinates","worldDistanceOnCanvas","computeScaleBounds","horizontalReduction","verticalReduction","hReduction","vReduction","locationBounds","canvasBounds","scaleTicks","scaleId","leftTickId","rightTickId","locationTextOffest","textBoxLines","scaleSizeDisplayValue","scaleSizeUnits","toString","fillRectangle","constraintFn","rectangleCornersIJK","coord","fillInsideRectangle","eraseRectangle","eraseInsideRectangle","RectangleScissorsTool","FILL_INSIDE","ERASE_INSIDE","CircleScissorsTool","SphereScissorsTool","RectangleROIThresholdTool","RectangleROIStartEndThresholdTool","numSlicesToPropagate","spacingInNormal","_getEndSliceIndex","startSlice","endSlice","projectionPoints","projectionPointsImageIds","_computeProjectionPoints","sliceIndex","firstOrLastSlice","lineDashToUse","_calculateCachedStatsTool","startIJK","endIJK","indexToWorldVec3","endWorld","newProjectionPoints","newPoint","RectanglePoints","endPos","imageIds","imageIdIndex","imagePositionPatient","defaultEquals","lpad","string","character","join","getter","seed","onFlood","onBoundary","equals","diagonals","startNode","permutations","perms","permutation","permute","perm","array","countNonZeroes","prunedPermutations","stack","flooded","visits","currentArgs","flood","boundaries","job","getArgs","prevArgs","previousArgs","markAsVisited","node","safely","member","markAsFlooded","nextArgs","pushAdjacent","markAsBoundary","f","error","PaintFillTool","fixedDimension","getFixedDimension","floodFillGetter","getLabelValue","getScalarDataPositionFromPlane","inPlaneSeedPoint","fixedDimensionValue","generateHelpers","clickedLabelValue","floodFillResult","scalarDataPosition","getFramesModified","minJ","maxJ","framesModified","seedIndex3D","getScalarDataPosition","generateFloodFillGetter","generateGetScalarDataPositionFromPlane","xDirection","yDirection","zDirection","absoluteOfViewPlaneNormal","absoluteOfXDirection","absoluteOfYDirection","absoluteOfZDirection","referenceVolume","AllBoundsIJK","pointsToUse","accumulator","annotationUIDs","validToolNames","_validateAnnotations","labelmaps","origin","labelmap","outputData","arrayType","volumeLoader","isValidRepresentationConfig","isValidLabelmapConfig","getDefaultRepresentationConfig","createLabelmapVolumeForViewport","input","_cloneDeep","setBrushSizeForToolGroup","viewportsInfoArray","getBrushSizeForToolGroup","brushToolInstance","setBrushThresholdForToolGroup","getBrushThresholdForToolGroup","segmentationIndex","_handleSameSizeVolume","getPoint","callbackOverlap","_handleDifferentSizeVolume","getOrientationStringLPS","orientationX","orientationY","orientationZ","MIN","invertOrientationStringLPS","orientationString","inverted","toUpperCase","addToolState","getToolState","dynamicVolumesPlayingMap","playClip","playClipOptions","playClipTimeouts","playClipIsTimeVarying","dynamicCineEnabled","_getVolumeFromViewport","playClipContext","frameTimeVectorEnabled","_createStackViewportCinePlayContext","isDynamicVolume","numTimePoints","timePointIndex","_createDynamicVolumeViewportCinePlayContext","cachedScrollInfo","scrollInfo","getScrollInfo","volumeViewPlaneNormal","_createVolumeViewportCinePlayContext","_createCinePlayContext","playClipData","isDynamicCinePlaying","_stopDynamicVolumeCine","_stopClip","intervalId","framesPerSecond","lastFrameTimeStamp","ignoreFrameTimeVector","usingFrameTimeVector","frameTimeVector","speed","frameTimeVectorSpeedMultiplier","timeouts","isTimeVarying","sample","delay","limit","_getPlayClipTimeouts","playClipAction","newStepIndex","CLIP_STOPPED","playClipTimeoutHandler","setInterval","CLIP_STARTED","stopClip","stopDynamicCine","cineToolData","clearInterval","_stopClipWithData","dynamicCineElement","volumes","_getVolumesFromViewport","interpolateAnnotation","shouldPreventInterpolation","interpolatedCanvasPoints","requestType","Prefetch","priority","resetPrefetchTimeout","maxImagesToPrefetch","preserveExistingPool","resetPrefetchDelay","lowEnd","highEnd","arr","getStackData","currentImageIdIndex","prefetch","stackPrefetchData","stackPrefetch","indicesToRequest","removeFromList","getImageLoadObject","imageLoadPoolManager","clearRequestStack","nearest","idx","nearestIndex","nextImageIdIndex","lowerIndex","higherIndex","imageIdsToPrefetch","currentIndex","shouldLoadLower","shouldLoadHigher","requestFn","imageLoader","useNorm16Texture","rendering","targetBuffer","addRequest","getPromiseRemovedHandler","stackData","onImageUpdated","target","indexOfCurrentImage","STACK_NEW_IMAGE","promiseRemovedHandler","IMAGE_CACHE_IMAGE_REMOVED","getConfiguration","dynamicVolume","frames","frameNumbers","maskVolumeId","imageCoordinate","dataInTime","indexArray","allScalarData","getScalarDataArrays","indexValues","activeScalarData","_getTimePointDataMask","coordinate","_getTimePointDataCoordinate","operation","numFrames","typedArrays","arrayLength","finalArray","SUM","currentArray","SUBTRACT","AVERAGE","onImageRendered","customCallbackHandler","handlerType","customFunction","activeTool","filterToolsWithMoveableHandles","ToolAndAnnotations","toolsWithMoveableHandles","filterMoveableAnnotationTools","moveableAnnotationTools","shiftKey","ctrlKey","ShiftCtrl","altKey","ShiftAlt","metaKey","ShiftMeta","Shift","CtrlAlt","CtrlMeta","Ctrl","AltMeta","Alt","Meta","getActiveToolForMouseEvent","mouseEvent","modifierKey","getMouseModifier","defaultMousePrimary","getDefaultMousePrimary","correctBinding","bindings","binding","getToolsWithModesForMouseEvent","evtButton","mouseDown","isPrimaryClick","applicableTools","annotationToolsWithAnnotations","annotationToolsWithMoveableHandles","isMultiSelect","getAnnotationForSelection","toggleAnnotationSelection","toolsWithMovableHandles","mouseDownActivate","mouseDrag","mouseMove","activeAndPassiveTools","toolsWithAnnotations","toolsWithoutAnnotations","toolAndAnnotation","getActiveToolForKeyboardEvent","keyDown","setViewportsCursorByToolName","keyUp","CAMERA_MODIFIED","IMAGE_SPACING_CALIBRATED","getActiveToolForTouchEvent","touchEvent","numTouchPoints","getToolsWithModesForTouchEvent","touchStart","touchStartActivate","touchDrag","addEnabledElement","svgLayer","svgLayerId","pointerEvents","defs","feOffset","feColorMatrix","feBlend","_createSvgAnnotationLayer","newNode","viewportUid","renderingEngineUid","dataset","elementHash","_setSvgNodeCache","imageRenderedEventDispatcher","cameraModifiedEventDispatcher","imageSpacingCalibratedEventDispatcher","synchronizersFilteredByIds","synchronizer","notDisabled","isDisabled","hasSourceViewport","hasTargetViewport","toolGroupFilteredByIds","tg","_removeViewportFromSynchronizers","sync","remove","_removeViewportFromToolGroup","removeViewports","_removeEnabledElement","foundElementIndex","el","elementDisabledEvt","_resetSvgNodeCache","internalViewportNode","_removeSvgNode","cancelActiveManipulations","toolsWithData","_getViewportIndex","ar","_containsViewport","synchronizerId","eventHandler","_viewportOptions","_onEvent","_ignoreFiredEvents","_targetViewports","_sourceViewports","s","fireEvent","_enabled","_eventName","_eventHandler","_hasSourceElements","setOptions","getOptions","addTarget","addSource","_updateDisableHandlers","getSourceViewports","getTargetViewports","destroy","removeSource","removeTarget","_getViewportElement","sourceEvent","ex","vp1","vp2","unique","vps","u","_getUniqueViewports","_remove","disableHandler","elementDisabledEvent","vUid","ELEMENT_DISABLED","synchronizerIndex","ToolGroup","toolInstanceName","toolDefinition","hasToolName","localToolInstance","instantiatedTool","addToolInstance","parentClassName","ToolClassToUse","ParentClass","ToolInstance","addViewport","renderingEngines","renderingEngineUIDToUse","vpId","getActivePrimaryMouseButtonTool","vpInfo","setToolMode","setToolDisabled","setToolEnabled","setToolPassive","setToolActive","toolBindingsOptions","TouchBinding","MouseBinding","obj","binding1","binding2","hasSameBinding","useCursor","_hasMousePrimaryButtonBinding","_setCursorForViewports","_renderViewports","prevToolOptions","getToolOptions","toolOptionsForTool","_getCursor","setToolConfiguration","_configuration","Primary","getToolConfiguration","configurationPath","toolGroupIndex","MODES","defaultManager","setAnnotationManager","annotationManager","resetAnnotationManager","manager","HTMLDivElement","ANNOTATION_ADDED","triggerAnnotationAddedForElement","viewportsToRender","triggerAnnotationAddedForFOR","ANNOTATION_REMOVED","annotationManagerUID","csToolsInitialized","init","defaultConfiguration","_removeCornerstoneEventListeners","elementEnabledEvent","ELEMENT_ENABLED","_addCornerstoneEventListeners","_removeCornerstoneToolsEventListeners","segmentationDataModifiedEventListener","segmentationRepresentationModifiedEventListener","cameraSyncCallback","synchronizerInstance","cameraModifiedEvent","tViewport","createCameraPositionSynchronizer","synchronizerName","voiSyncCallback","voiModifiedEvent","createVOISynchronizer","VOI_MODIFIED","zoomPanSyncCallback","sViewport","syncZoom","srcZoom","getZoom","setZoom","syncPan","srcPan","getPan","setPan","createZoomPanSynchronizer","stackImageSyncCallback","frameOfReferenceUID1","frameOfReferenceUID2","imageId1","sourceImagePositionPatient","targetImageIds","viewport1","viewport2","viewPlaneNormal1","viewPlaneNormal2","dotProducts","areViewportsCoplanar","closestImageIdIndex","_getClosestImageIdIndex","registrationMatrixMat4","closestImageIdIndex2","createStackImageSynchronizer","HASH_UNDEFINED","INFINITY","funcTag","genTag","symbolTag","reIsDeepProp","reIsPlainProp","reLeadingDot","rePropName","reEscapeChar","reIsHostCtor","freeGlobal","g","freeSelf","self","root","Function","arrayProto","funcProto","objectProto","coreJsData","maskSrcKey","exec","IE_PROTO","funcToString","objectToString","reIsNative","RegExp","getNative","nativeCreate","symbolProto","symbolToString","Hash","entries","entry","ListCache","MapCache","assocIndexOf","other","baseGet","object","path","isSymbol","test","isKey","stringToPath","toKey","baseIsNative","isObject","pattern","tag","isFunction","isHostObject","toSource","getMapData","__data__","getValue","memoize","baseToString","number","quote","resolver","memoized","Cache","isObjectLike","module","exports","defaultValue"],"sourceRoot":""}